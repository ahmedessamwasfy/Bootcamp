
WIFI_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000eb4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008c  00800060  00000eb4  00000f48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002fa  008000ec  008000ec  00000fd4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001004  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001760  00000000  00000000  00001168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a11  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fb0  00000000  00000000  000032d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a8  00000000  00000000  0000428c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083b  00000000  00000000  00004634  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018f8  00000000  00000000  00004e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00006767  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 eb       	ldi	r30, 0xB4	; 180
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3e       	cpi	r26, 0xEC	; 236
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	23 e0       	ldi	r18, 0x03	; 3
  78:	ac ee       	ldi	r26, 0xEC	; 236
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 3e       	cpi	r26, 0xE6	; 230
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4b 01 	call	0x296	; 0x296 <main>
  8a:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_WritePin>:
	}
	else{
		
	}
	
}
  92:	88 30       	cpi	r24, 0x08	; 8
  94:	e8 f4       	brcc	.+58     	; 0xd0 <DIO_WritePin+0x3e>
  96:	61 11       	cpse	r22, r1
  98:	0e c0       	rjmp	.+28     	; 0xb6 <DIO_WritePin+0x24>
  9a:	4b b3       	in	r20, 0x1b	; 27
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	b9 01       	movw	r22, r18
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_WritePin+0x16>
  a4:	66 0f       	add	r22, r22
  a6:	77 1f       	adc	r23, r23
  a8:	8a 95       	dec	r24
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_WritePin+0x12>
  ac:	cb 01       	movw	r24, r22
  ae:	80 95       	com	r24
  b0:	84 23       	and	r24, r20
  b2:	8b bb       	out	0x1b, r24	; 27
  b4:	08 95       	ret
  b6:	4b b3       	in	r20, 0x1b	; 27
  b8:	21 e0       	ldi	r18, 0x01	; 1
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	b9 01       	movw	r22, r18
  be:	02 c0       	rjmp	.+4      	; 0xc4 <DIO_WritePin+0x32>
  c0:	66 0f       	add	r22, r22
  c2:	77 1f       	adc	r23, r23
  c4:	8a 95       	dec	r24
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <DIO_WritePin+0x2e>
  c8:	cb 01       	movw	r24, r22
  ca:	84 2b       	or	r24, r20
  cc:	8b bb       	out	0x1b, r24	; 27
  ce:	08 95       	ret
  d0:	98 ef       	ldi	r25, 0xF8	; 248
  d2:	98 0f       	add	r25, r24
  d4:	98 30       	cpi	r25, 0x08	; 8
  d6:	e8 f4       	brcc	.+58     	; 0x112 <DIO_WritePin+0x80>
  d8:	61 11       	cpse	r22, r1
  da:	0e c0       	rjmp	.+28     	; 0xf8 <DIO_WritePin+0x66>
  dc:	48 b3       	in	r20, 0x18	; 24
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	b9 01       	movw	r22, r18
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_WritePin+0x58>
  e6:	66 0f       	add	r22, r22
  e8:	77 1f       	adc	r23, r23
  ea:	9a 95       	dec	r25
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_WritePin+0x54>
  ee:	cb 01       	movw	r24, r22
  f0:	80 95       	com	r24
  f2:	84 23       	and	r24, r20
  f4:	88 bb       	out	0x18, r24	; 24
  f6:	08 95       	ret
  f8:	48 b3       	in	r20, 0x18	; 24
  fa:	21 e0       	ldi	r18, 0x01	; 1
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	b9 01       	movw	r22, r18
 100:	02 c0       	rjmp	.+4      	; 0x106 <DIO_WritePin+0x74>
 102:	66 0f       	add	r22, r22
 104:	77 1f       	adc	r23, r23
 106:	9a 95       	dec	r25
 108:	e2 f7       	brpl	.-8      	; 0x102 <DIO_WritePin+0x70>
 10a:	cb 01       	movw	r24, r22
 10c:	84 2b       	or	r24, r20
 10e:	88 bb       	out	0x18, r24	; 24
 110:	08 95       	ret
 112:	90 ef       	ldi	r25, 0xF0	; 240
 114:	98 0f       	add	r25, r24
 116:	98 30       	cpi	r25, 0x08	; 8
 118:	e8 f4       	brcc	.+58     	; 0x154 <DIO_WritePin+0xc2>
 11a:	61 11       	cpse	r22, r1
 11c:	0e c0       	rjmp	.+28     	; 0x13a <DIO_WritePin+0xa8>
 11e:	45 b3       	in	r20, 0x15	; 21
 120:	21 e0       	ldi	r18, 0x01	; 1
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	b9 01       	movw	r22, r18
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_WritePin+0x9a>
 128:	66 0f       	add	r22, r22
 12a:	77 1f       	adc	r23, r23
 12c:	9a 95       	dec	r25
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_WritePin+0x96>
 130:	cb 01       	movw	r24, r22
 132:	80 95       	com	r24
 134:	84 23       	and	r24, r20
 136:	85 bb       	out	0x15, r24	; 21
 138:	08 95       	ret
 13a:	45 b3       	in	r20, 0x15	; 21
 13c:	21 e0       	ldi	r18, 0x01	; 1
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	b9 01       	movw	r22, r18
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_WritePin+0xb6>
 144:	66 0f       	add	r22, r22
 146:	77 1f       	adc	r23, r23
 148:	9a 95       	dec	r25
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_WritePin+0xb2>
 14c:	cb 01       	movw	r24, r22
 14e:	84 2b       	or	r24, r20
 150:	85 bb       	out	0x15, r24	; 21
 152:	08 95       	ret
 154:	88 51       	subi	r24, 0x18	; 24
 156:	88 30       	cpi	r24, 0x08	; 8
 158:	e0 f4       	brcc	.+56     	; 0x192 <DIO_WritePin+0x100>
 15a:	61 11       	cpse	r22, r1
 15c:	0e c0       	rjmp	.+28     	; 0x17a <DIO_WritePin+0xe8>
 15e:	42 b3       	in	r20, 0x12	; 18
 160:	21 e0       	ldi	r18, 0x01	; 1
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	b9 01       	movw	r22, r18
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_WritePin+0xda>
 168:	66 0f       	add	r22, r22
 16a:	77 1f       	adc	r23, r23
 16c:	8a 95       	dec	r24
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_WritePin+0xd6>
 170:	cb 01       	movw	r24, r22
 172:	80 95       	com	r24
 174:	84 23       	and	r24, r20
 176:	82 bb       	out	0x12, r24	; 18
 178:	08 95       	ret
 17a:	42 b3       	in	r20, 0x12	; 18
 17c:	21 e0       	ldi	r18, 0x01	; 1
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	b9 01       	movw	r22, r18
 182:	02 c0       	rjmp	.+4      	; 0x188 <DIO_WritePin+0xf6>
 184:	66 0f       	add	r22, r22
 186:	77 1f       	adc	r23, r23
 188:	8a 95       	dec	r24
 18a:	e2 f7       	brpl	.-8      	; 0x184 <DIO_WritePin+0xf2>
 18c:	cb 01       	movw	r24, r22
 18e:	84 2b       	or	r24, r20
 190:	82 bb       	out	0x12, r24	; 18
 192:	08 95       	ret

00000194 <DIO_SetPinDirection>:
/* O/p : N/A */
/* Return : void */
/* Function that initialize direction for pin at any port from 0 to 39 pins in 4 ports input or output   */
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection){
	
	if( (PinNum >= 0U) && (PinNum <= 7U) ){
 194:	88 30       	cpi	r24, 0x08	; 8
 196:	e8 f4       	brcc	.+58     	; 0x1d2 <DIO_SetPinDirection+0x3e>
		if(PinDirection == 0U){
 198:	61 11       	cpse	r22, r1
 19a:	0e c0       	rjmp	.+28     	; 0x1b8 <DIO_SetPinDirection+0x24>
			Clear_Bit(DDRA,PinNum);
 19c:	4a b3       	in	r20, 0x1a	; 26
 19e:	21 e0       	ldi	r18, 0x01	; 1
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	b9 01       	movw	r22, r18
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_SetPinDirection+0x16>
 1a6:	66 0f       	add	r22, r22
 1a8:	77 1f       	adc	r23, r23
 1aa:	8a 95       	dec	r24
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_SetPinDirection+0x12>
 1ae:	cb 01       	movw	r24, r22
 1b0:	80 95       	com	r24
 1b2:	84 23       	and	r24, r20
 1b4:	8a bb       	out	0x1a, r24	; 26
 1b6:	08 95       	ret
		}
		else{
			Set_Bit(DDRA,PinNum);
 1b8:	4a b3       	in	r20, 0x1a	; 26
 1ba:	21 e0       	ldi	r18, 0x01	; 1
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	b9 01       	movw	r22, r18
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_SetPinDirection+0x32>
 1c2:	66 0f       	add	r22, r22
 1c4:	77 1f       	adc	r23, r23
 1c6:	8a 95       	dec	r24
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_SetPinDirection+0x2e>
 1ca:	cb 01       	movw	r24, r22
 1cc:	84 2b       	or	r24, r20
 1ce:	8a bb       	out	0x1a, r24	; 26
 1d0:	08 95       	ret
		}
	}
	else if( (PinNum >= 8U) && (PinNum <= 15U) ){
 1d2:	98 ef       	ldi	r25, 0xF8	; 248
 1d4:	98 0f       	add	r25, r24
 1d6:	98 30       	cpi	r25, 0x08	; 8
 1d8:	e8 f4       	brcc	.+58     	; 0x214 <DIO_SetPinDirection+0x80>
		if(PinDirection == 0U){
 1da:	61 11       	cpse	r22, r1
 1dc:	0e c0       	rjmp	.+28     	; 0x1fa <DIO_SetPinDirection+0x66>
			Clear_Bit(DDRB,PinNum-8U);
 1de:	47 b3       	in	r20, 0x17	; 23
 1e0:	21 e0       	ldi	r18, 0x01	; 1
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	b9 01       	movw	r22, r18
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_SetPinDirection+0x58>
 1e8:	66 0f       	add	r22, r22
 1ea:	77 1f       	adc	r23, r23
 1ec:	9a 95       	dec	r25
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_SetPinDirection+0x54>
 1f0:	cb 01       	movw	r24, r22
 1f2:	80 95       	com	r24
 1f4:	84 23       	and	r24, r20
 1f6:	87 bb       	out	0x17, r24	; 23
 1f8:	08 95       	ret
		}
		else{
			Set_Bit(DDRB,PinNum-8U);
 1fa:	47 b3       	in	r20, 0x17	; 23
 1fc:	21 e0       	ldi	r18, 0x01	; 1
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	b9 01       	movw	r22, r18
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_SetPinDirection+0x74>
 204:	66 0f       	add	r22, r22
 206:	77 1f       	adc	r23, r23
 208:	9a 95       	dec	r25
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_SetPinDirection+0x70>
 20c:	cb 01       	movw	r24, r22
 20e:	84 2b       	or	r24, r20
 210:	87 bb       	out	0x17, r24	; 23
 212:	08 95       	ret
		}
	}
	else if( (PinNum >= 16U) && (PinNum <= 23U) ){
 214:	90 ef       	ldi	r25, 0xF0	; 240
 216:	98 0f       	add	r25, r24
 218:	98 30       	cpi	r25, 0x08	; 8
 21a:	e8 f4       	brcc	.+58     	; 0x256 <DIO_SetPinDirection+0xc2>
		if(PinDirection == 0U){
 21c:	61 11       	cpse	r22, r1
 21e:	0e c0       	rjmp	.+28     	; 0x23c <DIO_SetPinDirection+0xa8>
			Clear_Bit(DDRC,PinNum-16);
 220:	44 b3       	in	r20, 0x14	; 20
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	b9 01       	movw	r22, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_SetPinDirection+0x9a>
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	9a 95       	dec	r25
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_SetPinDirection+0x96>
 232:	cb 01       	movw	r24, r22
 234:	80 95       	com	r24
 236:	84 23       	and	r24, r20
 238:	84 bb       	out	0x14, r24	; 20
 23a:	08 95       	ret
		}
		else{
			Set_Bit(DDRC,PinNum-16);
 23c:	44 b3       	in	r20, 0x14	; 20
 23e:	21 e0       	ldi	r18, 0x01	; 1
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	b9 01       	movw	r22, r18
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_SetPinDirection+0xb6>
 246:	66 0f       	add	r22, r22
 248:	77 1f       	adc	r23, r23
 24a:	9a 95       	dec	r25
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_SetPinDirection+0xb2>
 24e:	cb 01       	movw	r24, r22
 250:	84 2b       	or	r24, r20
 252:	84 bb       	out	0x14, r24	; 20
 254:	08 95       	ret
		}
	}
	else if( (PinNum >= 24U) && (PinNum <= 31U) ){
 256:	88 51       	subi	r24, 0x18	; 24
 258:	88 30       	cpi	r24, 0x08	; 8
 25a:	e0 f4       	brcc	.+56     	; 0x294 <DIO_SetPinDirection+0x100>
		if(PinDirection == 0U){
 25c:	61 11       	cpse	r22, r1
 25e:	0e c0       	rjmp	.+28     	; 0x27c <DIO_SetPinDirection+0xe8>
			Clear_Bit(DDRD,PinNum-24);
 260:	41 b3       	in	r20, 0x11	; 17
 262:	21 e0       	ldi	r18, 0x01	; 1
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	b9 01       	movw	r22, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_SetPinDirection+0xda>
 26a:	66 0f       	add	r22, r22
 26c:	77 1f       	adc	r23, r23
 26e:	8a 95       	dec	r24
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_SetPinDirection+0xd6>
 272:	cb 01       	movw	r24, r22
 274:	80 95       	com	r24
 276:	84 23       	and	r24, r20
 278:	81 bb       	out	0x11, r24	; 17
 27a:	08 95       	ret
		}
		else{
			Set_Bit(DDRD,PinNum-24);
 27c:	41 b3       	in	r20, 0x11	; 17
 27e:	21 e0       	ldi	r18, 0x01	; 1
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	b9 01       	movw	r22, r18
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_SetPinDirection+0xf6>
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	8a 95       	dec	r24
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_SetPinDirection+0xf2>
 28e:	cb 01       	movw	r24, r22
 290:	84 2b       	or	r24, r20
 292:	81 bb       	out	0x11, r24	; 17
 294:	08 95       	ret

00000296 <main>:
#define F_CPU 16000000UL

int main(void)
{
	int* DataReceived=NO_Response;
	DIO_SetPinDirection(11,OUTPUT);/* BUZZER OUTPUT */
 296:	61 e0       	ldi	r22, 0x01	; 1
 298:	8b e0       	ldi	r24, 0x0B	; 11
 29a:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
	Disable_Interrupts();
 29e:	f8 94       	cli
	UART_Init(9600,ESP_FillResponseBuffer);
 2a0:	4b e1       	ldi	r20, 0x1B	; 27
 2a2:	53 e0       	ldi	r21, 0x03	; 3
 2a4:	60 e8       	ldi	r22, 0x80	; 128
 2a6:	75 e2       	ldi	r23, 0x25	; 37
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 90 01 	call	0x320	; 0x320 <UART_Init>
	Enable_Interrupts();
 2b0:	78 94       	sei
	WIFI_Service_Start(Server, "1111", "asdd", "1234567890", NULL, NULL, NULL, NULL);/* PORT NUM =1111 , WIFI_NAME=asdd , pwd=1234567890 */
 2b2:	a1 2c       	mov	r10, r1
 2b4:	b1 2c       	mov	r11, r1
 2b6:	c1 2c       	mov	r12, r1
 2b8:	d1 2c       	mov	r13, r1
 2ba:	e1 2c       	mov	r14, r1
 2bc:	f1 2c       	mov	r15, r1
 2be:	00 e0       	ldi	r16, 0x00	; 0
 2c0:	10 e0       	ldi	r17, 0x00	; 0
 2c2:	20 e6       	ldi	r18, 0x60	; 96
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	4b e6       	ldi	r20, 0x6B	; 107
 2c8:	50 e0       	ldi	r21, 0x00	; 0
 2ca:	60 e7       	ldi	r22, 0x70	; 112
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	0e 94 0c 07 	call	0xe18	; 0xe18 <WIFI_Service_Start>
	while(OK_Status!=ESP_SendData("Wifi Demo Started","17"));
 2d4:	65 e7       	ldi	r22, 0x75	; 117
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	88 e7       	ldi	r24, 0x78	; 120
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 ca 05 	call	0xb94	; 0xb94 <ESP_SendData>
 2e0:	81 30       	cpi	r24, 0x01	; 1
 2e2:	c1 f7       	brne	.-16     	; 0x2d4 <main+0x3e>
	//DataReceived=NO_Response;
	
	while(1){/*loop untiles receiving data */
	DataReceived=ESP_ReceiveData();/* if received data by esp module */
 2e4:	0e 94 53 06 	call	0xca6	; 0xca6 <ESP_ReceiveData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e8:	2f e3       	ldi	r18, 0x3F	; 63
 2ea:	3d e0       	ldi	r19, 0x0D	; 13
 2ec:	43 e0       	ldi	r20, 0x03	; 3
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	30 40       	sbci	r19, 0x00	; 0
 2f2:	40 40       	sbci	r20, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x58>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x62>
 2f8:	00 00       	nop
	_delay_ms(1000);
	if(*DataReceived == 'a')/* if data which sent from hercules == a */
 2fa:	fc 01       	movw	r30, r24
 2fc:	80 81       	ld	r24, Z
 2fe:	91 81       	ldd	r25, Z+1	; 0x01
 300:	81 36       	cpi	r24, 0x61	; 97
 302:	91 05       	cpc	r25, r1
 304:	29 f4       	brne	.+10     	; 0x310 <main+0x7a>
	{
		DIO_WritePin(11,HIGH);/* buzzer on */
 306:	61 e0       	ldi	r22, 0x01	; 1
 308:	8b e0       	ldi	r24, 0x0B	; 11
 30a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
 30e:	ea cf       	rjmp	.-44     	; 0x2e4 <main+0x4e>
	}
	else if(*DataReceived == 'b')/* if data which sent from hercules == b */
 310:	82 36       	cpi	r24, 0x62	; 98
 312:	91 05       	cpc	r25, r1
 314:	39 f7       	brne	.-50     	; 0x2e4 <main+0x4e>
	{
	   DIO_WritePin(11,LOW);/* buzzer off */
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	8b e0       	ldi	r24, 0x0B	; 11
 31a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
 31e:	e2 cf       	rjmp	.-60     	; 0x2e4 <main+0x4e>

00000320 <UART_Init>:

char UART_Receive_Byte(void)
{
	while ( !(UCSRA & (1<<RXC)) );
	return UDR;
}
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	ea 01       	movw	r28, r20
 326:	dc 01       	movw	r26, r24
 328:	cb 01       	movw	r24, r22
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	aa 1f       	adc	r26, r26
 330:	bb 1f       	adc	r27, r27
 332:	88 0f       	add	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	aa 1f       	adc	r26, r26
 338:	bb 1f       	adc	r27, r27
 33a:	9c 01       	movw	r18, r24
 33c:	ad 01       	movw	r20, r26
 33e:	22 0f       	add	r18, r18
 340:	33 1f       	adc	r19, r19
 342:	44 1f       	adc	r20, r20
 344:	55 1f       	adc	r21, r21
 346:	22 0f       	add	r18, r18
 348:	33 1f       	adc	r19, r19
 34a:	44 1f       	adc	r20, r20
 34c:	55 1f       	adc	r21, r21
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	74 e2       	ldi	r23, 0x24	; 36
 352:	84 ef       	ldi	r24, 0xF4	; 244
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	0e 94 36 07 	call	0xe6c	; 0xe6c <__udivmodsi4>
 35a:	21 50       	subi	r18, 0x01	; 1
 35c:	31 09       	sbc	r19, r1
 35e:	8a b1       	in	r24, 0x0a	; 10
 360:	88 61       	ori	r24, 0x18	; 24
 362:	8a b9       	out	0x0a, r24	; 10
 364:	20 97       	sbiw	r28, 0x00	; 0
 366:	29 f0       	breq	.+10     	; 0x372 <UART_Init+0x52>
 368:	d0 93 ed 00 	sts	0x00ED, r29	; 0x8000ed <__data_end+0x1>
 36c:	c0 93 ec 00 	sts	0x00EC, r28	; 0x8000ec <__data_end>
 370:	57 9a       	sbi	0x0a, 7	; 10
 372:	30 bd       	out	0x20, r19	; 32
 374:	29 b9       	out	0x09, r18	; 9
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	08 95       	ret

0000037c <UART_Write_Byte>:
 37c:	5d 9b       	sbis	0x0b, 5	; 11
 37e:	fe cf       	rjmp	.-4      	; 0x37c <UART_Write_Byte>
 380:	8c b9       	out	0x0c, r24	; 12
 382:	08 95       	ret

00000384 <UART_Write_String>:
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	ec 01       	movw	r28, r24
 38a:	88 81       	ld	r24, Y
 38c:	88 23       	and	r24, r24
 38e:	31 f0       	breq	.+12     	; 0x39c <UART_Write_String+0x18>
 390:	21 96       	adiw	r28, 0x01	; 1
 392:	0e 94 be 01 	call	0x37c	; 0x37c <UART_Write_Byte>
 396:	89 91       	ld	r24, Y+
 398:	81 11       	cpse	r24, r1
 39a:	fb cf       	rjmp	.-10     	; 0x392 <UART_Write_String+0xe>
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	08 95       	ret

000003a2 <__vector_13>:



ISR(USART_RXC_vect)
{
 3a2:	1f 92       	push	r1
 3a4:	0f 92       	push	r0
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	0f 92       	push	r0
 3aa:	11 24       	eor	r1, r1
 3ac:	2f 93       	push	r18
 3ae:	3f 93       	push	r19
 3b0:	4f 93       	push	r20
 3b2:	5f 93       	push	r21
 3b4:	6f 93       	push	r22
 3b6:	7f 93       	push	r23
 3b8:	8f 93       	push	r24
 3ba:	9f 93       	push	r25
 3bc:	af 93       	push	r26
 3be:	bf 93       	push	r27
 3c0:	ef 93       	push	r30
 3c2:	ff 93       	push	r31
	UART_Rx_Callback(UDR);
 3c4:	8c b1       	in	r24, 0x0c	; 12
 3c6:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__data_end>
 3ca:	f0 91 ed 00 	lds	r31, 0x00ED	; 0x8000ed <__data_end+0x1>
 3ce:	09 95       	icall
}
 3d0:	ff 91       	pop	r31
 3d2:	ef 91       	pop	r30
 3d4:	bf 91       	pop	r27
 3d6:	af 91       	pop	r26
 3d8:	9f 91       	pop	r25
 3da:	8f 91       	pop	r24
 3dc:	7f 91       	pop	r23
 3de:	6f 91       	pop	r22
 3e0:	5f 91       	pop	r21
 3e2:	4f 91       	pop	r20
 3e4:	3f 91       	pop	r19
 3e6:	2f 91       	pop	r18
 3e8:	0f 90       	pop	r0
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	0f 90       	pop	r0
 3ee:	1f 90       	pop	r1
 3f0:	18 95       	reti

000003f2 <ESP_ReadResponseLine>:
 3f2:	8f 92       	push	r8
 3f4:	9f 92       	push	r9
 3f6:	af 92       	push	r10
 3f8:	bf 92       	push	r11
 3fa:	cf 92       	push	r12
 3fc:	df 92       	push	r13
 3fe:	ff 92       	push	r15
 400:	0f 93       	push	r16
 402:	1f 93       	push	r17
 404:	cf 93       	push	r28
 406:	df 93       	push	r29
 408:	00 91 f7 00 	lds	r16, 0x00F7	; 0x8000f7 <ResponseBufferMain_Index>
 40c:	00 23       	and	r16, r16
 40e:	09 f4       	brne	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 410:	f6 c0       	rjmp	.+492    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 412:	f0 90 f5 00 	lds	r15, 0x00F5	; 0x8000f5 <CorrectDataReceived>
 416:	50 91 f6 00 	lds	r21, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 41a:	6f ef       	ldi	r22, 0xFF	; 255
 41c:	60 0f       	add	r22, r16
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	6e 5f       	subi	r22, 0xFE	; 254
 422:	7f 4f       	sbci	r23, 0xFF	; 255
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	10 e0       	ldi	r17, 0x00	; 0
 42a:	dd 24       	eor	r13, r13
 42c:	d3 94       	inc	r13
 42e:	a0 2f       	mov	r26, r16
 430:	b0 e0       	ldi	r27, 0x00	; 0
 432:	ed 01       	movw	r28, r26
 434:	c9 50       	subi	r28, 0x09	; 9
 436:	df 4f       	sbci	r29, 0xFF	; 255
 438:	9d 01       	movw	r18, r26
 43a:	2b 50       	subi	r18, 0x0B	; 11
 43c:	3f 4f       	sbci	r19, 0xFF	; 255
 43e:	49 01       	movw	r8, r18
 440:	b1 2c       	mov	r11, r1
 442:	c1 2c       	mov	r12, r1
 444:	9c 01       	movw	r18, r24
 446:	21 50       	subi	r18, 0x01	; 1
 448:	31 09       	sbc	r19, r1
 44a:	f9 01       	movw	r30, r18
 44c:	e8 50       	subi	r30, 0x08	; 8
 44e:	ff 4f       	sbci	r31, 0xFF	; 255
 450:	40 81       	ld	r20, Z
 452:	4f 34       	cpi	r20, 0x4F	; 79
 454:	69 f4       	brne	.+26     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 456:	fc 01       	movw	r30, r24
 458:	e8 50       	subi	r30, 0x08	; 8
 45a:	ff 4f       	sbci	r31, 0xFF	; 255
 45c:	20 81       	ld	r18, Z
 45e:	2b 34       	cpi	r18, 0x4B	; 75
 460:	09 f0       	breq	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 462:	c4 c0       	rjmp	.+392    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 464:	28 81       	ld	r18, Y
 466:	2d 30       	cpi	r18, 0x0D	; 13
 468:	09 f0       	breq	.+2      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 46a:	c0 c0       	rjmp	.+384    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 46c:	5d 2d       	mov	r21, r13
 46e:	be c0       	rjmp	.+380    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 470:	f9 01       	movw	r30, r18
 472:	e8 50       	subi	r30, 0x08	; 8
 474:	ff 4f       	sbci	r31, 0xFF	; 255
 476:	40 81       	ld	r20, Z
 478:	4b 32       	cpi	r20, 0x2B	; 43
 47a:	09 f0       	breq	.+2      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 47c:	59 c0       	rjmp	.+178    	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 47e:	fc 01       	movw	r30, r24
 480:	e8 50       	subi	r30, 0x08	; 8
 482:	ff 4f       	sbci	r31, 0xFF	; 255
 484:	20 81       	ld	r18, Z
 486:	29 34       	cpi	r18, 0x49	; 73
 488:	09 f0       	breq	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 48a:	45 c0       	rjmp	.+138    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 48c:	d4 01       	movw	r26, r8
 48e:	2c 91       	ld	r18, X
 490:	2b 34       	cpi	r18, 0x4B	; 75
 492:	09 f0       	breq	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 494:	ab c0       	rjmp	.+342    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 496:	e1 2f       	mov	r30, r17
 498:	f0 e0       	ldi	r31, 0x00	; 0
 49a:	9f 01       	movw	r18, r30
 49c:	28 50       	subi	r18, 0x08	; 8
 49e:	3f 4f       	sbci	r19, 0xFF	; 255
 4a0:	d9 01       	movw	r26, r18
 4a2:	2c 91       	ld	r18, X
 4a4:	2a 33       	cpi	r18, 0x3A	; 58
 4a6:	49 f0       	breq	.+18     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4a8:	1f 5f       	subi	r17, 0xFF	; 255
 4aa:	e1 2f       	mov	r30, r17
 4ac:	f0 e0       	ldi	r31, 0x00	; 0
 4ae:	df 01       	movw	r26, r30
 4b0:	a8 50       	subi	r26, 0x08	; 8
 4b2:	bf 4f       	sbci	r27, 0xFF	; 255
 4b4:	2c 91       	ld	r18, X
 4b6:	2a 33       	cpi	r18, 0x3A	; 58
 4b8:	b9 f7       	brne	.-18     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4ba:	9f 01       	movw	r18, r30
 4bc:	2f 5f       	subi	r18, 0xFF	; 255
 4be:	3f 4f       	sbci	r19, 0xFF	; 255
 4c0:	a9 01       	movw	r20, r18
 4c2:	48 50       	subi	r20, 0x08	; 8
 4c4:	5f 4f       	sbci	r21, 0xFF	; 255
 4c6:	da 01       	movw	r26, r20
 4c8:	4c 91       	ld	r20, X
 4ca:	4d 30       	cpi	r20, 0x0D	; 13
 4cc:	d9 f0       	breq	.+54     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ce:	4b 2d       	mov	r20, r11
 4d0:	5c 2d       	mov	r21, r12
 4d2:	a1 2c       	mov	r10, r1
 4d4:	d9 01       	movw	r26, r18
 4d6:	a8 50       	subi	r26, 0x08	; 8
 4d8:	bf 4f       	sbci	r27, 0xFF	; 255
 4da:	2c 91       	ld	r18, X
 4dc:	da 01       	movw	r26, r20
 4de:	a8 50       	subi	r26, 0x08	; 8
 4e0:	bf 4f       	sbci	r27, 0xFF	; 255
 4e2:	2c 93       	st	X, r18
 4e4:	a3 94       	inc	r10
 4e6:	4a 2d       	mov	r20, r10
 4e8:	50 e0       	ldi	r21, 0x00	; 0
 4ea:	9a 01       	movw	r18, r20
 4ec:	2e 0f       	add	r18, r30
 4ee:	3f 1f       	adc	r19, r31
 4f0:	2f 5f       	subi	r18, 0xFF	; 255
 4f2:	3f 4f       	sbci	r19, 0xFF	; 255
 4f4:	d9 01       	movw	r26, r18
 4f6:	a8 50       	subi	r26, 0x08	; 8
 4f8:	bf 4f       	sbci	r27, 0xFF	; 255
 4fa:	fc 90       	ld	r15, X
 4fc:	bd e0       	ldi	r27, 0x0D	; 13
 4fe:	fb 12       	cpse	r15, r27
 500:	e9 cf       	rjmp	.-46     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 502:	02 c0       	rjmp	.+4      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 504:	4b 2d       	mov	r20, r11
 506:	5c 2d       	mov	r21, r12
 508:	fa 01       	movw	r30, r20
 50a:	e8 50       	subi	r30, 0x08	; 8
 50c:	ff 4f       	sbci	r31, 0xFF	; 255
 50e:	10 82       	st	Z, r1
 510:	fd 2c       	mov	r15, r13
 512:	5d 2d       	mov	r21, r13
 514:	6b c0       	rjmp	.+214    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 516:	fc 01       	movw	r30, r24
 518:	e8 50       	subi	r30, 0x08	; 8
 51a:	ff 4f       	sbci	r31, 0xFF	; 255
 51c:	20 81       	ld	r18, Z
 51e:	23 34       	cpi	r18, 0x43	; 67
 520:	09 f0       	breq	.+2      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 522:	64 c0       	rjmp	.+200    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 524:	28 81       	ld	r18, Y
 526:	2d 30       	cpi	r18, 0x0D	; 13
 528:	09 f0       	breq	.+2      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 52a:	60 c0       	rjmp	.+192    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 52c:	5d 2d       	mov	r21, r13
 52e:	5e c0       	rjmp	.+188    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 530:	f9 01       	movw	r30, r18
 532:	e8 50       	subi	r30, 0x08	; 8
 534:	ff 4f       	sbci	r31, 0xFF	; 255
 536:	40 81       	ld	r20, Z
 538:	45 34       	cpi	r20, 0x45	; 69
 53a:	99 f4       	brne	.+38     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 53c:	fc 01       	movw	r30, r24
 53e:	e8 50       	subi	r30, 0x08	; 8
 540:	ff 4f       	sbci	r31, 0xFF	; 255
 542:	20 81       	ld	r18, Z
 544:	22 35       	cpi	r18, 0x52	; 82
 546:	09 f0       	breq	.+2      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 548:	51 c0       	rjmp	.+162    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 54a:	28 81       	ld	r18, Y
 54c:	2d 30       	cpi	r18, 0x0D	; 13
 54e:	09 f0       	breq	.+2      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 550:	4d c0       	rjmp	.+154    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 552:	50 93 f6 00 	sts	0x00F6, r21	; 0x8000f6 <ReceivedFullResponse>
 556:	f0 92 f5 00 	sts	0x00F5, r15	; 0x8000f5 <CorrectDataReceived>
 55a:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <ResponseBufferMain_Index>
 55e:	80 e0       	ldi	r24, 0x00	; 0
 560:	5e c0       	rjmp	.+188    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 562:	f9 01       	movw	r30, r18
 564:	e8 50       	subi	r30, 0x08	; 8
 566:	ff 4f       	sbci	r31, 0xFF	; 255
 568:	40 81       	ld	r20, Z
 56a:	4e 34       	cpi	r20, 0x4E	; 78
 56c:	09 f5       	brne	.+66     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 56e:	fc 01       	movw	r30, r24
 570:	e8 50       	subi	r30, 0x08	; 8
 572:	ff 4f       	sbci	r31, 0xFF	; 255
 574:	20 81       	ld	r18, Z
 576:	2e 34       	cpi	r18, 0x4E	; 78
 578:	c9 f5       	brne	.+114    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 57a:	28 81       	ld	r18, Y
 57c:	2d 30       	cpi	r18, 0x0D	; 13
 57e:	b1 f5       	brne	.+108    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 580:	21 2f       	mov	r18, r17
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	f9 01       	movw	r30, r18
 586:	e8 50       	subi	r30, 0x08	; 8
 588:	ff 4f       	sbci	r31, 0xFF	; 255
 58a:	40 81       	ld	r20, Z
 58c:	4c 32       	cpi	r20, 0x2C	; 44
 58e:	49 f0       	breq	.+18     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 590:	1f 5f       	subi	r17, 0xFF	; 255
 592:	21 2f       	mov	r18, r17
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	f9 01       	movw	r30, r18
 598:	e8 50       	subi	r30, 0x08	; 8
 59a:	ff 4f       	sbci	r31, 0xFF	; 255
 59c:	40 81       	ld	r20, Z
 59e:	4c 32       	cpi	r20, 0x2C	; 44
 5a0:	b9 f7       	brne	.-18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 5a2:	1f 5f       	subi	r17, 0xFF	; 255
 5a4:	f9 01       	movw	r30, r18
 5a6:	e8 50       	subi	r30, 0x08	; 8
 5a8:	ff 4f       	sbci	r31, 0xFF	; 255
 5aa:	10 82       	st	Z, r1
 5ac:	5d 2d       	mov	r21, r13
 5ae:	1e c0       	rjmp	.+60     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5b0:	f9 01       	movw	r30, r18
 5b2:	e8 50       	subi	r30, 0x08	; 8
 5b4:	ff 4f       	sbci	r31, 0xFF	; 255
 5b6:	40 81       	ld	r20, Z
 5b8:	4e 33       	cpi	r20, 0x3E	; 62
 5ba:	b9 f0       	breq	.+46     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5bc:	f9 01       	movw	r30, r18
 5be:	e8 50       	subi	r30, 0x08	; 8
 5c0:	ff 4f       	sbci	r31, 0xFF	; 255
 5c2:	20 81       	ld	r18, Z
 5c4:	23 35       	cpi	r18, 0x53	; 83
 5c6:	91 f4       	brne	.+36     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5c8:	fc 01       	movw	r30, r24
 5ca:	e8 50       	subi	r30, 0x08	; 8
 5cc:	ff 4f       	sbci	r31, 0xFF	; 255
 5ce:	20 81       	ld	r18, Z
 5d0:	25 34       	cpi	r18, 0x45	; 69
 5d2:	61 f4       	brne	.+24     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5d4:	fc 01       	movw	r30, r24
 5d6:	e8 50       	subi	r30, 0x08	; 8
 5d8:	ff 4f       	sbci	r31, 0xFF	; 255
 5da:	20 81       	ld	r18, Z
 5dc:	2e 34       	cpi	r18, 0x4E	; 78
 5de:	31 f4       	brne	.+12     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e0:	28 81       	ld	r18, Y
 5e2:	2d 30       	cpi	r18, 0x0D	; 13
 5e4:	19 f4       	brne	.+6      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e6:	5d 2d       	mov	r21, r13
 5e8:	01 c0       	rjmp	.+2      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5ea:	5d 2d       	mov	r21, r13
 5ec:	01 96       	adiw	r24, 0x01	; 1
 5ee:	86 17       	cp	r24, r22
 5f0:	97 07       	cpc	r25, r23
 5f2:	09 f0       	breq	.+2      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f4:	27 cf       	rjmp	.-434    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 5f6:	50 93 f6 00 	sts	0x00F6, r21	; 0x8000f6 <ReceivedFullResponse>
 5fa:	f0 92 f5 00 	sts	0x00F5, r15	; 0x8000f5 <CorrectDataReceived>
 5fe:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 602:	88 23       	and	r24, r24
 604:	59 f0       	breq	.+22     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	80 0f       	add	r24, r16
 60a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <ResponseBufferMain_Index>
 60e:	e0 2f       	mov	r30, r16
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	e8 50       	subi	r30, 0x08	; 8
 614:	ff 4f       	sbci	r31, 0xFF	; 255
 616:	10 82       	st	Z, r1
 618:	81 e0       	ldi	r24, 0x01	; 1
 61a:	01 c0       	rjmp	.+2      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 61c:	82 e0       	ldi	r24, 0x02	; 2
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	1f 91       	pop	r17
 624:	0f 91       	pop	r16
 626:	ff 90       	pop	r15
 628:	df 90       	pop	r13
 62a:	cf 90       	pop	r12
 62c:	bf 90       	pop	r11
 62e:	af 90       	pop	r10
 630:	9f 90       	pop	r9
 632:	8f 90       	pop	r8
 634:	08 95       	ret

00000636 <ESP_FillResponseBuffer>:
 636:	e0 91 f7 00 	lds	r30, 0x00F7	; 0x8000f7 <ResponseBufferMain_Index>
 63a:	91 e0       	ldi	r25, 0x01	; 1
 63c:	9e 0f       	add	r25, r30
 63e:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <ResponseBufferMain_Index>
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	e8 50       	subi	r30, 0x08	; 8
 646:	ff 4f       	sbci	r31, 0xFF	; 255
 648:	80 83       	st	Z, r24
 64a:	9a 3f       	cpi	r25, 0xFA	; 250
 64c:	11 f4       	brne	.+4      	; 0x652 <ESP_FillResponseBuffer+0x1c>
 64e:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <ResponseBufferMain_Index>
 652:	08 95       	ret

00000654 <ESP_ClearResponseBuffer>:
 654:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <ResponseBufferMain_Index>
 658:	22 23       	and	r18, r18
 65a:	71 f0       	breq	.+28     	; 0x678 <ESP_ClearResponseBuffer+0x24>
 65c:	21 50       	subi	r18, 0x01	; 1
 65e:	30 e0       	ldi	r19, 0x00	; 0
 660:	2f 5f       	subi	r18, 0xFF	; 255
 662:	3f 4f       	sbci	r19, 0xFF	; 255
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	fc 01       	movw	r30, r24
 66a:	e8 50       	subi	r30, 0x08	; 8
 66c:	ff 4f       	sbci	r31, 0xFF	; 255
 66e:	10 82       	st	Z, r1
 670:	01 96       	adiw	r24, 0x01	; 1
 672:	82 17       	cp	r24, r18
 674:	93 07       	cpc	r25, r19
 676:	c1 f7       	brne	.-16     	; 0x668 <ESP_ClearResponseBuffer+0x14>
 678:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <ResponseBufferMain_Index>
 67c:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <ReceivedFullResponse>
 680:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <CorrectDataReceived>
 684:	08 95       	ret

00000686 <ESP_Enable_multiple_connections>:
 686:	0f 93       	push	r16
 688:	1f 93       	push	r17
 68a:	cf 93       	push	r28
 68c:	df 93       	push	r29
 68e:	cd b7       	in	r28, 0x3d	; 61
 690:	de b7       	in	r29, 0x3e	; 62
 692:	2b 97       	sbiw	r28, 0x0b	; 11
 694:	0f b6       	in	r0, 0x3f	; 63
 696:	f8 94       	cli
 698:	de bf       	out	0x3e, r29	; 62
 69a:	0f be       	out	0x3f, r0	; 63
 69c:	cd bf       	out	0x3d, r28	; 61
 69e:	8c 01       	movw	r16, r24
 6a0:	8b e0       	ldi	r24, 0x0B	; 11
 6a2:	ea e8       	ldi	r30, 0x8A	; 138
 6a4:	f0 e0       	ldi	r31, 0x00	; 0
 6a6:	de 01       	movw	r26, r28
 6a8:	11 96       	adiw	r26, 0x01	; 1
 6aa:	01 90       	ld	r0, Z+
 6ac:	0d 92       	st	X+, r0
 6ae:	8a 95       	dec	r24
 6b0:	e1 f7       	brne	.-8      	; 0x6aa <ESP_Enable_multiple_connections+0x24>
 6b2:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <RequestSent.1811>
 6b6:	81 11       	cpse	r24, r1
 6b8:	45 c0       	rjmp	.+138    	; 0x744 <ESP_Enable_multiple_connections+0xbe>
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <RequestSent.1811>
 6c0:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 6c4:	29 81       	ldd	r18, Y+1	; 0x01
 6c6:	22 23       	and	r18, r18
 6c8:	a1 f0       	breq	.+40     	; 0x6f2 <ESP_Enable_multiple_connections+0x6c>
 6ca:	80 e0       	ldi	r24, 0x00	; 0
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	e0 e0       	ldi	r30, 0x00	; 0
 6d0:	ef 5f       	subi	r30, 0xFF	; 255
 6d2:	dc 01       	movw	r26, r24
 6d4:	ae 50       	subi	r26, 0x0E	; 14
 6d6:	be 4f       	sbci	r27, 0xFE	; 254
 6d8:	2c 93       	st	X, r18
 6da:	8e 2f       	mov	r24, r30
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	a1 e0       	ldi	r26, 0x01	; 1
 6e0:	b0 e0       	ldi	r27, 0x00	; 0
 6e2:	ac 0f       	add	r26, r28
 6e4:	bd 1f       	adc	r27, r29
 6e6:	a8 0f       	add	r26, r24
 6e8:	b9 1f       	adc	r27, r25
 6ea:	2c 91       	ld	r18, X
 6ec:	21 11       	cpse	r18, r1
 6ee:	f0 cf       	rjmp	.-32     	; 0x6d0 <ESP_Enable_multiple_connections+0x4a>
 6f0:	01 c0       	rjmp	.+2      	; 0x6f4 <ESP_Enable_multiple_connections+0x6e>
 6f2:	e0 e0       	ldi	r30, 0x00	; 0
 6f4:	d8 01       	movw	r26, r16
 6f6:	9c 91       	ld	r25, X
 6f8:	99 23       	and	r25, r25
 6fa:	61 f0       	breq	.+24     	; 0x714 <ESP_Enable_multiple_connections+0x8e>
 6fc:	11 96       	adiw	r26, 0x01	; 1
 6fe:	21 e0       	ldi	r18, 0x01	; 1
 700:	2e 0f       	add	r18, r30
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	ee 50       	subi	r30, 0x0E	; 14
 706:	fe 4f       	sbci	r31, 0xFE	; 254
 708:	90 83       	st	Z, r25
 70a:	9d 91       	ld	r25, X+
 70c:	e2 2f       	mov	r30, r18
 70e:	91 11       	cpse	r25, r1
 710:	f6 cf       	rjmp	.-20     	; 0x6fe <ESP_Enable_multiple_connections+0x78>
 712:	01 c0       	rjmp	.+2      	; 0x716 <ESP_Enable_multiple_connections+0x90>
 714:	2e 2f       	mov	r18, r30
 716:	e2 2f       	mov	r30, r18
 718:	f0 e0       	ldi	r31, 0x00	; 0
 71a:	ee 50       	subi	r30, 0x0E	; 14
 71c:	fe 4f       	sbci	r31, 0xFE	; 254
 71e:	8d e0       	ldi	r24, 0x0D	; 13
 720:	80 83       	st	Z, r24
 722:	e1 e0       	ldi	r30, 0x01	; 1
 724:	e2 0f       	add	r30, r18
 726:	f0 e0       	ldi	r31, 0x00	; 0
 728:	ee 50       	subi	r30, 0x0E	; 14
 72a:	fe 4f       	sbci	r31, 0xFE	; 254
 72c:	8a e0       	ldi	r24, 0x0A	; 10
 72e:	80 83       	st	Z, r24
 730:	2e 5f       	subi	r18, 0xFE	; 254
 732:	e2 2f       	mov	r30, r18
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	ee 50       	subi	r30, 0x0E	; 14
 738:	fe 4f       	sbci	r31, 0xFE	; 254
 73a:	10 82       	st	Z, r1
 73c:	82 ef       	ldi	r24, 0xF2	; 242
 73e:	91 e0       	ldi	r25, 0x01	; 1
 740:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 744:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 748:	88 23       	and	r24, r24
 74a:	c1 f0       	breq	.+48     	; 0x77c <ESP_Enable_multiple_connections+0xf6>
 74c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 750:	82 30       	cpi	r24, 0x02	; 2
 752:	a1 f0       	breq	.+40     	; 0x77c <ESP_Enable_multiple_connections+0xf6>
 754:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 758:	88 23       	and	r24, r24
 75a:	79 f0       	breq	.+30     	; 0x77a <ESP_Enable_multiple_connections+0xf4>
 75c:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 760:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <RequestSent.1811>
 764:	bf e1       	ldi	r27, 0x1F	; 31
 766:	2f eb       	ldi	r18, 0xBF	; 191
 768:	82 e0       	ldi	r24, 0x02	; 2
 76a:	b1 50       	subi	r27, 0x01	; 1
 76c:	20 40       	sbci	r18, 0x00	; 0
 76e:	80 40       	sbci	r24, 0x00	; 0
 770:	e1 f7       	brne	.-8      	; 0x76a <ESP_Enable_multiple_connections+0xe4>
 772:	00 c0       	rjmp	.+0      	; 0x774 <ESP_Enable_multiple_connections+0xee>
 774:	00 00       	nop
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	01 c0       	rjmp	.+2      	; 0x77c <ESP_Enable_multiple_connections+0xf6>
 77a:	82 e0       	ldi	r24, 0x02	; 2
 77c:	2b 96       	adiw	r28, 0x0b	; 11
 77e:	0f b6       	in	r0, 0x3f	; 63
 780:	f8 94       	cli
 782:	de bf       	out	0x3e, r29	; 62
 784:	0f be       	out	0x3f, r0	; 63
 786:	cd bf       	out	0x3d, r28	; 61
 788:	df 91       	pop	r29
 78a:	cf 91       	pop	r28
 78c:	1f 91       	pop	r17
 78e:	0f 91       	pop	r16
 790:	08 95       	ret

00000792 <ESP_Configure_As_server>:
 792:	0f 93       	push	r16
 794:	1f 93       	push	r17
 796:	cf 93       	push	r28
 798:	df 93       	push	r29
 79a:	cd b7       	in	r28, 0x3d	; 61
 79c:	de b7       	in	r29, 0x3e	; 62
 79e:	60 97       	sbiw	r28, 0x10	; 16
 7a0:	0f b6       	in	r0, 0x3f	; 63
 7a2:	f8 94       	cli
 7a4:	de bf       	out	0x3e, r29	; 62
 7a6:	0f be       	out	0x3f, r0	; 63
 7a8:	cd bf       	out	0x3d, r28	; 61
 7aa:	8c 01       	movw	r16, r24
 7ac:	80 e1       	ldi	r24, 0x10	; 16
 7ae:	e5 e9       	ldi	r30, 0x95	; 149
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	de 01       	movw	r26, r28
 7b4:	11 96       	adiw	r26, 0x01	; 1
 7b6:	01 90       	ld	r0, Z+
 7b8:	0d 92       	st	X+, r0
 7ba:	8a 95       	dec	r24
 7bc:	e1 f7       	brne	.-8      	; 0x7b6 <ESP_Configure_As_server+0x24>
 7be:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <RequestSent.1823>
 7c2:	81 11       	cpse	r24, r1
 7c4:	45 c0       	rjmp	.+138    	; 0x850 <ESP_Configure_As_server+0xbe>
 7c6:	81 e0       	ldi	r24, 0x01	; 1
 7c8:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <RequestSent.1823>
 7cc:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 7d0:	29 81       	ldd	r18, Y+1	; 0x01
 7d2:	22 23       	and	r18, r18
 7d4:	a1 f0       	breq	.+40     	; 0x7fe <ESP_Configure_As_server+0x6c>
 7d6:	80 e0       	ldi	r24, 0x00	; 0
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	e0 e0       	ldi	r30, 0x00	; 0
 7dc:	ef 5f       	subi	r30, 0xFF	; 255
 7de:	dc 01       	movw	r26, r24
 7e0:	ae 50       	subi	r26, 0x0E	; 14
 7e2:	be 4f       	sbci	r27, 0xFE	; 254
 7e4:	2c 93       	st	X, r18
 7e6:	8e 2f       	mov	r24, r30
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	a1 e0       	ldi	r26, 0x01	; 1
 7ec:	b0 e0       	ldi	r27, 0x00	; 0
 7ee:	ac 0f       	add	r26, r28
 7f0:	bd 1f       	adc	r27, r29
 7f2:	a8 0f       	add	r26, r24
 7f4:	b9 1f       	adc	r27, r25
 7f6:	2c 91       	ld	r18, X
 7f8:	21 11       	cpse	r18, r1
 7fa:	f0 cf       	rjmp	.-32     	; 0x7dc <ESP_Configure_As_server+0x4a>
 7fc:	01 c0       	rjmp	.+2      	; 0x800 <ESP_Configure_As_server+0x6e>
 7fe:	e0 e0       	ldi	r30, 0x00	; 0
 800:	d8 01       	movw	r26, r16
 802:	9c 91       	ld	r25, X
 804:	99 23       	and	r25, r25
 806:	61 f0       	breq	.+24     	; 0x820 <ESP_Configure_As_server+0x8e>
 808:	11 96       	adiw	r26, 0x01	; 1
 80a:	21 e0       	ldi	r18, 0x01	; 1
 80c:	2e 0f       	add	r18, r30
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	ee 50       	subi	r30, 0x0E	; 14
 812:	fe 4f       	sbci	r31, 0xFE	; 254
 814:	90 83       	st	Z, r25
 816:	9d 91       	ld	r25, X+
 818:	e2 2f       	mov	r30, r18
 81a:	91 11       	cpse	r25, r1
 81c:	f6 cf       	rjmp	.-20     	; 0x80a <ESP_Configure_As_server+0x78>
 81e:	01 c0       	rjmp	.+2      	; 0x822 <ESP_Configure_As_server+0x90>
 820:	2e 2f       	mov	r18, r30
 822:	e2 2f       	mov	r30, r18
 824:	f0 e0       	ldi	r31, 0x00	; 0
 826:	ee 50       	subi	r30, 0x0E	; 14
 828:	fe 4f       	sbci	r31, 0xFE	; 254
 82a:	8d e0       	ldi	r24, 0x0D	; 13
 82c:	80 83       	st	Z, r24
 82e:	e1 e0       	ldi	r30, 0x01	; 1
 830:	e2 0f       	add	r30, r18
 832:	f0 e0       	ldi	r31, 0x00	; 0
 834:	ee 50       	subi	r30, 0x0E	; 14
 836:	fe 4f       	sbci	r31, 0xFE	; 254
 838:	8a e0       	ldi	r24, 0x0A	; 10
 83a:	80 83       	st	Z, r24
 83c:	2e 5f       	subi	r18, 0xFE	; 254
 83e:	e2 2f       	mov	r30, r18
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	ee 50       	subi	r30, 0x0E	; 14
 844:	fe 4f       	sbci	r31, 0xFE	; 254
 846:	10 82       	st	Z, r1
 848:	82 ef       	ldi	r24, 0xF2	; 242
 84a:	91 e0       	ldi	r25, 0x01	; 1
 84c:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 850:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 854:	88 23       	and	r24, r24
 856:	c1 f0       	breq	.+48     	; 0x888 <__stack+0x29>
 858:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 85c:	82 30       	cpi	r24, 0x02	; 2
 85e:	a1 f0       	breq	.+40     	; 0x888 <__stack+0x29>
 860:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 864:	88 23       	and	r24, r24
 866:	79 f0       	breq	.+30     	; 0x886 <__stack+0x27>
 868:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 86c:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <RequestSent.1823>
 870:	bf e1       	ldi	r27, 0x1F	; 31
 872:	2f eb       	ldi	r18, 0xBF	; 191
 874:	82 e0       	ldi	r24, 0x02	; 2
 876:	b1 50       	subi	r27, 0x01	; 1
 878:	20 40       	sbci	r18, 0x00	; 0
 87a:	80 40       	sbci	r24, 0x00	; 0
 87c:	e1 f7       	brne	.-8      	; 0x876 <__stack+0x17>
 87e:	00 c0       	rjmp	.+0      	; 0x880 <__stack+0x21>
 880:	00 00       	nop
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	01 c0       	rjmp	.+2      	; 0x888 <__stack+0x29>
 886:	82 e0       	ldi	r24, 0x02	; 2
 888:	60 96       	adiw	r28, 0x10	; 16
 88a:	0f b6       	in	r0, 0x3f	; 63
 88c:	f8 94       	cli
 88e:	de bf       	out	0x3e, r29	; 62
 890:	0f be       	out	0x3f, r0	; 63
 892:	cd bf       	out	0x3d, r28	; 61
 894:	df 91       	pop	r29
 896:	cf 91       	pop	r28
 898:	1f 91       	pop	r17
 89a:	0f 91       	pop	r16
 89c:	08 95       	ret

0000089e <ESP_SelectMode>:
 89e:	1f 93       	push	r17
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	cd b7       	in	r28, 0x3d	; 61
 8a6:	de b7       	in	r29, 0x3e	; 62
 8a8:	2b 97       	sbiw	r28, 0x0b	; 11
 8aa:	0f b6       	in	r0, 0x3f	; 63
 8ac:	f8 94       	cli
 8ae:	de bf       	out	0x3e, r29	; 62
 8b0:	0f be       	out	0x3f, r0	; 63
 8b2:	cd bf       	out	0x3d, r28	; 61
 8b4:	18 2f       	mov	r17, r24
 8b6:	8b e0       	ldi	r24, 0x0B	; 11
 8b8:	e5 ea       	ldi	r30, 0xA5	; 165
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	de 01       	movw	r26, r28
 8be:	11 96       	adiw	r26, 0x01	; 1
 8c0:	01 90       	ld	r0, Z+
 8c2:	0d 92       	st	X+, r0
 8c4:	8a 95       	dec	r24
 8c6:	e1 f7       	brne	.-8      	; 0x8c0 <ESP_SelectMode+0x22>
 8c8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <RequestSent.1845>
 8cc:	81 11       	cpse	r24, r1
 8ce:	3a c0       	rjmp	.+116    	; 0x944 <ESP_SelectMode+0xa6>
 8d0:	81 e0       	ldi	r24, 0x01	; 1
 8d2:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <RequestSent.1845>
 8d6:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 8da:	29 81       	ldd	r18, Y+1	; 0x01
 8dc:	22 23       	and	r18, r18
 8de:	a1 f0       	breq	.+40     	; 0x908 <ESP_SelectMode+0x6a>
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	e0 e0       	ldi	r30, 0x00	; 0
 8e6:	ef 5f       	subi	r30, 0xFF	; 255
 8e8:	dc 01       	movw	r26, r24
 8ea:	ae 50       	subi	r26, 0x0E	; 14
 8ec:	be 4f       	sbci	r27, 0xFE	; 254
 8ee:	2c 93       	st	X, r18
 8f0:	8e 2f       	mov	r24, r30
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	a1 e0       	ldi	r26, 0x01	; 1
 8f6:	b0 e0       	ldi	r27, 0x00	; 0
 8f8:	ac 0f       	add	r26, r28
 8fa:	bd 1f       	adc	r27, r29
 8fc:	a8 0f       	add	r26, r24
 8fe:	b9 1f       	adc	r27, r25
 900:	2c 91       	ld	r18, X
 902:	21 11       	cpse	r18, r1
 904:	f0 cf       	rjmp	.-32     	; 0x8e6 <ESP_SelectMode+0x48>
 906:	03 c0       	rjmp	.+6      	; 0x90e <ESP_SelectMode+0x70>
 908:	80 e0       	ldi	r24, 0x00	; 0
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	e0 e0       	ldi	r30, 0x00	; 0
 90e:	dc 01       	movw	r26, r24
 910:	ae 50       	subi	r26, 0x0E	; 14
 912:	be 4f       	sbci	r27, 0xFE	; 254
 914:	1c 93       	st	X, r17
 916:	a1 e0       	ldi	r26, 0x01	; 1
 918:	ae 0f       	add	r26, r30
 91a:	b0 e0       	ldi	r27, 0x00	; 0
 91c:	ae 50       	subi	r26, 0x0E	; 14
 91e:	be 4f       	sbci	r27, 0xFE	; 254
 920:	8d e0       	ldi	r24, 0x0D	; 13
 922:	8c 93       	st	X, r24
 924:	a2 e0       	ldi	r26, 0x02	; 2
 926:	ae 0f       	add	r26, r30
 928:	b0 e0       	ldi	r27, 0x00	; 0
 92a:	ae 50       	subi	r26, 0x0E	; 14
 92c:	be 4f       	sbci	r27, 0xFE	; 254
 92e:	8a e0       	ldi	r24, 0x0A	; 10
 930:	8c 93       	st	X, r24
 932:	ed 5f       	subi	r30, 0xFD	; 253
 934:	f0 e0       	ldi	r31, 0x00	; 0
 936:	ee 50       	subi	r30, 0x0E	; 14
 938:	fe 4f       	sbci	r31, 0xFE	; 254
 93a:	10 82       	st	Z, r1
 93c:	82 ef       	ldi	r24, 0xF2	; 242
 93e:	91 e0       	ldi	r25, 0x01	; 1
 940:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 944:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 948:	88 23       	and	r24, r24
 94a:	c1 f0       	breq	.+48     	; 0x97c <ESP_SelectMode+0xde>
 94c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 950:	82 30       	cpi	r24, 0x02	; 2
 952:	a1 f0       	breq	.+40     	; 0x97c <ESP_SelectMode+0xde>
 954:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 958:	88 23       	and	r24, r24
 95a:	79 f0       	breq	.+30     	; 0x97a <ESP_SelectMode+0xdc>
 95c:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 960:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <RequestSent.1845>
 964:	2f e1       	ldi	r18, 0x1F	; 31
 966:	8f eb       	ldi	r24, 0xBF	; 191
 968:	92 e0       	ldi	r25, 0x02	; 2
 96a:	21 50       	subi	r18, 0x01	; 1
 96c:	80 40       	sbci	r24, 0x00	; 0
 96e:	90 40       	sbci	r25, 0x00	; 0
 970:	e1 f7       	brne	.-8      	; 0x96a <ESP_SelectMode+0xcc>
 972:	00 c0       	rjmp	.+0      	; 0x974 <ESP_SelectMode+0xd6>
 974:	00 00       	nop
 976:	81 e0       	ldi	r24, 0x01	; 1
 978:	01 c0       	rjmp	.+2      	; 0x97c <ESP_SelectMode+0xde>
 97a:	82 e0       	ldi	r24, 0x02	; 2
 97c:	2b 96       	adiw	r28, 0x0b	; 11
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	df 91       	pop	r29
 98a:	cf 91       	pop	r28
 98c:	1f 91       	pop	r17
 98e:	08 95       	ret

00000990 <ESP_CreateAccesPoint>:
 990:	af 92       	push	r10
 992:	bf 92       	push	r11
 994:	cf 92       	push	r12
 996:	df 92       	push	r13
 998:	ef 92       	push	r14
 99a:	ff 92       	push	r15
 99c:	0f 93       	push	r16
 99e:	1f 93       	push	r17
 9a0:	cf 93       	push	r28
 9a2:	df 93       	push	r29
 9a4:	cd b7       	in	r28, 0x3d	; 61
 9a6:	de b7       	in	r29, 0x3e	; 62
 9a8:	2b 97       	sbiw	r28, 0x0b	; 11
 9aa:	0f b6       	in	r0, 0x3f	; 63
 9ac:	f8 94       	cli
 9ae:	de bf       	out	0x3e, r29	; 62
 9b0:	0f be       	out	0x3f, r0	; 63
 9b2:	cd bf       	out	0x3d, r28	; 61
 9b4:	5c 01       	movw	r10, r24
 9b6:	6b 01       	movw	r12, r22
 9b8:	7a 01       	movw	r14, r20
 9ba:	89 01       	movw	r16, r18
 9bc:	8b e0       	ldi	r24, 0x0B	; 11
 9be:	e0 eb       	ldi	r30, 0xB0	; 176
 9c0:	f0 e0       	ldi	r31, 0x00	; 0
 9c2:	de 01       	movw	r26, r28
 9c4:	11 96       	adiw	r26, 0x01	; 1
 9c6:	01 90       	ld	r0, Z+
 9c8:	0d 92       	st	X+, r0
 9ca:	8a 95       	dec	r24
 9cc:	e1 f7       	brne	.-8      	; 0x9c6 <ESP_CreateAccesPoint+0x36>
 9ce:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <RequestSent.1857>
 9d2:	81 11       	cpse	r24, r1
 9d4:	a1 c0       	rjmp	.+322    	; 0xb18 <ESP_CreateAccesPoint+0x188>
 9d6:	81 e0       	ldi	r24, 0x01	; 1
 9d8:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <RequestSent.1857>
 9dc:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 9e0:	9e 01       	movw	r18, r28
 9e2:	2f 5f       	subi	r18, 0xFF	; 255
 9e4:	3f 4f       	sbci	r19, 0xFF	; 255
 9e6:	ae 01       	movw	r20, r28
 9e8:	44 5f       	subi	r20, 0xF4	; 244
 9ea:	5f 4f       	sbci	r21, 0xFF	; 255
 9ec:	f9 01       	movw	r30, r18
 9ee:	df 01       	movw	r26, r30
 9f0:	a2 1b       	sub	r26, r18
 9f2:	b3 0b       	sbc	r27, r19
 9f4:	81 91       	ld	r24, Z+
 9f6:	ae 50       	subi	r26, 0x0E	; 14
 9f8:	be 4f       	sbci	r27, 0xFE	; 254
 9fa:	8c 93       	st	X, r24
 9fc:	e4 17       	cp	r30, r20
 9fe:	f5 07       	cpc	r31, r21
 a00:	b1 f7       	brne	.-20     	; 0x9ee <ESP_CreateAccesPoint+0x5e>
 a02:	d5 01       	movw	r26, r10
 a04:	8c 91       	ld	r24, X
 a06:	88 23       	and	r24, r24
 a08:	89 f0       	breq	.+34     	; 0xa2c <ESP_CreateAccesPoint+0x9c>
 a0a:	bf ef       	ldi	r27, 0xFF	; 255
 a0c:	ab 1a       	sub	r10, r27
 a0e:	bb 0a       	sbc	r11, r27
 a10:	ea e0       	ldi	r30, 0x0A	; 10
 a12:	a1 e0       	ldi	r26, 0x01	; 1
 a14:	ae 0f       	add	r26, r30
 a16:	f0 e0       	ldi	r31, 0x00	; 0
 a18:	ee 50       	subi	r30, 0x0E	; 14
 a1a:	fe 4f       	sbci	r31, 0xFE	; 254
 a1c:	80 83       	st	Z, r24
 a1e:	f5 01       	movw	r30, r10
 a20:	81 91       	ld	r24, Z+
 a22:	5f 01       	movw	r10, r30
 a24:	ea 2f       	mov	r30, r26
 a26:	81 11       	cpse	r24, r1
 a28:	f4 cf       	rjmp	.-24     	; 0xa12 <ESP_CreateAccesPoint+0x82>
 a2a:	01 c0       	rjmp	.+2      	; 0xa2e <ESP_CreateAccesPoint+0x9e>
 a2c:	aa e0       	ldi	r26, 0x0A	; 10
 a2e:	ea 2f       	mov	r30, r26
 a30:	f0 e0       	ldi	r31, 0x00	; 0
 a32:	ee 50       	subi	r30, 0x0E	; 14
 a34:	fe 4f       	sbci	r31, 0xFE	; 254
 a36:	82 e2       	ldi	r24, 0x22	; 34
 a38:	80 83       	st	Z, r24
 a3a:	e1 e0       	ldi	r30, 0x01	; 1
 a3c:	ea 0f       	add	r30, r26
 a3e:	f0 e0       	ldi	r31, 0x00	; 0
 a40:	ee 50       	subi	r30, 0x0E	; 14
 a42:	fe 4f       	sbci	r31, 0xFE	; 254
 a44:	9c e2       	ldi	r25, 0x2C	; 44
 a46:	90 83       	st	Z, r25
 a48:	e3 e0       	ldi	r30, 0x03	; 3
 a4a:	ea 0f       	add	r30, r26
 a4c:	ae 5f       	subi	r26, 0xFE	; 254
 a4e:	b0 e0       	ldi	r27, 0x00	; 0
 a50:	ae 50       	subi	r26, 0x0E	; 14
 a52:	be 4f       	sbci	r27, 0xFE	; 254
 a54:	8c 93       	st	X, r24
 a56:	d6 01       	movw	r26, r12
 a58:	8c 91       	ld	r24, X
 a5a:	88 23       	and	r24, r24
 a5c:	61 f0       	breq	.+24     	; 0xa76 <ESP_CreateAccesPoint+0xe6>
 a5e:	11 96       	adiw	r26, 0x01	; 1
 a60:	91 e0       	ldi	r25, 0x01	; 1
 a62:	9e 0f       	add	r25, r30
 a64:	f0 e0       	ldi	r31, 0x00	; 0
 a66:	ee 50       	subi	r30, 0x0E	; 14
 a68:	fe 4f       	sbci	r31, 0xFE	; 254
 a6a:	80 83       	st	Z, r24
 a6c:	8d 91       	ld	r24, X+
 a6e:	e9 2f       	mov	r30, r25
 a70:	81 11       	cpse	r24, r1
 a72:	f6 cf       	rjmp	.-20     	; 0xa60 <ESP_CreateAccesPoint+0xd0>
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <ESP_CreateAccesPoint+0xe8>
 a76:	9e 2f       	mov	r25, r30
 a78:	e9 2f       	mov	r30, r25
 a7a:	f0 e0       	ldi	r31, 0x00	; 0
 a7c:	ee 50       	subi	r30, 0x0E	; 14
 a7e:	fe 4f       	sbci	r31, 0xFE	; 254
 a80:	82 e2       	ldi	r24, 0x22	; 34
 a82:	80 83       	st	Z, r24
 a84:	e2 e0       	ldi	r30, 0x02	; 2
 a86:	e9 0f       	add	r30, r25
 a88:	a1 e0       	ldi	r26, 0x01	; 1
 a8a:	a9 0f       	add	r26, r25
 a8c:	b0 e0       	ldi	r27, 0x00	; 0
 a8e:	ae 50       	subi	r26, 0x0E	; 14
 a90:	be 4f       	sbci	r27, 0xFE	; 254
 a92:	8c e2       	ldi	r24, 0x2C	; 44
 a94:	8c 93       	st	X, r24
 a96:	d7 01       	movw	r26, r14
 a98:	8c 91       	ld	r24, X
 a9a:	88 23       	and	r24, r24
 a9c:	61 f0       	breq	.+24     	; 0xab6 <ESP_CreateAccesPoint+0x126>
 a9e:	11 96       	adiw	r26, 0x01	; 1
 aa0:	91 e0       	ldi	r25, 0x01	; 1
 aa2:	9e 0f       	add	r25, r30
 aa4:	f0 e0       	ldi	r31, 0x00	; 0
 aa6:	ee 50       	subi	r30, 0x0E	; 14
 aa8:	fe 4f       	sbci	r31, 0xFE	; 254
 aaa:	80 83       	st	Z, r24
 aac:	8d 91       	ld	r24, X+
 aae:	e9 2f       	mov	r30, r25
 ab0:	81 11       	cpse	r24, r1
 ab2:	f6 cf       	rjmp	.-20     	; 0xaa0 <ESP_CreateAccesPoint+0x110>
 ab4:	01 c0       	rjmp	.+2      	; 0xab8 <ESP_CreateAccesPoint+0x128>
 ab6:	9e 2f       	mov	r25, r30
 ab8:	e1 e0       	ldi	r30, 0x01	; 1
 aba:	e9 0f       	add	r30, r25
 abc:	a9 2f       	mov	r26, r25
 abe:	b0 e0       	ldi	r27, 0x00	; 0
 ac0:	ae 50       	subi	r26, 0x0E	; 14
 ac2:	be 4f       	sbci	r27, 0xFE	; 254
 ac4:	8c e2       	ldi	r24, 0x2C	; 44
 ac6:	8c 93       	st	X, r24
 ac8:	d8 01       	movw	r26, r16
 aca:	8c 91       	ld	r24, X
 acc:	88 23       	and	r24, r24
 ace:	61 f0       	breq	.+24     	; 0xae8 <ESP_CreateAccesPoint+0x158>
 ad0:	11 96       	adiw	r26, 0x01	; 1
 ad2:	91 e0       	ldi	r25, 0x01	; 1
 ad4:	9e 0f       	add	r25, r30
 ad6:	f0 e0       	ldi	r31, 0x00	; 0
 ad8:	ee 50       	subi	r30, 0x0E	; 14
 ada:	fe 4f       	sbci	r31, 0xFE	; 254
 adc:	80 83       	st	Z, r24
 ade:	8d 91       	ld	r24, X+
 ae0:	e9 2f       	mov	r30, r25
 ae2:	81 11       	cpse	r24, r1
 ae4:	f6 cf       	rjmp	.-20     	; 0xad2 <ESP_CreateAccesPoint+0x142>
 ae6:	01 c0       	rjmp	.+2      	; 0xaea <ESP_CreateAccesPoint+0x15a>
 ae8:	9e 2f       	mov	r25, r30
 aea:	e9 2f       	mov	r30, r25
 aec:	f0 e0       	ldi	r31, 0x00	; 0
 aee:	ee 50       	subi	r30, 0x0E	; 14
 af0:	fe 4f       	sbci	r31, 0xFE	; 254
 af2:	8d e0       	ldi	r24, 0x0D	; 13
 af4:	80 83       	st	Z, r24
 af6:	e1 e0       	ldi	r30, 0x01	; 1
 af8:	e9 0f       	add	r30, r25
 afa:	f0 e0       	ldi	r31, 0x00	; 0
 afc:	ee 50       	subi	r30, 0x0E	; 14
 afe:	fe 4f       	sbci	r31, 0xFE	; 254
 b00:	8a e0       	ldi	r24, 0x0A	; 10
 b02:	80 83       	st	Z, r24
 b04:	9e 5f       	subi	r25, 0xFE	; 254
 b06:	e9 2f       	mov	r30, r25
 b08:	f0 e0       	ldi	r31, 0x00	; 0
 b0a:	ee 50       	subi	r30, 0x0E	; 14
 b0c:	fe 4f       	sbci	r31, 0xFE	; 254
 b0e:	10 82       	st	Z, r1
 b10:	82 ef       	ldi	r24, 0xF2	; 242
 b12:	91 e0       	ldi	r25, 0x01	; 1
 b14:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 b18:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 b1c:	88 23       	and	r24, r24
 b1e:	c1 f0       	breq	.+48     	; 0xb50 <ESP_CreateAccesPoint+0x1c0>
 b20:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 b24:	82 30       	cpi	r24, 0x02	; 2
 b26:	a1 f0       	breq	.+40     	; 0xb50 <ESP_CreateAccesPoint+0x1c0>
 b28:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 b2c:	88 23       	and	r24, r24
 b2e:	79 f0       	breq	.+30     	; 0xb4e <ESP_CreateAccesPoint+0x1be>
 b30:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 b34:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <RequestSent.1857>
 b38:	bf e1       	ldi	r27, 0x1F	; 31
 b3a:	ef eb       	ldi	r30, 0xBF	; 191
 b3c:	f2 e0       	ldi	r31, 0x02	; 2
 b3e:	b1 50       	subi	r27, 0x01	; 1
 b40:	e0 40       	sbci	r30, 0x00	; 0
 b42:	f0 40       	sbci	r31, 0x00	; 0
 b44:	e1 f7       	brne	.-8      	; 0xb3e <ESP_CreateAccesPoint+0x1ae>
 b46:	00 c0       	rjmp	.+0      	; 0xb48 <ESP_CreateAccesPoint+0x1b8>
 b48:	00 00       	nop
 b4a:	81 e0       	ldi	r24, 0x01	; 1
 b4c:	01 c0       	rjmp	.+2      	; 0xb50 <ESP_CreateAccesPoint+0x1c0>
 b4e:	82 e0       	ldi	r24, 0x02	; 2
 b50:	2b 96       	adiw	r28, 0x0b	; 11
 b52:	0f b6       	in	r0, 0x3f	; 63
 b54:	f8 94       	cli
 b56:	de bf       	out	0x3e, r29	; 62
 b58:	0f be       	out	0x3f, r0	; 63
 b5a:	cd bf       	out	0x3d, r28	; 61
 b5c:	df 91       	pop	r29
 b5e:	cf 91       	pop	r28
 b60:	1f 91       	pop	r17
 b62:	0f 91       	pop	r16
 b64:	ff 90       	pop	r15
 b66:	ef 90       	pop	r14
 b68:	df 90       	pop	r13
 b6a:	cf 90       	pop	r12
 b6c:	bf 90       	pop	r11
 b6e:	af 90       	pop	r10
 b70:	08 95       	ret

00000b72 <ESP_StartServer>:
 b72:	cf 93       	push	r28
 b74:	df 93       	push	r29
 b76:	ec 01       	movw	r28, r24
 b78:	83 e7       	ldi	r24, 0x73	; 115
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 43 03 	call	0x686	; 0x686 <ESP_Enable_multiple_connections>
 b80:	81 30       	cpi	r24, 0x01	; 1
 b82:	d1 f7       	brne	.-12     	; 0xb78 <ESP_StartServer+0x6>
 b84:	ce 01       	movw	r24, r28
 b86:	0e 94 c9 03 	call	0x792	; 0x792 <ESP_Configure_As_server>
 b8a:	81 30       	cpi	r24, 0x01	; 1
 b8c:	d9 f7       	brne	.-10     	; 0xb84 <ESP_StartServer+0x12>
 b8e:	df 91       	pop	r29
 b90:	cf 91       	pop	r28
 b92:	08 95       	ret

00000b94 <ESP_SendData>:
 b94:	ef 92       	push	r14
 b96:	ff 92       	push	r15
 b98:	0f 93       	push	r16
 b9a:	1f 93       	push	r17
 b9c:	cf 93       	push	r28
 b9e:	df 93       	push	r29
 ba0:	cd b7       	in	r28, 0x3d	; 61
 ba2:	de b7       	in	r29, 0x3e	; 62
 ba4:	2e 97       	sbiw	r28, 0x0e	; 14
 ba6:	0f b6       	in	r0, 0x3f	; 63
 ba8:	f8 94       	cli
 baa:	de bf       	out	0x3e, r29	; 62
 bac:	0f be       	out	0x3f, r0	; 63
 bae:	cd bf       	out	0x3d, r28	; 61
 bb0:	8c 01       	movw	r16, r24
 bb2:	7b 01       	movw	r14, r22
 bb4:	8e e0       	ldi	r24, 0x0E	; 14
 bb6:	ec ed       	ldi	r30, 0xDC	; 220
 bb8:	f0 e0       	ldi	r31, 0x00	; 0
 bba:	de 01       	movw	r26, r28
 bbc:	11 96       	adiw	r26, 0x01	; 1
 bbe:	01 90       	ld	r0, Z+
 bc0:	0d 92       	st	X+, r0
 bc2:	8a 95       	dec	r24
 bc4:	e1 f7       	brne	.-8      	; 0xbbe <ESP_SendData+0x2a>
 bc6:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <RequestSent.1920>
 bca:	81 11       	cpse	r24, r1
 bcc:	40 c0       	rjmp	.+128    	; 0xc4e <ESP_SendData+0xba>
 bce:	81 e0       	ldi	r24, 0x01	; 1
 bd0:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <RequestSent.1920>
 bd4:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 bd8:	9e 01       	movw	r18, r28
 bda:	2f 5f       	subi	r18, 0xFF	; 255
 bdc:	3f 4f       	sbci	r19, 0xFF	; 255
 bde:	ae 01       	movw	r20, r28
 be0:	41 5f       	subi	r20, 0xF1	; 241
 be2:	5f 4f       	sbci	r21, 0xFF	; 255
 be4:	f9 01       	movw	r30, r18
 be6:	df 01       	movw	r26, r30
 be8:	a2 1b       	sub	r26, r18
 bea:	b3 0b       	sbc	r27, r19
 bec:	81 91       	ld	r24, Z+
 bee:	ae 50       	subi	r26, 0x0E	; 14
 bf0:	be 4f       	sbci	r27, 0xFE	; 254
 bf2:	8c 93       	st	X, r24
 bf4:	e4 17       	cp	r30, r20
 bf6:	f5 07       	cpc	r31, r21
 bf8:	b1 f7       	brne	.-20     	; 0xbe6 <ESP_SendData+0x52>
 bfa:	f7 01       	movw	r30, r14
 bfc:	80 81       	ld	r24, Z
 bfe:	88 23       	and	r24, r24
 c00:	71 f0       	breq	.+28     	; 0xc1e <ESP_SendData+0x8a>
 c02:	d7 01       	movw	r26, r14
 c04:	11 96       	adiw	r26, 0x01	; 1
 c06:	ed e0       	ldi	r30, 0x0D	; 13
 c08:	91 e0       	ldi	r25, 0x01	; 1
 c0a:	9e 0f       	add	r25, r30
 c0c:	f0 e0       	ldi	r31, 0x00	; 0
 c0e:	ee 50       	subi	r30, 0x0E	; 14
 c10:	fe 4f       	sbci	r31, 0xFE	; 254
 c12:	80 83       	st	Z, r24
 c14:	8d 91       	ld	r24, X+
 c16:	e9 2f       	mov	r30, r25
 c18:	81 11       	cpse	r24, r1
 c1a:	f6 cf       	rjmp	.-20     	; 0xc08 <ESP_SendData+0x74>
 c1c:	01 c0       	rjmp	.+2      	; 0xc20 <ESP_SendData+0x8c>
 c1e:	9d e0       	ldi	r25, 0x0D	; 13
 c20:	e9 2f       	mov	r30, r25
 c22:	f0 e0       	ldi	r31, 0x00	; 0
 c24:	ee 50       	subi	r30, 0x0E	; 14
 c26:	fe 4f       	sbci	r31, 0xFE	; 254
 c28:	8d e0       	ldi	r24, 0x0D	; 13
 c2a:	80 83       	st	Z, r24
 c2c:	e1 e0       	ldi	r30, 0x01	; 1
 c2e:	e9 0f       	add	r30, r25
 c30:	f0 e0       	ldi	r31, 0x00	; 0
 c32:	ee 50       	subi	r30, 0x0E	; 14
 c34:	fe 4f       	sbci	r31, 0xFE	; 254
 c36:	8a e0       	ldi	r24, 0x0A	; 10
 c38:	80 83       	st	Z, r24
 c3a:	9e 5f       	subi	r25, 0xFE	; 254
 c3c:	e9 2f       	mov	r30, r25
 c3e:	f0 e0       	ldi	r31, 0x00	; 0
 c40:	ee 50       	subi	r30, 0x0E	; 14
 c42:	fe 4f       	sbci	r31, 0xFE	; 254
 c44:	10 82       	st	Z, r1
 c46:	82 ef       	ldi	r24, 0xF2	; 242
 c48:	91 e0       	ldi	r25, 0x01	; 1
 c4a:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 c4e:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 c52:	88 23       	and	r24, r24
 c54:	d9 f0       	breq	.+54     	; 0xc8c <ESP_SendData+0xf8>
 c56:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 c5a:	82 30       	cpi	r24, 0x02	; 2
 c5c:	b9 f0       	breq	.+46     	; 0xc8c <ESP_SendData+0xf8>
 c5e:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 c62:	88 23       	and	r24, r24
 c64:	91 f0       	breq	.+36     	; 0xc8a <ESP_SendData+0xf6>
 c66:	c8 01       	movw	r24, r16
 c68:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 c6c:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 c70:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <RequestSent.1920>
 c74:	ff e1       	ldi	r31, 0x1F	; 31
 c76:	2f eb       	ldi	r18, 0xBF	; 191
 c78:	82 e0       	ldi	r24, 0x02	; 2
 c7a:	f1 50       	subi	r31, 0x01	; 1
 c7c:	20 40       	sbci	r18, 0x00	; 0
 c7e:	80 40       	sbci	r24, 0x00	; 0
 c80:	e1 f7       	brne	.-8      	; 0xc7a <ESP_SendData+0xe6>
 c82:	00 c0       	rjmp	.+0      	; 0xc84 <ESP_SendData+0xf0>
 c84:	00 00       	nop
 c86:	81 e0       	ldi	r24, 0x01	; 1
 c88:	01 c0       	rjmp	.+2      	; 0xc8c <ESP_SendData+0xf8>
 c8a:	82 e0       	ldi	r24, 0x02	; 2
 c8c:	2e 96       	adiw	r28, 0x0e	; 14
 c8e:	0f b6       	in	r0, 0x3f	; 63
 c90:	f8 94       	cli
 c92:	de bf       	out	0x3e, r29	; 62
 c94:	0f be       	out	0x3f, r0	; 63
 c96:	cd bf       	out	0x3d, r28	; 61
 c98:	df 91       	pop	r29
 c9a:	cf 91       	pop	r28
 c9c:	1f 91       	pop	r17
 c9e:	0f 91       	pop	r16
 ca0:	ff 90       	pop	r15
 ca2:	ef 90       	pop	r14
 ca4:	08 95       	ret

00000ca6 <ESP_ReceiveData>:
 ca6:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <RequestSent.1931>
 caa:	81 11       	cpse	r24, r1
 cac:	05 c0       	rjmp	.+10     	; 0xcb8 <ESP_ReceiveData+0x12>
 cae:	81 e0       	ldi	r24, 0x01	; 1
 cb0:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <RequestSent.1931>
 cb4:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 cb8:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 cbc:	88 23       	and	r24, r24
 cbe:	d9 f1       	breq	.+118    	; 0xd36 <ESP_ReceiveData+0x90>
 cc0:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 cc4:	82 30       	cpi	r24, 0x02	; 2
 cc6:	d1 f1       	breq	.+116    	; 0xd3c <ESP_ReceiveData+0x96>
 cc8:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 ccc:	88 23       	and	r24, r24
 cce:	c9 f1       	breq	.+114    	; 0xd42 <ESP_ReceiveData+0x9c>
 cd0:	80 91 f5 00 	lds	r24, 0x00F5	; 0x8000f5 <CorrectDataReceived>
 cd4:	88 23       	and	r24, r24
 cd6:	c1 f1       	breq	.+112    	; 0xd48 <ESP_ReceiveData+0xa2>
 cd8:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <TempResponseBuffer>
 cdc:	88 23       	and	r24, r24
 cde:	a9 f0       	breq	.+42     	; 0xd0a <ESP_ReceiveData+0x64>
 ce0:	80 e0       	ldi	r24, 0x00	; 0
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	20 e0       	ldi	r18, 0x00	; 0
 ce6:	fc 01       	movw	r30, r24
 ce8:	e8 50       	subi	r30, 0x08	; 8
 cea:	ff 4f       	sbci	r31, 0xFF	; 255
 cec:	30 81       	ld	r19, Z
 cee:	fc 01       	movw	r30, r24
 cf0:	e4 51       	subi	r30, 0x14	; 20
 cf2:	fd 4f       	sbci	r31, 0xFD	; 253
 cf4:	30 83       	st	Z, r19
 cf6:	2f 5f       	subi	r18, 0xFF	; 255
 cf8:	82 2f       	mov	r24, r18
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	fc 01       	movw	r30, r24
 cfe:	e8 50       	subi	r30, 0x08	; 8
 d00:	ff 4f       	sbci	r31, 0xFF	; 255
 d02:	30 81       	ld	r19, Z
 d04:	31 11       	cpse	r19, r1
 d06:	ef cf       	rjmp	.-34     	; 0xce6 <ESP_ReceiveData+0x40>
 d08:	02 c0       	rjmp	.+4      	; 0xd0e <ESP_ReceiveData+0x68>
 d0a:	80 e0       	ldi	r24, 0x00	; 0
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	fc 01       	movw	r30, r24
 d10:	e4 51       	subi	r30, 0x14	; 20
 d12:	fd 4f       	sbci	r31, 0xFD	; 253
 d14:	10 82       	st	Z, r1
 d16:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 d1a:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <RequestSent.1931>
 d1e:	2f e1       	ldi	r18, 0x1F	; 31
 d20:	8f eb       	ldi	r24, 0xBF	; 191
 d22:	92 e0       	ldi	r25, 0x02	; 2
 d24:	21 50       	subi	r18, 0x01	; 1
 d26:	80 40       	sbci	r24, 0x00	; 0
 d28:	90 40       	sbci	r25, 0x00	; 0
 d2a:	e1 f7       	brne	.-8      	; 0xd24 <ESP_ReceiveData+0x7e>
 d2c:	00 c0       	rjmp	.+0      	; 0xd2e <ESP_ReceiveData+0x88>
 d2e:	00 00       	nop
 d30:	8c ee       	ldi	r24, 0xEC	; 236
 d32:	92 e0       	ldi	r25, 0x02	; 2
 d34:	08 95       	ret
 d36:	80 e0       	ldi	r24, 0x00	; 0
 d38:	90 e0       	ldi	r25, 0x00	; 0
 d3a:	08 95       	ret
 d3c:	82 e0       	ldi	r24, 0x02	; 2
 d3e:	90 e0       	ldi	r25, 0x00	; 0
 d40:	08 95       	ret
 d42:	82 e0       	ldi	r24, 0x02	; 2
 d44:	90 e0       	ldi	r25, 0x00	; 0
 d46:	08 95       	ret
 d48:	82 e0       	ldi	r24, 0x02	; 2
 d4a:	90 e0       	ldi	r25, 0x00	; 0
 d4c:	08 95       	ret

00000d4e <ESP_InitTest>:
 d4e:	cf 93       	push	r28
 d50:	df 93       	push	r29
 d52:	00 d0       	rcall	.+0      	; 0xd54 <ESP_InitTest+0x6>
 d54:	1f 92       	push	r1
 d56:	cd b7       	in	r28, 0x3d	; 61
 d58:	de b7       	in	r29, 0x3e	; 62
 d5a:	81 e4       	ldi	r24, 0x41	; 65
 d5c:	94 e5       	ldi	r25, 0x54	; 84
 d5e:	9a 83       	std	Y+2, r25	; 0x02
 d60:	89 83       	std	Y+1, r24	; 0x01
 d62:	1b 82       	std	Y+3, r1	; 0x03
 d64:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <RequestSent.1939>
 d68:	81 11       	cpse	r24, r1
 d6a:	34 c0       	rjmp	.+104    	; 0xdd4 <ESP_InitTest+0x86>
 d6c:	81 e0       	ldi	r24, 0x01	; 1
 d6e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <RequestSent.1939>
 d72:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 d76:	29 81       	ldd	r18, Y+1	; 0x01
 d78:	22 23       	and	r18, r18
 d7a:	a1 f0       	breq	.+40     	; 0xda4 <ESP_InitTest+0x56>
 d7c:	80 e0       	ldi	r24, 0x00	; 0
 d7e:	90 e0       	ldi	r25, 0x00	; 0
 d80:	e0 e0       	ldi	r30, 0x00	; 0
 d82:	ef 5f       	subi	r30, 0xFF	; 255
 d84:	dc 01       	movw	r26, r24
 d86:	ae 50       	subi	r26, 0x0E	; 14
 d88:	be 4f       	sbci	r27, 0xFE	; 254
 d8a:	2c 93       	st	X, r18
 d8c:	8e 2f       	mov	r24, r30
 d8e:	90 e0       	ldi	r25, 0x00	; 0
 d90:	a1 e0       	ldi	r26, 0x01	; 1
 d92:	b0 e0       	ldi	r27, 0x00	; 0
 d94:	ac 0f       	add	r26, r28
 d96:	bd 1f       	adc	r27, r29
 d98:	a8 0f       	add	r26, r24
 d9a:	b9 1f       	adc	r27, r25
 d9c:	2c 91       	ld	r18, X
 d9e:	21 11       	cpse	r18, r1
 da0:	f0 cf       	rjmp	.-32     	; 0xd82 <ESP_InitTest+0x34>
 da2:	03 c0       	rjmp	.+6      	; 0xdaa <ESP_InitTest+0x5c>
 da4:	80 e0       	ldi	r24, 0x00	; 0
 da6:	90 e0       	ldi	r25, 0x00	; 0
 da8:	e0 e0       	ldi	r30, 0x00	; 0
 daa:	dc 01       	movw	r26, r24
 dac:	ae 50       	subi	r26, 0x0E	; 14
 dae:	be 4f       	sbci	r27, 0xFE	; 254
 db0:	2d e0       	ldi	r18, 0x0D	; 13
 db2:	2c 93       	st	X, r18
 db4:	a1 e0       	ldi	r26, 0x01	; 1
 db6:	ae 0f       	add	r26, r30
 db8:	b0 e0       	ldi	r27, 0x00	; 0
 dba:	ae 50       	subi	r26, 0x0E	; 14
 dbc:	be 4f       	sbci	r27, 0xFE	; 254
 dbe:	8a e0       	ldi	r24, 0x0A	; 10
 dc0:	8c 93       	st	X, r24
 dc2:	ee 5f       	subi	r30, 0xFE	; 254
 dc4:	f0 e0       	ldi	r31, 0x00	; 0
 dc6:	ee 50       	subi	r30, 0x0E	; 14
 dc8:	fe 4f       	sbci	r31, 0xFE	; 254
 dca:	10 82       	st	Z, r1
 dcc:	82 ef       	ldi	r24, 0xF2	; 242
 dce:	91 e0       	ldi	r25, 0x01	; 1
 dd0:	0e 94 c2 01 	call	0x384	; 0x384 <UART_Write_String>
 dd4:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 dd8:	88 23       	and	r24, r24
 dda:	c1 f0       	breq	.+48     	; 0xe0c <ESP_InitTest+0xbe>
 ddc:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <ESP_ReadResponseLine>
 de0:	82 30       	cpi	r24, 0x02	; 2
 de2:	a1 f0       	breq	.+40     	; 0xe0c <ESP_InitTest+0xbe>
 de4:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <ReceivedFullResponse>
 de8:	88 23       	and	r24, r24
 dea:	79 f0       	breq	.+30     	; 0xe0a <ESP_InitTest+0xbc>
 dec:	0e 94 2a 03 	call	0x654	; 0x654 <ESP_ClearResponseBuffer>
 df0:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <RequestSent.1939>
 df4:	2f e1       	ldi	r18, 0x1F	; 31
 df6:	8f eb       	ldi	r24, 0xBF	; 191
 df8:	92 e0       	ldi	r25, 0x02	; 2
 dfa:	21 50       	subi	r18, 0x01	; 1
 dfc:	80 40       	sbci	r24, 0x00	; 0
 dfe:	90 40       	sbci	r25, 0x00	; 0
 e00:	e1 f7       	brne	.-8      	; 0xdfa <ESP_InitTest+0xac>
 e02:	00 c0       	rjmp	.+0      	; 0xe04 <ESP_InitTest+0xb6>
 e04:	00 00       	nop
 e06:	81 e0       	ldi	r24, 0x01	; 1
 e08:	01 c0       	rjmp	.+2      	; 0xe0c <ESP_InitTest+0xbe>
 e0a:	82 e0       	ldi	r24, 0x02	; 2
 e0c:	0f 90       	pop	r0
 e0e:	0f 90       	pop	r0
 e10:	0f 90       	pop	r0
 e12:	df 91       	pop	r29
 e14:	cf 91       	pop	r28
 e16:	08 95       	ret

00000e18 <WIFI_Service_Start>:
 e18:	ef 92       	push	r14
 e1a:	ff 92       	push	r15
 e1c:	0f 93       	push	r16
 e1e:	1f 93       	push	r17
 e20:	cf 93       	push	r28
 e22:	df 93       	push	r29
 e24:	7b 01       	movw	r14, r22
 e26:	8a 01       	movw	r16, r20
 e28:	e9 01       	movw	r28, r18
 e2a:	81 11       	cpse	r24, r1
 e2c:	18 c0       	rjmp	.+48     	; 0xe5e <WIFI_Service_Start+0x46>
 e2e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <ESP_InitTest>
 e32:	81 30       	cpi	r24, 0x01	; 1
 e34:	e1 f7       	brne	.-8      	; 0xe2e <WIFI_Service_Start+0x16>
 e36:	82 e3       	ldi	r24, 0x32	; 50
 e38:	0e 94 4f 04 	call	0x89e	; 0x89e <ESP_SelectMode>
 e3c:	81 30       	cpi	r24, 0x01	; 1
 e3e:	d9 f7       	brne	.-10     	; 0xe36 <WIFI_Service_Start+0x1e>
 e40:	c7 01       	movw	r24, r14
 e42:	0e 94 b9 05 	call	0xb72	; 0xb72 <ESP_StartServer>
 e46:	81 30       	cpi	r24, 0x01	; 1
 e48:	d9 f7       	brne	.-10     	; 0xe40 <WIFI_Service_Start+0x28>
 e4a:	2a ee       	ldi	r18, 0xEA	; 234
 e4c:	30 e0       	ldi	r19, 0x00	; 0
 e4e:	43 e7       	ldi	r20, 0x73	; 115
 e50:	50 e0       	ldi	r21, 0x00	; 0
 e52:	be 01       	movw	r22, r28
 e54:	c8 01       	movw	r24, r16
 e56:	0e 94 c8 04 	call	0x990	; 0x990 <ESP_CreateAccesPoint>
 e5a:	81 30       	cpi	r24, 0x01	; 1
 e5c:	b1 f7       	brne	.-20     	; 0xe4a <WIFI_Service_Start+0x32>
 e5e:	df 91       	pop	r29
 e60:	cf 91       	pop	r28
 e62:	1f 91       	pop	r17
 e64:	0f 91       	pop	r16
 e66:	ff 90       	pop	r15
 e68:	ef 90       	pop	r14
 e6a:	08 95       	ret

00000e6c <__udivmodsi4>:
 e6c:	a1 e2       	ldi	r26, 0x21	; 33
 e6e:	1a 2e       	mov	r1, r26
 e70:	aa 1b       	sub	r26, r26
 e72:	bb 1b       	sub	r27, r27
 e74:	fd 01       	movw	r30, r26
 e76:	0d c0       	rjmp	.+26     	; 0xe92 <__udivmodsi4_ep>

00000e78 <__udivmodsi4_loop>:
 e78:	aa 1f       	adc	r26, r26
 e7a:	bb 1f       	adc	r27, r27
 e7c:	ee 1f       	adc	r30, r30
 e7e:	ff 1f       	adc	r31, r31
 e80:	a2 17       	cp	r26, r18
 e82:	b3 07       	cpc	r27, r19
 e84:	e4 07       	cpc	r30, r20
 e86:	f5 07       	cpc	r31, r21
 e88:	20 f0       	brcs	.+8      	; 0xe92 <__udivmodsi4_ep>
 e8a:	a2 1b       	sub	r26, r18
 e8c:	b3 0b       	sbc	r27, r19
 e8e:	e4 0b       	sbc	r30, r20
 e90:	f5 0b       	sbc	r31, r21

00000e92 <__udivmodsi4_ep>:
 e92:	66 1f       	adc	r22, r22
 e94:	77 1f       	adc	r23, r23
 e96:	88 1f       	adc	r24, r24
 e98:	99 1f       	adc	r25, r25
 e9a:	1a 94       	dec	r1
 e9c:	69 f7       	brne	.-38     	; 0xe78 <__udivmodsi4_loop>
 e9e:	60 95       	com	r22
 ea0:	70 95       	com	r23
 ea2:	80 95       	com	r24
 ea4:	90 95       	com	r25
 ea6:	9b 01       	movw	r18, r22
 ea8:	ac 01       	movw	r20, r24
 eaa:	bd 01       	movw	r22, r26
 eac:	cf 01       	movw	r24, r30
 eae:	08 95       	ret

00000eb0 <_exit>:
 eb0:	f8 94       	cli

00000eb2 <__stop_program>:
 eb2:	ff cf       	rjmp	.-2      	; 0xeb2 <__stop_program>
