
WIFI_Task.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008c  00800060  000012c4  00001358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002fd  008000ec  008000ec  000013e4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c7d  00000000  00000000  000015e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b30  00000000  00000000  00003265  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001267  00000000  00000000  00003d95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000490  00000000  00000000  00004ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008fa  00000000  00000000  0000548c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019bb  00000000  00000000  00005d86  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00007741  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 93 02 	jmp	0x526	; 0x526 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ec       	ldi	r30, 0xC4	; 196
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3e       	cpi	r26, 0xEC	; 236
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	23 e0       	ldi	r18, 0x03	; 3
      78:	ac ee       	ldi	r26, 0xEC	; 236
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 3e       	cpi	r26, 0xE9	; 233
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 4b 01 	call	0x296	; 0x296 <main>
      8a:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_WritePin>:
	}
	else{
		
	}
	
}
      92:	88 30       	cpi	r24, 0x08	; 8
      94:	e8 f4       	brcc	.+58     	; 0xd0 <DIO_WritePin+0x3e>
      96:	61 11       	cpse	r22, r1
      98:	0e c0       	rjmp	.+28     	; 0xb6 <DIO_WritePin+0x24>
      9a:	4b b3       	in	r20, 0x1b	; 27
      9c:	21 e0       	ldi	r18, 0x01	; 1
      9e:	30 e0       	ldi	r19, 0x00	; 0
      a0:	b9 01       	movw	r22, r18
      a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_WritePin+0x16>
      a4:	66 0f       	add	r22, r22
      a6:	77 1f       	adc	r23, r23
      a8:	8a 95       	dec	r24
      aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_WritePin+0x12>
      ac:	cb 01       	movw	r24, r22
      ae:	80 95       	com	r24
      b0:	84 23       	and	r24, r20
      b2:	8b bb       	out	0x1b, r24	; 27
      b4:	08 95       	ret
      b6:	4b b3       	in	r20, 0x1b	; 27
      b8:	21 e0       	ldi	r18, 0x01	; 1
      ba:	30 e0       	ldi	r19, 0x00	; 0
      bc:	b9 01       	movw	r22, r18
      be:	02 c0       	rjmp	.+4      	; 0xc4 <DIO_WritePin+0x32>
      c0:	66 0f       	add	r22, r22
      c2:	77 1f       	adc	r23, r23
      c4:	8a 95       	dec	r24
      c6:	e2 f7       	brpl	.-8      	; 0xc0 <DIO_WritePin+0x2e>
      c8:	cb 01       	movw	r24, r22
      ca:	84 2b       	or	r24, r20
      cc:	8b bb       	out	0x1b, r24	; 27
      ce:	08 95       	ret
      d0:	98 ef       	ldi	r25, 0xF8	; 248
      d2:	98 0f       	add	r25, r24
      d4:	98 30       	cpi	r25, 0x08	; 8
      d6:	e8 f4       	brcc	.+58     	; 0x112 <DIO_WritePin+0x80>
      d8:	61 11       	cpse	r22, r1
      da:	0e c0       	rjmp	.+28     	; 0xf8 <DIO_WritePin+0x66>
      dc:	48 b3       	in	r20, 0x18	; 24
      de:	21 e0       	ldi	r18, 0x01	; 1
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	b9 01       	movw	r22, r18
      e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_WritePin+0x58>
      e6:	66 0f       	add	r22, r22
      e8:	77 1f       	adc	r23, r23
      ea:	9a 95       	dec	r25
      ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_WritePin+0x54>
      ee:	cb 01       	movw	r24, r22
      f0:	80 95       	com	r24
      f2:	84 23       	and	r24, r20
      f4:	88 bb       	out	0x18, r24	; 24
      f6:	08 95       	ret
      f8:	48 b3       	in	r20, 0x18	; 24
      fa:	21 e0       	ldi	r18, 0x01	; 1
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	b9 01       	movw	r22, r18
     100:	02 c0       	rjmp	.+4      	; 0x106 <DIO_WritePin+0x74>
     102:	66 0f       	add	r22, r22
     104:	77 1f       	adc	r23, r23
     106:	9a 95       	dec	r25
     108:	e2 f7       	brpl	.-8      	; 0x102 <DIO_WritePin+0x70>
     10a:	cb 01       	movw	r24, r22
     10c:	84 2b       	or	r24, r20
     10e:	88 bb       	out	0x18, r24	; 24
     110:	08 95       	ret
     112:	90 ef       	ldi	r25, 0xF0	; 240
     114:	98 0f       	add	r25, r24
     116:	98 30       	cpi	r25, 0x08	; 8
     118:	e8 f4       	brcc	.+58     	; 0x154 <DIO_WritePin+0xc2>
     11a:	61 11       	cpse	r22, r1
     11c:	0e c0       	rjmp	.+28     	; 0x13a <DIO_WritePin+0xa8>
     11e:	45 b3       	in	r20, 0x15	; 21
     120:	21 e0       	ldi	r18, 0x01	; 1
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	b9 01       	movw	r22, r18
     126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_WritePin+0x9a>
     128:	66 0f       	add	r22, r22
     12a:	77 1f       	adc	r23, r23
     12c:	9a 95       	dec	r25
     12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_WritePin+0x96>
     130:	cb 01       	movw	r24, r22
     132:	80 95       	com	r24
     134:	84 23       	and	r24, r20
     136:	85 bb       	out	0x15, r24	; 21
     138:	08 95       	ret
     13a:	45 b3       	in	r20, 0x15	; 21
     13c:	21 e0       	ldi	r18, 0x01	; 1
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	b9 01       	movw	r22, r18
     142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_WritePin+0xb6>
     144:	66 0f       	add	r22, r22
     146:	77 1f       	adc	r23, r23
     148:	9a 95       	dec	r25
     14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_WritePin+0xb2>
     14c:	cb 01       	movw	r24, r22
     14e:	84 2b       	or	r24, r20
     150:	85 bb       	out	0x15, r24	; 21
     152:	08 95       	ret
     154:	88 51       	subi	r24, 0x18	; 24
     156:	88 30       	cpi	r24, 0x08	; 8
     158:	e0 f4       	brcc	.+56     	; 0x192 <DIO_WritePin+0x100>
     15a:	61 11       	cpse	r22, r1
     15c:	0e c0       	rjmp	.+28     	; 0x17a <DIO_WritePin+0xe8>
     15e:	42 b3       	in	r20, 0x12	; 18
     160:	21 e0       	ldi	r18, 0x01	; 1
     162:	30 e0       	ldi	r19, 0x00	; 0
     164:	b9 01       	movw	r22, r18
     166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_WritePin+0xda>
     168:	66 0f       	add	r22, r22
     16a:	77 1f       	adc	r23, r23
     16c:	8a 95       	dec	r24
     16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_WritePin+0xd6>
     170:	cb 01       	movw	r24, r22
     172:	80 95       	com	r24
     174:	84 23       	and	r24, r20
     176:	82 bb       	out	0x12, r24	; 18
     178:	08 95       	ret
     17a:	42 b3       	in	r20, 0x12	; 18
     17c:	21 e0       	ldi	r18, 0x01	; 1
     17e:	30 e0       	ldi	r19, 0x00	; 0
     180:	b9 01       	movw	r22, r18
     182:	02 c0       	rjmp	.+4      	; 0x188 <DIO_WritePin+0xf6>
     184:	66 0f       	add	r22, r22
     186:	77 1f       	adc	r23, r23
     188:	8a 95       	dec	r24
     18a:	e2 f7       	brpl	.-8      	; 0x184 <DIO_WritePin+0xf2>
     18c:	cb 01       	movw	r24, r22
     18e:	84 2b       	or	r24, r20
     190:	82 bb       	out	0x12, r24	; 18
     192:	08 95       	ret

00000194 <DIO_SetPinDirection>:
/* O/p : N/A */
/* Return : void */
/* Function that initialize direction for pin at any port from 0 to 39 pins in 4 ports input or output   */
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection){
	
	if( (PinNum >= 0U) && (PinNum <= 7U) ){
     194:	88 30       	cpi	r24, 0x08	; 8
     196:	e8 f4       	brcc	.+58     	; 0x1d2 <DIO_SetPinDirection+0x3e>
		if(PinDirection == 0U){
     198:	61 11       	cpse	r22, r1
     19a:	0e c0       	rjmp	.+28     	; 0x1b8 <DIO_SetPinDirection+0x24>
			Clear_Bit(DDRA,PinNum);
     19c:	4a b3       	in	r20, 0x1a	; 26
     19e:	21 e0       	ldi	r18, 0x01	; 1
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	b9 01       	movw	r22, r18
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_SetPinDirection+0x16>
     1a6:	66 0f       	add	r22, r22
     1a8:	77 1f       	adc	r23, r23
     1aa:	8a 95       	dec	r24
     1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_SetPinDirection+0x12>
     1ae:	cb 01       	movw	r24, r22
     1b0:	80 95       	com	r24
     1b2:	84 23       	and	r24, r20
     1b4:	8a bb       	out	0x1a, r24	; 26
     1b6:	08 95       	ret
		}
		else{
			Set_Bit(DDRA,PinNum);
     1b8:	4a b3       	in	r20, 0x1a	; 26
     1ba:	21 e0       	ldi	r18, 0x01	; 1
     1bc:	30 e0       	ldi	r19, 0x00	; 0
     1be:	b9 01       	movw	r22, r18
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_SetPinDirection+0x32>
     1c2:	66 0f       	add	r22, r22
     1c4:	77 1f       	adc	r23, r23
     1c6:	8a 95       	dec	r24
     1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_SetPinDirection+0x2e>
     1ca:	cb 01       	movw	r24, r22
     1cc:	84 2b       	or	r24, r20
     1ce:	8a bb       	out	0x1a, r24	; 26
     1d0:	08 95       	ret
		}
	}
	else if( (PinNum >= 8U) && (PinNum <= 15U) ){
     1d2:	98 ef       	ldi	r25, 0xF8	; 248
     1d4:	98 0f       	add	r25, r24
     1d6:	98 30       	cpi	r25, 0x08	; 8
     1d8:	e8 f4       	brcc	.+58     	; 0x214 <DIO_SetPinDirection+0x80>
		if(PinDirection == 0U){
     1da:	61 11       	cpse	r22, r1
     1dc:	0e c0       	rjmp	.+28     	; 0x1fa <DIO_SetPinDirection+0x66>
			Clear_Bit(DDRB,PinNum-8U);
     1de:	47 b3       	in	r20, 0x17	; 23
     1e0:	21 e0       	ldi	r18, 0x01	; 1
     1e2:	30 e0       	ldi	r19, 0x00	; 0
     1e4:	b9 01       	movw	r22, r18
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_SetPinDirection+0x58>
     1e8:	66 0f       	add	r22, r22
     1ea:	77 1f       	adc	r23, r23
     1ec:	9a 95       	dec	r25
     1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_SetPinDirection+0x54>
     1f0:	cb 01       	movw	r24, r22
     1f2:	80 95       	com	r24
     1f4:	84 23       	and	r24, r20
     1f6:	87 bb       	out	0x17, r24	; 23
     1f8:	08 95       	ret
		}
		else{
			Set_Bit(DDRB,PinNum-8U);
     1fa:	47 b3       	in	r20, 0x17	; 23
     1fc:	21 e0       	ldi	r18, 0x01	; 1
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	b9 01       	movw	r22, r18
     202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_SetPinDirection+0x74>
     204:	66 0f       	add	r22, r22
     206:	77 1f       	adc	r23, r23
     208:	9a 95       	dec	r25
     20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_SetPinDirection+0x70>
     20c:	cb 01       	movw	r24, r22
     20e:	84 2b       	or	r24, r20
     210:	87 bb       	out	0x17, r24	; 23
     212:	08 95       	ret
		}
	}
	else if( (PinNum >= 16U) && (PinNum <= 23U) ){
     214:	90 ef       	ldi	r25, 0xF0	; 240
     216:	98 0f       	add	r25, r24
     218:	98 30       	cpi	r25, 0x08	; 8
     21a:	e8 f4       	brcc	.+58     	; 0x256 <DIO_SetPinDirection+0xc2>
		if(PinDirection == 0U){
     21c:	61 11       	cpse	r22, r1
     21e:	0e c0       	rjmp	.+28     	; 0x23c <DIO_SetPinDirection+0xa8>
			Clear_Bit(DDRC,PinNum-16);
     220:	44 b3       	in	r20, 0x14	; 20
     222:	21 e0       	ldi	r18, 0x01	; 1
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	b9 01       	movw	r22, r18
     228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_SetPinDirection+0x9a>
     22a:	66 0f       	add	r22, r22
     22c:	77 1f       	adc	r23, r23
     22e:	9a 95       	dec	r25
     230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_SetPinDirection+0x96>
     232:	cb 01       	movw	r24, r22
     234:	80 95       	com	r24
     236:	84 23       	and	r24, r20
     238:	84 bb       	out	0x14, r24	; 20
     23a:	08 95       	ret
		}
		else{
			Set_Bit(DDRC,PinNum-16);
     23c:	44 b3       	in	r20, 0x14	; 20
     23e:	21 e0       	ldi	r18, 0x01	; 1
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	b9 01       	movw	r22, r18
     244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_SetPinDirection+0xb6>
     246:	66 0f       	add	r22, r22
     248:	77 1f       	adc	r23, r23
     24a:	9a 95       	dec	r25
     24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_SetPinDirection+0xb2>
     24e:	cb 01       	movw	r24, r22
     250:	84 2b       	or	r24, r20
     252:	84 bb       	out	0x14, r24	; 20
     254:	08 95       	ret
		}
	}
	else if( (PinNum >= 24U) && (PinNum <= 31U) ){
     256:	88 51       	subi	r24, 0x18	; 24
     258:	88 30       	cpi	r24, 0x08	; 8
     25a:	e0 f4       	brcc	.+56     	; 0x294 <DIO_SetPinDirection+0x100>
		if(PinDirection == 0U){
     25c:	61 11       	cpse	r22, r1
     25e:	0e c0       	rjmp	.+28     	; 0x27c <DIO_SetPinDirection+0xe8>
			Clear_Bit(DDRD,PinNum-24);
     260:	41 b3       	in	r20, 0x11	; 17
     262:	21 e0       	ldi	r18, 0x01	; 1
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	b9 01       	movw	r22, r18
     268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_SetPinDirection+0xda>
     26a:	66 0f       	add	r22, r22
     26c:	77 1f       	adc	r23, r23
     26e:	8a 95       	dec	r24
     270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_SetPinDirection+0xd6>
     272:	cb 01       	movw	r24, r22
     274:	80 95       	com	r24
     276:	84 23       	and	r24, r20
     278:	81 bb       	out	0x11, r24	; 17
     27a:	08 95       	ret
		}
		else{
			Set_Bit(DDRD,PinNum-24);
     27c:	41 b3       	in	r20, 0x11	; 17
     27e:	21 e0       	ldi	r18, 0x01	; 1
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	b9 01       	movw	r22, r18
     284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_SetPinDirection+0xf6>
     286:	66 0f       	add	r22, r22
     288:	77 1f       	adc	r23, r23
     28a:	8a 95       	dec	r24
     28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_SetPinDirection+0xf2>
     28e:	cb 01       	movw	r24, r22
     290:	84 2b       	or	r24, r20
     292:	81 bb       	out	0x11, r24	; 17
     294:	08 95       	ret

00000296 <main>:
#define F_CPU 16000000UL

int main(void)
{
	int* DataReceived=NO_Response;
	DIO_SetPinDirection(11,OUTPUT);/* BUZZER OUTPUT */
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	8b e0       	ldi	r24, 0x0B	; 11
     29a:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
	Disable_Interrupts();
     29e:	f8 94       	cli
	UART_Init(9600,ESP_FillResponseBuffer);
     2a0:	43 e2       	ldi	r20, 0x23	; 35
     2a2:	55 e0       	ldi	r21, 0x05	; 5
     2a4:	60 e8       	ldi	r22, 0x80	; 128
     2a6:	75 e2       	ldi	r23, 0x25	; 37
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	0e 94 a6 01 	call	0x34c	; 0x34c <UART_Init>
	Enable_Interrupts();
     2b0:	78 94       	sei
	WIFI_Service_Start(Server, "1111", "ZIZO", "1234567890", NULL, NULL, NULL, NULL);/* PORT NUM =1111 , WIFI_NAME=asdd , pwd=1234567890 */
     2b2:	a1 2c       	mov	r10, r1
     2b4:	b1 2c       	mov	r11, r1
     2b6:	c1 2c       	mov	r12, r1
     2b8:	d1 2c       	mov	r13, r1
     2ba:	e1 2c       	mov	r14, r1
     2bc:	f1 2c       	mov	r15, r1
     2be:	00 e0       	ldi	r16, 0x00	; 0
     2c0:	10 e0       	ldi	r17, 0x00	; 0
     2c2:	20 e6       	ldi	r18, 0x60	; 96
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	4b e6       	ldi	r20, 0x6B	; 107
     2c8:	50 e0       	ldi	r21, 0x00	; 0
     2ca:	60 e7       	ldi	r22, 0x70	; 112
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	0e 94 14 09 	call	0x1228	; 0x1228 <WIFI_Service_Start>
	while(OK_Status!=ESP_SendData("Wifi Demo Started","17"));
     2d4:	65 e7       	ldi	r22, 0x75	; 117
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	88 e7       	ldi	r24, 0x78	; 120
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <ESP_SendData>
     2e0:	81 30       	cpi	r24, 0x01	; 1
     2e2:	c1 f7       	brne	.-16     	; 0x2d4 <main+0x3e>
	//DataReceived=NO_Response;
	pwm1_init();
     2e4:	0e 94 0f 02 	call	0x41e	; 0x41e <pwm1_init>
	while(1){/*loop untiles receiving data */
	DataReceived=ESP_ReceiveData();/* if received data by esp module */
     2e8:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <ESP_ReceiveData>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2ec:	2f e3       	ldi	r18, 0x3F	; 63
     2ee:	3d e0       	ldi	r19, 0x0D	; 13
     2f0:	43 e0       	ldi	r20, 0x03	; 3
     2f2:	21 50       	subi	r18, 0x01	; 1
     2f4:	30 40       	sbci	r19, 0x00	; 0
     2f6:	40 40       	sbci	r20, 0x00	; 0
     2f8:	e1 f7       	brne	.-8      	; 0x2f2 <main+0x5c>
     2fa:	00 c0       	rjmp	.+0      	; 0x2fc <main+0x66>
     2fc:	00 00       	nop
	_delay_ms(1000);
	if(*DataReceived == 'a')/* if data which sent from hercules == a */
     2fe:	fc 01       	movw	r30, r24
     300:	80 81       	ld	r24, Z
     302:	91 81       	ldd	r25, Z+1	; 0x01
     304:	81 36       	cpi	r24, 0x61	; 97
     306:	91 05       	cpc	r25, r1
     308:	49 f4       	brne	.+18     	; 0x31c <main+0x86>
	{
		 SELECT_DUTY(70);
     30a:	60 e0       	ldi	r22, 0x00	; 0
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	8c e8       	ldi	r24, 0x8C	; 140
     310:	92 e4       	ldi	r25, 0x42	; 66
     312:	0e 94 37 02 	call	0x46e	; 0x46e <SELECT_DUTY>
		LEFT_DIR();
     316:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <LEFT_DIR>
     31a:	e6 cf       	rjmp	.-52     	; 0x2e8 <main+0x52>
	}
	else if(*DataReceived == 'b')/* if data which sent from hercules == b */
     31c:	82 36       	cpi	r24, 0x62	; 98
     31e:	91 05       	cpc	r25, r1
     320:	49 f4       	brne	.+18     	; 0x334 <main+0x9e>
	{
		SELECT_DUTY(70);
     322:	60 e0       	ldi	r22, 0x00	; 0
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	8c e8       	ldi	r24, 0x8C	; 140
     328:	92 e4       	ldi	r25, 0x42	; 66
     32a:	0e 94 37 02 	call	0x46e	; 0x46e <SELECT_DUTY>
		RIGHT_DIR();
     32e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <RIGHT_DIR>
     332:	da cf       	rjmp	.-76     	; 0x2e8 <main+0x52>
	}
	else if(*DataReceived == 'W')/* if data which sent from hercules == b */
     334:	87 35       	cpi	r24, 0x57	; 87
     336:	91 05       	cpc	r25, r1
     338:	b9 f6       	brne	.-82     	; 0x2e8 <main+0x52>
	{
		SELECT_DUTY(70);
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	8c e8       	ldi	r24, 0x8C	; 140
     340:	92 e4       	ldi	r25, 0x42	; 66
     342:	0e 94 37 02 	call	0x46e	; 0x46e <SELECT_DUTY>
		STOP_DIR();
     346:	0e 94 49 02 	call	0x492	; 0x492 <STOP_DIR>
     34a:	ce cf       	rjmp	.-100    	; 0x2e8 <main+0x52>

0000034c <UART_Init>:

char UART_Receive_Byte(void)
{
	while ( !(UCSRA & (1<<RXC)) );
	return UDR;
}
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	ea 01       	movw	r28, r20
     352:	dc 01       	movw	r26, r24
     354:	cb 01       	movw	r24, r22
     356:	88 0f       	add	r24, r24
     358:	99 1f       	adc	r25, r25
     35a:	aa 1f       	adc	r26, r26
     35c:	bb 1f       	adc	r27, r27
     35e:	88 0f       	add	r24, r24
     360:	99 1f       	adc	r25, r25
     362:	aa 1f       	adc	r26, r26
     364:	bb 1f       	adc	r27, r27
     366:	9c 01       	movw	r18, r24
     368:	ad 01       	movw	r20, r26
     36a:	22 0f       	add	r18, r18
     36c:	33 1f       	adc	r19, r19
     36e:	44 1f       	adc	r20, r20
     370:	55 1f       	adc	r21, r21
     372:	22 0f       	add	r18, r18
     374:	33 1f       	adc	r19, r19
     376:	44 1f       	adc	r20, r20
     378:	55 1f       	adc	r21, r21
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	74 e2       	ldi	r23, 0x24	; 36
     37e:	84 ef       	ldi	r24, 0xF4	; 244
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 3e 09 	call	0x127c	; 0x127c <__udivmodsi4>
     386:	21 50       	subi	r18, 0x01	; 1
     388:	31 09       	sbc	r19, r1
     38a:	8a b1       	in	r24, 0x0a	; 10
     38c:	88 61       	ori	r24, 0x18	; 24
     38e:	8a b9       	out	0x0a, r24	; 10
     390:	20 97       	sbiw	r28, 0x00	; 0
     392:	29 f0       	breq	.+10     	; 0x39e <UART_Init+0x52>
     394:	d0 93 ed 00 	sts	0x00ED, r29	; 0x8000ed <__data_end+0x1>
     398:	c0 93 ec 00 	sts	0x00EC, r28	; 0x8000ec <__data_end>
     39c:	57 9a       	sbi	0x0a, 7	; 10
     39e:	30 bd       	out	0x20, r19	; 32
     3a0:	29 b9       	out	0x09, r18	; 9
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <UART_Write_Byte>:
     3a8:	5d 9b       	sbis	0x0b, 5	; 11
     3aa:	fe cf       	rjmp	.-4      	; 0x3a8 <UART_Write_Byte>
     3ac:	8c b9       	out	0x0c, r24	; 12
     3ae:	08 95       	ret

000003b0 <UART_Write_String>:
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	ec 01       	movw	r28, r24
     3b6:	88 81       	ld	r24, Y
     3b8:	88 23       	and	r24, r24
     3ba:	31 f0       	breq	.+12     	; 0x3c8 <UART_Write_String+0x18>
     3bc:	21 96       	adiw	r28, 0x01	; 1
     3be:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <UART_Write_Byte>
     3c2:	89 91       	ld	r24, Y+
     3c4:	81 11       	cpse	r24, r1
     3c6:	fb cf       	rjmp	.-10     	; 0x3be <UART_Write_String+0xe>
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <__vector_13>:



ISR(USART_RXC_vect)
{
     3ce:	1f 92       	push	r1
     3d0:	0f 92       	push	r0
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	0f 92       	push	r0
     3d6:	11 24       	eor	r1, r1
     3d8:	2f 93       	push	r18
     3da:	3f 93       	push	r19
     3dc:	4f 93       	push	r20
     3de:	5f 93       	push	r21
     3e0:	6f 93       	push	r22
     3e2:	7f 93       	push	r23
     3e4:	8f 93       	push	r24
     3e6:	9f 93       	push	r25
     3e8:	af 93       	push	r26
     3ea:	bf 93       	push	r27
     3ec:	ef 93       	push	r30
     3ee:	ff 93       	push	r31
	UART_Rx_Callback(UDR);
     3f0:	8c b1       	in	r24, 0x0c	; 12
     3f2:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__data_end>
     3f6:	f0 91 ed 00 	lds	r31, 0x00ED	; 0x8000ed <__data_end+0x1>
     3fa:	09 95       	icall
}
     3fc:	ff 91       	pop	r31
     3fe:	ef 91       	pop	r30
     400:	bf 91       	pop	r27
     402:	af 91       	pop	r26
     404:	9f 91       	pop	r25
     406:	8f 91       	pop	r24
     408:	7f 91       	pop	r23
     40a:	6f 91       	pop	r22
     40c:	5f 91       	pop	r21
     40e:	4f 91       	pop	r20
     410:	3f 91       	pop	r19
     412:	2f 91       	pop	r18
     414:	0f 90       	pop	r0
     416:	0f be       	out	0x3f, r0	; 63
     418:	0f 90       	pop	r0
     41a:	1f 90       	pop	r1
     41c:	18 95       	reti

0000041e <pwm1_init>:
{
	DIO_WritePin(MOTOR1_DIR_A1,HIGH);
	DIO_WritePin(MOTOR1_DIR_B1,LOW);
	
	DIO_WritePin(MOTOR2_DIR_A2,HIGH);
	DIO_WritePin(MOTOR2_DIR_B2,LOW);
     41e:	1d bc       	out	0x2d, r1	; 45
     420:	1c bc       	out	0x2c, r1	; 44
     422:	8f e0       	ldi	r24, 0x0F	; 15
     424:	87 bd       	out	0x27, r24	; 39
     426:	80 ea       	ldi	r24, 0xA0	; 160
     428:	86 bd       	out	0x26, r24	; 38
     42a:	1a bc       	out	0x2a, r1	; 42
     42c:	19 bc       	out	0x29, r1	; 41
     42e:	18 bc       	out	0x28, r1	; 40
     430:	61 e0       	ldi	r22, 0x01	; 1
     432:	8c e1       	ldi	r24, 0x1C	; 28
     434:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     438:	61 e0       	ldi	r22, 0x01	; 1
     43a:	8d e1       	ldi	r24, 0x1D	; 29
     43c:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     440:	61 e0       	ldi	r22, 0x01	; 1
     442:	8a e1       	ldi	r24, 0x1A	; 26
     444:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     448:	61 e0       	ldi	r22, 0x01	; 1
     44a:	8b e1       	ldi	r24, 0x1B	; 27
     44c:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	8e e1       	ldi	r24, 0x1E	; 30
     454:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     458:	61 e0       	ldi	r22, 0x01	; 1
     45a:	8f e1       	ldi	r24, 0x1F	; 31
     45c:	0e 94 ca 00 	call	0x194	; 0x194 <DIO_SetPinDirection>
     460:	8f b5       	in	r24, 0x2f	; 47
     462:	82 6a       	ori	r24, 0xA2	; 162
     464:	8f bd       	out	0x2f, r24	; 47
     466:	8e b5       	in	r24, 0x2e	; 46
     468:	8c 61       	ori	r24, 0x1C	; 28
     46a:	8e bd       	out	0x2e, r24	; 46
     46c:	08 95       	ret

0000046e <SELECT_DUTY>:
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	48 ec       	ldi	r20, 0xC8	; 200
     474:	52 e4       	ldi	r21, 0x42	; 66
     476:	0e 94 a2 02 	call	0x544	; 0x544 <__divsf3>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e1       	ldi	r19, 0x10	; 16
     47e:	4a e7       	ldi	r20, 0x7A	; 122
     480:	55 e4       	ldi	r21, 0x45	; 69
     482:	0e 94 94 03 	call	0x728	; 0x728 <__mulsf3>
     486:	0e 94 14 03 	call	0x628	; 0x628 <__fixunssfsi>
     48a:	6a bd       	out	0x2a, r22	; 42
     48c:	79 bd       	out	0x29, r23	; 41
     48e:	68 bd       	out	0x28, r22	; 40
     490:	08 95       	ret

00000492 <STOP_DIR>:
/* O/p : N/A */
/* Return : void */
/* Function that initialize duty cycle for pwm at fast mode 14 */
void STOP_DIR(void)
{
	DIO_WritePin(MOTOR1_DIR_A1,LOW);
     492:	60 e0       	ldi	r22, 0x00	; 0
     494:	8a e1       	ldi	r24, 0x1A	; 26
     496:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR1_DIR_B1,LOW);
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	8b e1       	ldi	r24, 0x1B	; 27
     49e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	
	DIO_WritePin(MOTOR2_DIR_A2,LOW);
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	8e e1       	ldi	r24, 0x1E	; 30
     4a6:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR2_DIR_B2,LOW);
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	8f e1       	ldi	r24, 0x1F	; 31
     4ae:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
     4b2:	08 95       	ret

000004b4 <RIGHT_DIR>:
/* O/p : N/A */
/* Return : void */
/* Function that initialize duty cycle for pwm at fast mode 14 */
void RIGHT_DIR(void)
{
	DIO_WritePin(MOTOR1_DIR_A1,HIGH);
     4b4:	61 e0       	ldi	r22, 0x01	; 1
     4b6:	8a e1       	ldi	r24, 0x1A	; 26
     4b8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR1_DIR_B1,LOW);
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	8b e1       	ldi	r24, 0x1B	; 27
     4c0:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	
	DIO_WritePin(MOTOR2_DIR_A2,LOW);
     4c4:	60 e0       	ldi	r22, 0x00	; 0
     4c6:	8e e1       	ldi	r24, 0x1E	; 30
     4c8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR2_DIR_B2,HIGH);
     4cc:	61 e0       	ldi	r22, 0x01	; 1
     4ce:	8f e1       	ldi	r24, 0x1F	; 31
     4d0:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
     4d4:	08 95       	ret

000004d6 <LEFT_DIR>:
/* O/p : N/A */
/* Return : void */
/* Function that initialize duty cycle for pwm at fast mode 14 */
void LEFT_DIR(void)
{
	DIO_WritePin(MOTOR1_DIR_A1,LOW);
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	8a e1       	ldi	r24, 0x1A	; 26
     4da:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR1_DIR_B1,HIGH);
     4de:	61 e0       	ldi	r22, 0x01	; 1
     4e0:	8b e1       	ldi	r24, 0x1B	; 27
     4e2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	
	DIO_WritePin(MOTOR2_DIR_A2,HIGH);
     4e6:	61 e0       	ldi	r22, 0x01	; 1
     4e8:	8e e1       	ldi	r24, 0x1E	; 30
     4ea:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
	DIO_WritePin(MOTOR2_DIR_B2,LOW);
     4ee:	60 e0       	ldi	r22, 0x00	; 0
     4f0:	8f e1       	ldi	r24, 0x1F	; 31
     4f2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_WritePin>
     4f6:	08 95       	ret

000004f8 <__vector_10>:



/* Interrupt Service Routine for timer0 compare mode */
ISR(TIMER0_COMP_vect)
{
     4f8:	1f 92       	push	r1
     4fa:	0f 92       	push	r0
     4fc:	0f b6       	in	r0, 0x3f	; 63
     4fe:	0f 92       	push	r0
     500:	11 24       	eor	r1, r1
     502:	8f 93       	push	r24
     504:	9f 93       	push	r25
	g_tick++;
     506:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <g_tick>
     50a:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <g_tick+0x1>
     50e:	01 96       	adiw	r24, 0x01	; 1
     510:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <g_tick+0x1>
     514:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <g_tick>
}
     518:	9f 91       	pop	r25
     51a:	8f 91       	pop	r24
     51c:	0f 90       	pop	r0
     51e:	0f be       	out	0x3f, r0	; 63
     520:	0f 90       	pop	r0
     522:	1f 90       	pop	r1
     524:	18 95       	reti

00000526 <__vector_3>:


/* Interrupt Service Routine EXTERNAL INTERRUPT mode */
ISR(INT2_vect)
{
     526:	1f 92       	push	r1
     528:	0f 92       	push	r0
     52a:	0f b6       	in	r0, 0x3f	; 63
     52c:	0f 92       	push	r0
     52e:	11 24       	eor	r1, r1
     530:	8f 93       	push	r24
	external_flag = NUMBER_ONE ;
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <external_flag>
}
     538:	8f 91       	pop	r24
     53a:	0f 90       	pop	r0
     53c:	0f be       	out	0x3f, r0	; 63
     53e:	0f 90       	pop	r0
     540:	1f 90       	pop	r1
     542:	18 95       	reti

00000544 <__divsf3>:
     544:	0e 94 b6 02 	call	0x56c	; 0x56c <__divsf3x>
     548:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__fp_round>
     54c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_pscB>
     550:	58 f0       	brcs	.+22     	; 0x568 <__divsf3+0x24>
     552:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_pscA>
     556:	40 f0       	brcs	.+16     	; 0x568 <__divsf3+0x24>
     558:	29 f4       	brne	.+10     	; 0x564 <__divsf3+0x20>
     55a:	5f 3f       	cpi	r21, 0xFF	; 255
     55c:	29 f0       	breq	.+10     	; 0x568 <__divsf3+0x24>
     55e:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_inf>
     562:	51 11       	cpse	r21, r1
     564:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_szero>
     568:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_nan>

0000056c <__divsf3x>:
     56c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_split3>
     570:	68 f3       	brcs	.-38     	; 0x54c <__divsf3+0x8>

00000572 <__divsf3_pse>:
     572:	99 23       	and	r25, r25
     574:	b1 f3       	breq	.-20     	; 0x562 <__divsf3+0x1e>
     576:	55 23       	and	r21, r21
     578:	91 f3       	breq	.-28     	; 0x55e <__divsf3+0x1a>
     57a:	95 1b       	sub	r25, r21
     57c:	55 0b       	sbc	r21, r21
     57e:	bb 27       	eor	r27, r27
     580:	aa 27       	eor	r26, r26
     582:	62 17       	cp	r22, r18
     584:	73 07       	cpc	r23, r19
     586:	84 07       	cpc	r24, r20
     588:	38 f0       	brcs	.+14     	; 0x598 <__divsf3_pse+0x26>
     58a:	9f 5f       	subi	r25, 0xFF	; 255
     58c:	5f 4f       	sbci	r21, 0xFF	; 255
     58e:	22 0f       	add	r18, r18
     590:	33 1f       	adc	r19, r19
     592:	44 1f       	adc	r20, r20
     594:	aa 1f       	adc	r26, r26
     596:	a9 f3       	breq	.-22     	; 0x582 <__divsf3_pse+0x10>
     598:	35 d0       	rcall	.+106    	; 0x604 <__divsf3_pse+0x92>
     59a:	0e 2e       	mov	r0, r30
     59c:	3a f0       	brmi	.+14     	; 0x5ac <__divsf3_pse+0x3a>
     59e:	e0 e8       	ldi	r30, 0x80	; 128
     5a0:	32 d0       	rcall	.+100    	; 0x606 <__divsf3_pse+0x94>
     5a2:	91 50       	subi	r25, 0x01	; 1
     5a4:	50 40       	sbci	r21, 0x00	; 0
     5a6:	e6 95       	lsr	r30
     5a8:	00 1c       	adc	r0, r0
     5aa:	ca f7       	brpl	.-14     	; 0x59e <__divsf3_pse+0x2c>
     5ac:	2b d0       	rcall	.+86     	; 0x604 <__divsf3_pse+0x92>
     5ae:	fe 2f       	mov	r31, r30
     5b0:	29 d0       	rcall	.+82     	; 0x604 <__divsf3_pse+0x92>
     5b2:	66 0f       	add	r22, r22
     5b4:	77 1f       	adc	r23, r23
     5b6:	88 1f       	adc	r24, r24
     5b8:	bb 1f       	adc	r27, r27
     5ba:	26 17       	cp	r18, r22
     5bc:	37 07       	cpc	r19, r23
     5be:	48 07       	cpc	r20, r24
     5c0:	ab 07       	cpc	r26, r27
     5c2:	b0 e8       	ldi	r27, 0x80	; 128
     5c4:	09 f0       	breq	.+2      	; 0x5c8 <__divsf3_pse+0x56>
     5c6:	bb 0b       	sbc	r27, r27
     5c8:	80 2d       	mov	r24, r0
     5ca:	bf 01       	movw	r22, r30
     5cc:	ff 27       	eor	r31, r31
     5ce:	93 58       	subi	r25, 0x83	; 131
     5d0:	5f 4f       	sbci	r21, 0xFF	; 255
     5d2:	3a f0       	brmi	.+14     	; 0x5e2 <__divsf3_pse+0x70>
     5d4:	9e 3f       	cpi	r25, 0xFE	; 254
     5d6:	51 05       	cpc	r21, r1
     5d8:	78 f0       	brcs	.+30     	; 0x5f8 <__divsf3_pse+0x86>
     5da:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_inf>
     5de:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_szero>
     5e2:	5f 3f       	cpi	r21, 0xFF	; 255
     5e4:	e4 f3       	brlt	.-8      	; 0x5de <__divsf3_pse+0x6c>
     5e6:	98 3e       	cpi	r25, 0xE8	; 232
     5e8:	d4 f3       	brlt	.-12     	; 0x5de <__divsf3_pse+0x6c>
     5ea:	86 95       	lsr	r24
     5ec:	77 95       	ror	r23
     5ee:	67 95       	ror	r22
     5f0:	b7 95       	ror	r27
     5f2:	f7 95       	ror	r31
     5f4:	9f 5f       	subi	r25, 0xFF	; 255
     5f6:	c9 f7       	brne	.-14     	; 0x5ea <__divsf3_pse+0x78>
     5f8:	88 0f       	add	r24, r24
     5fa:	91 1d       	adc	r25, r1
     5fc:	96 95       	lsr	r25
     5fe:	87 95       	ror	r24
     600:	97 f9       	bld	r25, 7
     602:	08 95       	ret
     604:	e1 e0       	ldi	r30, 0x01	; 1
     606:	66 0f       	add	r22, r22
     608:	77 1f       	adc	r23, r23
     60a:	88 1f       	adc	r24, r24
     60c:	bb 1f       	adc	r27, r27
     60e:	62 17       	cp	r22, r18
     610:	73 07       	cpc	r23, r19
     612:	84 07       	cpc	r24, r20
     614:	ba 07       	cpc	r27, r26
     616:	20 f0       	brcs	.+8      	; 0x620 <__divsf3_pse+0xae>
     618:	62 1b       	sub	r22, r18
     61a:	73 0b       	sbc	r23, r19
     61c:	84 0b       	sbc	r24, r20
     61e:	ba 0b       	sbc	r27, r26
     620:	ee 1f       	adc	r30, r30
     622:	88 f7       	brcc	.-30     	; 0x606 <__divsf3_pse+0x94>
     624:	e0 95       	com	r30
     626:	08 95       	ret

00000628 <__fixunssfsi>:
     628:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__fp_splitA>
     62c:	88 f0       	brcs	.+34     	; 0x650 <__fixunssfsi+0x28>
     62e:	9f 57       	subi	r25, 0x7F	; 127
     630:	98 f0       	brcs	.+38     	; 0x658 <__fixunssfsi+0x30>
     632:	b9 2f       	mov	r27, r25
     634:	99 27       	eor	r25, r25
     636:	b7 51       	subi	r27, 0x17	; 23
     638:	b0 f0       	brcs	.+44     	; 0x666 <__fixunssfsi+0x3e>
     63a:	e1 f0       	breq	.+56     	; 0x674 <__fixunssfsi+0x4c>
     63c:	66 0f       	add	r22, r22
     63e:	77 1f       	adc	r23, r23
     640:	88 1f       	adc	r24, r24
     642:	99 1f       	adc	r25, r25
     644:	1a f0       	brmi	.+6      	; 0x64c <__fixunssfsi+0x24>
     646:	ba 95       	dec	r27
     648:	c9 f7       	brne	.-14     	; 0x63c <__fixunssfsi+0x14>
     64a:	14 c0       	rjmp	.+40     	; 0x674 <__fixunssfsi+0x4c>
     64c:	b1 30       	cpi	r27, 0x01	; 1
     64e:	91 f0       	breq	.+36     	; 0x674 <__fixunssfsi+0x4c>
     650:	0e 94 8d 03 	call	0x71a	; 0x71a <__fp_zero>
     654:	b1 e0       	ldi	r27, 0x01	; 1
     656:	08 95       	ret
     658:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_zero>
     65c:	67 2f       	mov	r22, r23
     65e:	78 2f       	mov	r23, r24
     660:	88 27       	eor	r24, r24
     662:	b8 5f       	subi	r27, 0xF8	; 248
     664:	39 f0       	breq	.+14     	; 0x674 <__fixunssfsi+0x4c>
     666:	b9 3f       	cpi	r27, 0xF9	; 249
     668:	cc f3       	brlt	.-14     	; 0x65c <__fixunssfsi+0x34>
     66a:	86 95       	lsr	r24
     66c:	77 95       	ror	r23
     66e:	67 95       	ror	r22
     670:	b3 95       	inc	r27
     672:	d9 f7       	brne	.-10     	; 0x66a <__fixunssfsi+0x42>
     674:	3e f4       	brtc	.+14     	; 0x684 <__fixunssfsi+0x5c>
     676:	90 95       	com	r25
     678:	80 95       	com	r24
     67a:	70 95       	com	r23
     67c:	61 95       	neg	r22
     67e:	7f 4f       	sbci	r23, 0xFF	; 255
     680:	8f 4f       	sbci	r24, 0xFF	; 255
     682:	9f 4f       	sbci	r25, 0xFF	; 255
     684:	08 95       	ret

00000686 <__fp_inf>:
     686:	97 f9       	bld	r25, 7
     688:	9f 67       	ori	r25, 0x7F	; 127
     68a:	80 e8       	ldi	r24, 0x80	; 128
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	08 95       	ret

00000692 <__fp_nan>:
     692:	9f ef       	ldi	r25, 0xFF	; 255
     694:	80 ec       	ldi	r24, 0xC0	; 192
     696:	08 95       	ret

00000698 <__fp_pscA>:
     698:	00 24       	eor	r0, r0
     69a:	0a 94       	dec	r0
     69c:	16 16       	cp	r1, r22
     69e:	17 06       	cpc	r1, r23
     6a0:	18 06       	cpc	r1, r24
     6a2:	09 06       	cpc	r0, r25
     6a4:	08 95       	ret

000006a6 <__fp_pscB>:
     6a6:	00 24       	eor	r0, r0
     6a8:	0a 94       	dec	r0
     6aa:	12 16       	cp	r1, r18
     6ac:	13 06       	cpc	r1, r19
     6ae:	14 06       	cpc	r1, r20
     6b0:	05 06       	cpc	r0, r21
     6b2:	08 95       	ret

000006b4 <__fp_round>:
     6b4:	09 2e       	mov	r0, r25
     6b6:	03 94       	inc	r0
     6b8:	00 0c       	add	r0, r0
     6ba:	11 f4       	brne	.+4      	; 0x6c0 <__fp_round+0xc>
     6bc:	88 23       	and	r24, r24
     6be:	52 f0       	brmi	.+20     	; 0x6d4 <__fp_round+0x20>
     6c0:	bb 0f       	add	r27, r27
     6c2:	40 f4       	brcc	.+16     	; 0x6d4 <__fp_round+0x20>
     6c4:	bf 2b       	or	r27, r31
     6c6:	11 f4       	brne	.+4      	; 0x6cc <__fp_round+0x18>
     6c8:	60 ff       	sbrs	r22, 0
     6ca:	04 c0       	rjmp	.+8      	; 0x6d4 <__fp_round+0x20>
     6cc:	6f 5f       	subi	r22, 0xFF	; 255
     6ce:	7f 4f       	sbci	r23, 0xFF	; 255
     6d0:	8f 4f       	sbci	r24, 0xFF	; 255
     6d2:	9f 4f       	sbci	r25, 0xFF	; 255
     6d4:	08 95       	ret

000006d6 <__fp_split3>:
     6d6:	57 fd       	sbrc	r21, 7
     6d8:	90 58       	subi	r25, 0x80	; 128
     6da:	44 0f       	add	r20, r20
     6dc:	55 1f       	adc	r21, r21
     6de:	59 f0       	breq	.+22     	; 0x6f6 <__fp_splitA+0x10>
     6e0:	5f 3f       	cpi	r21, 0xFF	; 255
     6e2:	71 f0       	breq	.+28     	; 0x700 <__fp_splitA+0x1a>
     6e4:	47 95       	ror	r20

000006e6 <__fp_splitA>:
     6e6:	88 0f       	add	r24, r24
     6e8:	97 fb       	bst	r25, 7
     6ea:	99 1f       	adc	r25, r25
     6ec:	61 f0       	breq	.+24     	; 0x706 <__fp_splitA+0x20>
     6ee:	9f 3f       	cpi	r25, 0xFF	; 255
     6f0:	79 f0       	breq	.+30     	; 0x710 <__fp_splitA+0x2a>
     6f2:	87 95       	ror	r24
     6f4:	08 95       	ret
     6f6:	12 16       	cp	r1, r18
     6f8:	13 06       	cpc	r1, r19
     6fa:	14 06       	cpc	r1, r20
     6fc:	55 1f       	adc	r21, r21
     6fe:	f2 cf       	rjmp	.-28     	; 0x6e4 <__fp_split3+0xe>
     700:	46 95       	lsr	r20
     702:	f1 df       	rcall	.-30     	; 0x6e6 <__fp_splitA>
     704:	08 c0       	rjmp	.+16     	; 0x716 <__fp_splitA+0x30>
     706:	16 16       	cp	r1, r22
     708:	17 06       	cpc	r1, r23
     70a:	18 06       	cpc	r1, r24
     70c:	99 1f       	adc	r25, r25
     70e:	f1 cf       	rjmp	.-30     	; 0x6f2 <__fp_splitA+0xc>
     710:	86 95       	lsr	r24
     712:	71 05       	cpc	r23, r1
     714:	61 05       	cpc	r22, r1
     716:	08 94       	sec
     718:	08 95       	ret

0000071a <__fp_zero>:
     71a:	e8 94       	clt

0000071c <__fp_szero>:
     71c:	bb 27       	eor	r27, r27
     71e:	66 27       	eor	r22, r22
     720:	77 27       	eor	r23, r23
     722:	cb 01       	movw	r24, r22
     724:	97 f9       	bld	r25, 7
     726:	08 95       	ret

00000728 <__mulsf3>:
     728:	0e 94 a7 03 	call	0x74e	; 0x74e <__mulsf3x>
     72c:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__fp_round>
     730:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_pscA>
     734:	38 f0       	brcs	.+14     	; 0x744 <__mulsf3+0x1c>
     736:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_pscB>
     73a:	20 f0       	brcs	.+8      	; 0x744 <__mulsf3+0x1c>
     73c:	95 23       	and	r25, r21
     73e:	11 f0       	breq	.+4      	; 0x744 <__mulsf3+0x1c>
     740:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_inf>
     744:	0c 94 49 03 	jmp	0x692	; 0x692 <__fp_nan>
     748:	11 24       	eor	r1, r1
     74a:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_szero>

0000074e <__mulsf3x>:
     74e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_split3>
     752:	70 f3       	brcs	.-36     	; 0x730 <__mulsf3+0x8>

00000754 <__mulsf3_pse>:
     754:	95 9f       	mul	r25, r21
     756:	c1 f3       	breq	.-16     	; 0x748 <__mulsf3+0x20>
     758:	95 0f       	add	r25, r21
     75a:	50 e0       	ldi	r21, 0x00	; 0
     75c:	55 1f       	adc	r21, r21
     75e:	62 9f       	mul	r22, r18
     760:	f0 01       	movw	r30, r0
     762:	72 9f       	mul	r23, r18
     764:	bb 27       	eor	r27, r27
     766:	f0 0d       	add	r31, r0
     768:	b1 1d       	adc	r27, r1
     76a:	63 9f       	mul	r22, r19
     76c:	aa 27       	eor	r26, r26
     76e:	f0 0d       	add	r31, r0
     770:	b1 1d       	adc	r27, r1
     772:	aa 1f       	adc	r26, r26
     774:	64 9f       	mul	r22, r20
     776:	66 27       	eor	r22, r22
     778:	b0 0d       	add	r27, r0
     77a:	a1 1d       	adc	r26, r1
     77c:	66 1f       	adc	r22, r22
     77e:	82 9f       	mul	r24, r18
     780:	22 27       	eor	r18, r18
     782:	b0 0d       	add	r27, r0
     784:	a1 1d       	adc	r26, r1
     786:	62 1f       	adc	r22, r18
     788:	73 9f       	mul	r23, r19
     78a:	b0 0d       	add	r27, r0
     78c:	a1 1d       	adc	r26, r1
     78e:	62 1f       	adc	r22, r18
     790:	83 9f       	mul	r24, r19
     792:	a0 0d       	add	r26, r0
     794:	61 1d       	adc	r22, r1
     796:	22 1f       	adc	r18, r18
     798:	74 9f       	mul	r23, r20
     79a:	33 27       	eor	r19, r19
     79c:	a0 0d       	add	r26, r0
     79e:	61 1d       	adc	r22, r1
     7a0:	23 1f       	adc	r18, r19
     7a2:	84 9f       	mul	r24, r20
     7a4:	60 0d       	add	r22, r0
     7a6:	21 1d       	adc	r18, r1
     7a8:	82 2f       	mov	r24, r18
     7aa:	76 2f       	mov	r23, r22
     7ac:	6a 2f       	mov	r22, r26
     7ae:	11 24       	eor	r1, r1
     7b0:	9f 57       	subi	r25, 0x7F	; 127
     7b2:	50 40       	sbci	r21, 0x00	; 0
     7b4:	9a f0       	brmi	.+38     	; 0x7dc <__mulsf3_pse+0x88>
     7b6:	f1 f0       	breq	.+60     	; 0x7f4 <__mulsf3_pse+0xa0>
     7b8:	88 23       	and	r24, r24
     7ba:	4a f0       	brmi	.+18     	; 0x7ce <__mulsf3_pse+0x7a>
     7bc:	ee 0f       	add	r30, r30
     7be:	ff 1f       	adc	r31, r31
     7c0:	bb 1f       	adc	r27, r27
     7c2:	66 1f       	adc	r22, r22
     7c4:	77 1f       	adc	r23, r23
     7c6:	88 1f       	adc	r24, r24
     7c8:	91 50       	subi	r25, 0x01	; 1
     7ca:	50 40       	sbci	r21, 0x00	; 0
     7cc:	a9 f7       	brne	.-22     	; 0x7b8 <__mulsf3_pse+0x64>
     7ce:	9e 3f       	cpi	r25, 0xFE	; 254
     7d0:	51 05       	cpc	r21, r1
     7d2:	80 f0       	brcs	.+32     	; 0x7f4 <__mulsf3_pse+0xa0>
     7d4:	0c 94 43 03 	jmp	0x686	; 0x686 <__fp_inf>
     7d8:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_szero>
     7dc:	5f 3f       	cpi	r21, 0xFF	; 255
     7de:	e4 f3       	brlt	.-8      	; 0x7d8 <__mulsf3_pse+0x84>
     7e0:	98 3e       	cpi	r25, 0xE8	; 232
     7e2:	d4 f3       	brlt	.-12     	; 0x7d8 <__mulsf3_pse+0x84>
     7e4:	86 95       	lsr	r24
     7e6:	77 95       	ror	r23
     7e8:	67 95       	ror	r22
     7ea:	b7 95       	ror	r27
     7ec:	f7 95       	ror	r31
     7ee:	e7 95       	ror	r30
     7f0:	9f 5f       	subi	r25, 0xFF	; 255
     7f2:	c1 f7       	brne	.-16     	; 0x7e4 <__mulsf3_pse+0x90>
     7f4:	fe 2b       	or	r31, r30
     7f6:	88 0f       	add	r24, r24
     7f8:	91 1d       	adc	r25, r1
     7fa:	96 95       	lsr	r25
     7fc:	87 95       	ror	r24
     7fe:	97 f9       	bld	r25, 7
     800:	08 95       	ret

00000802 <ESP_ReadResponseLine>:
     802:	8f 92       	push	r8
     804:	9f 92       	push	r9
     806:	af 92       	push	r10
     808:	bf 92       	push	r11
     80a:	cf 92       	push	r12
     80c:	df 92       	push	r13
     80e:	ff 92       	push	r15
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	00 91 fa 00 	lds	r16, 0x00FA	; 0x8000fa <ResponseBufferMain_Index>
     81c:	00 23       	and	r16, r16
     81e:	09 f4       	brne	.+2      	; 0x822 <ESP_ReadResponseLine+0x20>
     820:	f6 c0       	rjmp	.+492    	; 0xa0e <__stack+0x1af>
     822:	f0 90 f8 00 	lds	r15, 0x00F8	; 0x8000f8 <CorrectDataReceived>
     826:	50 91 f9 00 	lds	r21, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     82a:	6f ef       	ldi	r22, 0xFF	; 255
     82c:	60 0f       	add	r22, r16
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	6e 5f       	subi	r22, 0xFE	; 254
     832:	7f 4f       	sbci	r23, 0xFF	; 255
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	10 e0       	ldi	r17, 0x00	; 0
     83a:	dd 24       	eor	r13, r13
     83c:	d3 94       	inc	r13
     83e:	a0 2f       	mov	r26, r16
     840:	b0 e0       	ldi	r27, 0x00	; 0
     842:	ed 01       	movw	r28, r26
     844:	c6 50       	subi	r28, 0x06	; 6
     846:	df 4f       	sbci	r29, 0xFF	; 255
     848:	9d 01       	movw	r18, r26
     84a:	28 50       	subi	r18, 0x08	; 8
     84c:	3f 4f       	sbci	r19, 0xFF	; 255
     84e:	49 01       	movw	r8, r18
     850:	b1 2c       	mov	r11, r1
     852:	c1 2c       	mov	r12, r1
     854:	9c 01       	movw	r18, r24
     856:	21 50       	subi	r18, 0x01	; 1
     858:	31 09       	sbc	r19, r1
     85a:	f9 01       	movw	r30, r18
     85c:	e5 50       	subi	r30, 0x05	; 5
     85e:	ff 4f       	sbci	r31, 0xFF	; 255
     860:	40 81       	ld	r20, Z
     862:	4f 34       	cpi	r20, 0x4F	; 79
     864:	69 f4       	brne	.+26     	; 0x880 <__stack+0x21>
     866:	fc 01       	movw	r30, r24
     868:	e5 50       	subi	r30, 0x05	; 5
     86a:	ff 4f       	sbci	r31, 0xFF	; 255
     86c:	20 81       	ld	r18, Z
     86e:	2b 34       	cpi	r18, 0x4B	; 75
     870:	09 f0       	breq	.+2      	; 0x874 <__stack+0x15>
     872:	c4 c0       	rjmp	.+392    	; 0x9fc <__stack+0x19d>
     874:	28 81       	ld	r18, Y
     876:	2d 30       	cpi	r18, 0x0D	; 13
     878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
     87a:	c0 c0       	rjmp	.+384    	; 0x9fc <__stack+0x19d>
     87c:	5d 2d       	mov	r21, r13
     87e:	be c0       	rjmp	.+380    	; 0x9fc <__stack+0x19d>
     880:	f9 01       	movw	r30, r18
     882:	e5 50       	subi	r30, 0x05	; 5
     884:	ff 4f       	sbci	r31, 0xFF	; 255
     886:	40 81       	ld	r20, Z
     888:	4b 32       	cpi	r20, 0x2B	; 43
     88a:	09 f0       	breq	.+2      	; 0x88e <__stack+0x2f>
     88c:	59 c0       	rjmp	.+178    	; 0x940 <__stack+0xe1>
     88e:	fc 01       	movw	r30, r24
     890:	e5 50       	subi	r30, 0x05	; 5
     892:	ff 4f       	sbci	r31, 0xFF	; 255
     894:	20 81       	ld	r18, Z
     896:	29 34       	cpi	r18, 0x49	; 73
     898:	09 f0       	breq	.+2      	; 0x89c <__stack+0x3d>
     89a:	45 c0       	rjmp	.+138    	; 0x926 <__stack+0xc7>
     89c:	d4 01       	movw	r26, r8
     89e:	2c 91       	ld	r18, X
     8a0:	2b 34       	cpi	r18, 0x4B	; 75
     8a2:	09 f0       	breq	.+2      	; 0x8a6 <__stack+0x47>
     8a4:	ab c0       	rjmp	.+342    	; 0x9fc <__stack+0x19d>
     8a6:	e1 2f       	mov	r30, r17
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	9f 01       	movw	r18, r30
     8ac:	25 50       	subi	r18, 0x05	; 5
     8ae:	3f 4f       	sbci	r19, 0xFF	; 255
     8b0:	d9 01       	movw	r26, r18
     8b2:	2c 91       	ld	r18, X
     8b4:	2a 33       	cpi	r18, 0x3A	; 58
     8b6:	49 f0       	breq	.+18     	; 0x8ca <__stack+0x6b>
     8b8:	1f 5f       	subi	r17, 0xFF	; 255
     8ba:	e1 2f       	mov	r30, r17
     8bc:	f0 e0       	ldi	r31, 0x00	; 0
     8be:	df 01       	movw	r26, r30
     8c0:	a5 50       	subi	r26, 0x05	; 5
     8c2:	bf 4f       	sbci	r27, 0xFF	; 255
     8c4:	2c 91       	ld	r18, X
     8c6:	2a 33       	cpi	r18, 0x3A	; 58
     8c8:	b9 f7       	brne	.-18     	; 0x8b8 <__stack+0x59>
     8ca:	9f 01       	movw	r18, r30
     8cc:	2f 5f       	subi	r18, 0xFF	; 255
     8ce:	3f 4f       	sbci	r19, 0xFF	; 255
     8d0:	a9 01       	movw	r20, r18
     8d2:	45 50       	subi	r20, 0x05	; 5
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	da 01       	movw	r26, r20
     8d8:	4c 91       	ld	r20, X
     8da:	4d 30       	cpi	r20, 0x0D	; 13
     8dc:	d9 f0       	breq	.+54     	; 0x914 <__stack+0xb5>
     8de:	4b 2d       	mov	r20, r11
     8e0:	5c 2d       	mov	r21, r12
     8e2:	a1 2c       	mov	r10, r1
     8e4:	d9 01       	movw	r26, r18
     8e6:	a5 50       	subi	r26, 0x05	; 5
     8e8:	bf 4f       	sbci	r27, 0xFF	; 255
     8ea:	2c 91       	ld	r18, X
     8ec:	da 01       	movw	r26, r20
     8ee:	a5 50       	subi	r26, 0x05	; 5
     8f0:	bf 4f       	sbci	r27, 0xFF	; 255
     8f2:	2c 93       	st	X, r18
     8f4:	a3 94       	inc	r10
     8f6:	4a 2d       	mov	r20, r10
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	9a 01       	movw	r18, r20
     8fc:	2e 0f       	add	r18, r30
     8fe:	3f 1f       	adc	r19, r31
     900:	2f 5f       	subi	r18, 0xFF	; 255
     902:	3f 4f       	sbci	r19, 0xFF	; 255
     904:	d9 01       	movw	r26, r18
     906:	a5 50       	subi	r26, 0x05	; 5
     908:	bf 4f       	sbci	r27, 0xFF	; 255
     90a:	fc 90       	ld	r15, X
     90c:	bd e0       	ldi	r27, 0x0D	; 13
     90e:	fb 12       	cpse	r15, r27
     910:	e9 cf       	rjmp	.-46     	; 0x8e4 <__stack+0x85>
     912:	02 c0       	rjmp	.+4      	; 0x918 <__stack+0xb9>
     914:	4b 2d       	mov	r20, r11
     916:	5c 2d       	mov	r21, r12
     918:	fa 01       	movw	r30, r20
     91a:	e5 50       	subi	r30, 0x05	; 5
     91c:	ff 4f       	sbci	r31, 0xFF	; 255
     91e:	10 82       	st	Z, r1
     920:	fd 2c       	mov	r15, r13
     922:	5d 2d       	mov	r21, r13
     924:	6b c0       	rjmp	.+214    	; 0x9fc <__stack+0x19d>
     926:	fc 01       	movw	r30, r24
     928:	e5 50       	subi	r30, 0x05	; 5
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	20 81       	ld	r18, Z
     92e:	23 34       	cpi	r18, 0x43	; 67
     930:	09 f0       	breq	.+2      	; 0x934 <__stack+0xd5>
     932:	64 c0       	rjmp	.+200    	; 0x9fc <__stack+0x19d>
     934:	28 81       	ld	r18, Y
     936:	2d 30       	cpi	r18, 0x0D	; 13
     938:	09 f0       	breq	.+2      	; 0x93c <__stack+0xdd>
     93a:	60 c0       	rjmp	.+192    	; 0x9fc <__stack+0x19d>
     93c:	5d 2d       	mov	r21, r13
     93e:	5e c0       	rjmp	.+188    	; 0x9fc <__stack+0x19d>
     940:	f9 01       	movw	r30, r18
     942:	e5 50       	subi	r30, 0x05	; 5
     944:	ff 4f       	sbci	r31, 0xFF	; 255
     946:	40 81       	ld	r20, Z
     948:	45 34       	cpi	r20, 0x45	; 69
     94a:	99 f4       	brne	.+38     	; 0x972 <__stack+0x113>
     94c:	fc 01       	movw	r30, r24
     94e:	e5 50       	subi	r30, 0x05	; 5
     950:	ff 4f       	sbci	r31, 0xFF	; 255
     952:	20 81       	ld	r18, Z
     954:	22 35       	cpi	r18, 0x52	; 82
     956:	09 f0       	breq	.+2      	; 0x95a <__stack+0xfb>
     958:	51 c0       	rjmp	.+162    	; 0x9fc <__stack+0x19d>
     95a:	28 81       	ld	r18, Y
     95c:	2d 30       	cpi	r18, 0x0D	; 13
     95e:	09 f0       	breq	.+2      	; 0x962 <__stack+0x103>
     960:	4d c0       	rjmp	.+154    	; 0x9fc <__stack+0x19d>
     962:	50 93 f9 00 	sts	0x00F9, r21	; 0x8000f9 <ReceivedFullResponse>
     966:	f0 92 f8 00 	sts	0x00F8, r15	; 0x8000f8 <CorrectDataReceived>
     96a:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <ResponseBufferMain_Index>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	5e c0       	rjmp	.+188    	; 0xa2e <__stack+0x1cf>
     972:	f9 01       	movw	r30, r18
     974:	e5 50       	subi	r30, 0x05	; 5
     976:	ff 4f       	sbci	r31, 0xFF	; 255
     978:	40 81       	ld	r20, Z
     97a:	4e 34       	cpi	r20, 0x4E	; 78
     97c:	09 f5       	brne	.+66     	; 0x9c0 <__stack+0x161>
     97e:	fc 01       	movw	r30, r24
     980:	e5 50       	subi	r30, 0x05	; 5
     982:	ff 4f       	sbci	r31, 0xFF	; 255
     984:	20 81       	ld	r18, Z
     986:	2e 34       	cpi	r18, 0x4E	; 78
     988:	c9 f5       	brne	.+114    	; 0x9fc <__stack+0x19d>
     98a:	28 81       	ld	r18, Y
     98c:	2d 30       	cpi	r18, 0x0D	; 13
     98e:	b1 f5       	brne	.+108    	; 0x9fc <__stack+0x19d>
     990:	21 2f       	mov	r18, r17
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	f9 01       	movw	r30, r18
     996:	e5 50       	subi	r30, 0x05	; 5
     998:	ff 4f       	sbci	r31, 0xFF	; 255
     99a:	40 81       	ld	r20, Z
     99c:	4c 32       	cpi	r20, 0x2C	; 44
     99e:	49 f0       	breq	.+18     	; 0x9b2 <__stack+0x153>
     9a0:	1f 5f       	subi	r17, 0xFF	; 255
     9a2:	21 2f       	mov	r18, r17
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	f9 01       	movw	r30, r18
     9a8:	e5 50       	subi	r30, 0x05	; 5
     9aa:	ff 4f       	sbci	r31, 0xFF	; 255
     9ac:	40 81       	ld	r20, Z
     9ae:	4c 32       	cpi	r20, 0x2C	; 44
     9b0:	b9 f7       	brne	.-18     	; 0x9a0 <__stack+0x141>
     9b2:	1f 5f       	subi	r17, 0xFF	; 255
     9b4:	f9 01       	movw	r30, r18
     9b6:	e5 50       	subi	r30, 0x05	; 5
     9b8:	ff 4f       	sbci	r31, 0xFF	; 255
     9ba:	10 82       	st	Z, r1
     9bc:	5d 2d       	mov	r21, r13
     9be:	1e c0       	rjmp	.+60     	; 0x9fc <__stack+0x19d>
     9c0:	f9 01       	movw	r30, r18
     9c2:	e5 50       	subi	r30, 0x05	; 5
     9c4:	ff 4f       	sbci	r31, 0xFF	; 255
     9c6:	40 81       	ld	r20, Z
     9c8:	4e 33       	cpi	r20, 0x3E	; 62
     9ca:	b9 f0       	breq	.+46     	; 0x9fa <__stack+0x19b>
     9cc:	f9 01       	movw	r30, r18
     9ce:	e5 50       	subi	r30, 0x05	; 5
     9d0:	ff 4f       	sbci	r31, 0xFF	; 255
     9d2:	20 81       	ld	r18, Z
     9d4:	23 35       	cpi	r18, 0x53	; 83
     9d6:	91 f4       	brne	.+36     	; 0x9fc <__stack+0x19d>
     9d8:	fc 01       	movw	r30, r24
     9da:	e5 50       	subi	r30, 0x05	; 5
     9dc:	ff 4f       	sbci	r31, 0xFF	; 255
     9de:	20 81       	ld	r18, Z
     9e0:	25 34       	cpi	r18, 0x45	; 69
     9e2:	61 f4       	brne	.+24     	; 0x9fc <__stack+0x19d>
     9e4:	fc 01       	movw	r30, r24
     9e6:	e5 50       	subi	r30, 0x05	; 5
     9e8:	ff 4f       	sbci	r31, 0xFF	; 255
     9ea:	20 81       	ld	r18, Z
     9ec:	2e 34       	cpi	r18, 0x4E	; 78
     9ee:	31 f4       	brne	.+12     	; 0x9fc <__stack+0x19d>
     9f0:	28 81       	ld	r18, Y
     9f2:	2d 30       	cpi	r18, 0x0D	; 13
     9f4:	19 f4       	brne	.+6      	; 0x9fc <__stack+0x19d>
     9f6:	5d 2d       	mov	r21, r13
     9f8:	01 c0       	rjmp	.+2      	; 0x9fc <__stack+0x19d>
     9fa:	5d 2d       	mov	r21, r13
     9fc:	01 96       	adiw	r24, 0x01	; 1
     9fe:	86 17       	cp	r24, r22
     a00:	97 07       	cpc	r25, r23
     a02:	09 f0       	breq	.+2      	; 0xa06 <__stack+0x1a7>
     a04:	27 cf       	rjmp	.-434    	; 0x854 <ESP_ReadResponseLine+0x52>
     a06:	50 93 f9 00 	sts	0x00F9, r21	; 0x8000f9 <ReceivedFullResponse>
     a0a:	f0 92 f8 00 	sts	0x00F8, r15	; 0x8000f8 <CorrectDataReceived>
     a0e:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     a12:	88 23       	and	r24, r24
     a14:	59 f0       	breq	.+22     	; 0xa2c <__stack+0x1cd>
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	80 0f       	add	r24, r16
     a1a:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <ResponseBufferMain_Index>
     a1e:	e0 2f       	mov	r30, r16
     a20:	f0 e0       	ldi	r31, 0x00	; 0
     a22:	e5 50       	subi	r30, 0x05	; 5
     a24:	ff 4f       	sbci	r31, 0xFF	; 255
     a26:	10 82       	st	Z, r1
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	01 c0       	rjmp	.+2      	; 0xa2e <__stack+0x1cf>
     a2c:	82 e0       	ldi	r24, 0x02	; 2
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	ff 90       	pop	r15
     a38:	df 90       	pop	r13
     a3a:	cf 90       	pop	r12
     a3c:	bf 90       	pop	r11
     a3e:	af 90       	pop	r10
     a40:	9f 90       	pop	r9
     a42:	8f 90       	pop	r8
     a44:	08 95       	ret

00000a46 <ESP_FillResponseBuffer>:
     a46:	e0 91 fa 00 	lds	r30, 0x00FA	; 0x8000fa <ResponseBufferMain_Index>
     a4a:	91 e0       	ldi	r25, 0x01	; 1
     a4c:	9e 0f       	add	r25, r30
     a4e:	90 93 fa 00 	sts	0x00FA, r25	; 0x8000fa <ResponseBufferMain_Index>
     a52:	f0 e0       	ldi	r31, 0x00	; 0
     a54:	e5 50       	subi	r30, 0x05	; 5
     a56:	ff 4f       	sbci	r31, 0xFF	; 255
     a58:	80 83       	st	Z, r24
     a5a:	9a 3f       	cpi	r25, 0xFA	; 250
     a5c:	11 f4       	brne	.+4      	; 0xa62 <ESP_FillResponseBuffer+0x1c>
     a5e:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <ResponseBufferMain_Index>
     a62:	08 95       	ret

00000a64 <ESP_ClearResponseBuffer>:
     a64:	20 91 fa 00 	lds	r18, 0x00FA	; 0x8000fa <ResponseBufferMain_Index>
     a68:	22 23       	and	r18, r18
     a6a:	71 f0       	breq	.+28     	; 0xa88 <ESP_ClearResponseBuffer+0x24>
     a6c:	21 50       	subi	r18, 0x01	; 1
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	2f 5f       	subi	r18, 0xFF	; 255
     a72:	3f 4f       	sbci	r19, 0xFF	; 255
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	fc 01       	movw	r30, r24
     a7a:	e5 50       	subi	r30, 0x05	; 5
     a7c:	ff 4f       	sbci	r31, 0xFF	; 255
     a7e:	10 82       	st	Z, r1
     a80:	01 96       	adiw	r24, 0x01	; 1
     a82:	82 17       	cp	r24, r18
     a84:	93 07       	cpc	r25, r19
     a86:	c1 f7       	brne	.-16     	; 0xa78 <ESP_ClearResponseBuffer+0x14>
     a88:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <ResponseBufferMain_Index>
     a8c:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <ReceivedFullResponse>
     a90:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <CorrectDataReceived>
     a94:	08 95       	ret

00000a96 <ESP_Enable_multiple_connections>:
     a96:	0f 93       	push	r16
     a98:	1f 93       	push	r17
     a9a:	cf 93       	push	r28
     a9c:	df 93       	push	r29
     a9e:	cd b7       	in	r28, 0x3d	; 61
     aa0:	de b7       	in	r29, 0x3e	; 62
     aa2:	2b 97       	sbiw	r28, 0x0b	; 11
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	f8 94       	cli
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	cd bf       	out	0x3d, r28	; 61
     aae:	8c 01       	movw	r16, r24
     ab0:	8b e0       	ldi	r24, 0x0B	; 11
     ab2:	ea e8       	ldi	r30, 0x8A	; 138
     ab4:	f0 e0       	ldi	r31, 0x00	; 0
     ab6:	de 01       	movw	r26, r28
     ab8:	11 96       	adiw	r26, 0x01	; 1
     aba:	01 90       	ld	r0, Z+
     abc:	0d 92       	st	X+, r0
     abe:	8a 95       	dec	r24
     ac0:	e1 f7       	brne	.-8      	; 0xaba <ESP_Enable_multiple_connections+0x24>
     ac2:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <RequestSent.1811>
     ac6:	81 11       	cpse	r24, r1
     ac8:	45 c0       	rjmp	.+138    	; 0xb54 <ESP_Enable_multiple_connections+0xbe>
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <RequestSent.1811>
     ad0:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     ad4:	29 81       	ldd	r18, Y+1	; 0x01
     ad6:	22 23       	and	r18, r18
     ad8:	a1 f0       	breq	.+40     	; 0xb02 <ESP_Enable_multiple_connections+0x6c>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	e0 e0       	ldi	r30, 0x00	; 0
     ae0:	ef 5f       	subi	r30, 0xFF	; 255
     ae2:	dc 01       	movw	r26, r24
     ae4:	ab 50       	subi	r26, 0x0B	; 11
     ae6:	be 4f       	sbci	r27, 0xFE	; 254
     ae8:	2c 93       	st	X, r18
     aea:	8e 2f       	mov	r24, r30
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	a1 e0       	ldi	r26, 0x01	; 1
     af0:	b0 e0       	ldi	r27, 0x00	; 0
     af2:	ac 0f       	add	r26, r28
     af4:	bd 1f       	adc	r27, r29
     af6:	a8 0f       	add	r26, r24
     af8:	b9 1f       	adc	r27, r25
     afa:	2c 91       	ld	r18, X
     afc:	21 11       	cpse	r18, r1
     afe:	f0 cf       	rjmp	.-32     	; 0xae0 <ESP_Enable_multiple_connections+0x4a>
     b00:	01 c0       	rjmp	.+2      	; 0xb04 <ESP_Enable_multiple_connections+0x6e>
     b02:	e0 e0       	ldi	r30, 0x00	; 0
     b04:	d8 01       	movw	r26, r16
     b06:	9c 91       	ld	r25, X
     b08:	99 23       	and	r25, r25
     b0a:	61 f0       	breq	.+24     	; 0xb24 <ESP_Enable_multiple_connections+0x8e>
     b0c:	11 96       	adiw	r26, 0x01	; 1
     b0e:	21 e0       	ldi	r18, 0x01	; 1
     b10:	2e 0f       	add	r18, r30
     b12:	f0 e0       	ldi	r31, 0x00	; 0
     b14:	eb 50       	subi	r30, 0x0B	; 11
     b16:	fe 4f       	sbci	r31, 0xFE	; 254
     b18:	90 83       	st	Z, r25
     b1a:	9d 91       	ld	r25, X+
     b1c:	e2 2f       	mov	r30, r18
     b1e:	91 11       	cpse	r25, r1
     b20:	f6 cf       	rjmp	.-20     	; 0xb0e <ESP_Enable_multiple_connections+0x78>
     b22:	01 c0       	rjmp	.+2      	; 0xb26 <ESP_Enable_multiple_connections+0x90>
     b24:	2e 2f       	mov	r18, r30
     b26:	e2 2f       	mov	r30, r18
     b28:	f0 e0       	ldi	r31, 0x00	; 0
     b2a:	eb 50       	subi	r30, 0x0B	; 11
     b2c:	fe 4f       	sbci	r31, 0xFE	; 254
     b2e:	8d e0       	ldi	r24, 0x0D	; 13
     b30:	80 83       	st	Z, r24
     b32:	e1 e0       	ldi	r30, 0x01	; 1
     b34:	e2 0f       	add	r30, r18
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	eb 50       	subi	r30, 0x0B	; 11
     b3a:	fe 4f       	sbci	r31, 0xFE	; 254
     b3c:	8a e0       	ldi	r24, 0x0A	; 10
     b3e:	80 83       	st	Z, r24
     b40:	2e 5f       	subi	r18, 0xFE	; 254
     b42:	e2 2f       	mov	r30, r18
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	eb 50       	subi	r30, 0x0B	; 11
     b48:	fe 4f       	sbci	r31, 0xFE	; 254
     b4a:	10 82       	st	Z, r1
     b4c:	85 ef       	ldi	r24, 0xF5	; 245
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
     b54:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     b58:	88 23       	and	r24, r24
     b5a:	c1 f0       	breq	.+48     	; 0xb8c <ESP_Enable_multiple_connections+0xf6>
     b5c:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     b60:	82 30       	cpi	r24, 0x02	; 2
     b62:	a1 f0       	breq	.+40     	; 0xb8c <ESP_Enable_multiple_connections+0xf6>
     b64:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     b68:	88 23       	and	r24, r24
     b6a:	79 f0       	breq	.+30     	; 0xb8a <ESP_Enable_multiple_connections+0xf4>
     b6c:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     b70:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <RequestSent.1811>
     b74:	bf e1       	ldi	r27, 0x1F	; 31
     b76:	2f eb       	ldi	r18, 0xBF	; 191
     b78:	82 e0       	ldi	r24, 0x02	; 2
     b7a:	b1 50       	subi	r27, 0x01	; 1
     b7c:	20 40       	sbci	r18, 0x00	; 0
     b7e:	80 40       	sbci	r24, 0x00	; 0
     b80:	e1 f7       	brne	.-8      	; 0xb7a <ESP_Enable_multiple_connections+0xe4>
     b82:	00 c0       	rjmp	.+0      	; 0xb84 <ESP_Enable_multiple_connections+0xee>
     b84:	00 00       	nop
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	01 c0       	rjmp	.+2      	; 0xb8c <ESP_Enable_multiple_connections+0xf6>
     b8a:	82 e0       	ldi	r24, 0x02	; 2
     b8c:	2b 96       	adiw	r28, 0x0b	; 11
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	f8 94       	cli
     b92:	de bf       	out	0x3e, r29	; 62
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	cd bf       	out	0x3d, r28	; 61
     b98:	df 91       	pop	r29
     b9a:	cf 91       	pop	r28
     b9c:	1f 91       	pop	r17
     b9e:	0f 91       	pop	r16
     ba0:	08 95       	ret

00000ba2 <ESP_Configure_As_server>:
     ba2:	0f 93       	push	r16
     ba4:	1f 93       	push	r17
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	cd b7       	in	r28, 0x3d	; 61
     bac:	de b7       	in	r29, 0x3e	; 62
     bae:	60 97       	sbiw	r28, 0x10	; 16
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	8c 01       	movw	r16, r24
     bbc:	80 e1       	ldi	r24, 0x10	; 16
     bbe:	e5 e9       	ldi	r30, 0x95	; 149
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	de 01       	movw	r26, r28
     bc4:	11 96       	adiw	r26, 0x01	; 1
     bc6:	01 90       	ld	r0, Z+
     bc8:	0d 92       	st	X+, r0
     bca:	8a 95       	dec	r24
     bcc:	e1 f7       	brne	.-8      	; 0xbc6 <ESP_Configure_As_server+0x24>
     bce:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <RequestSent.1823>
     bd2:	81 11       	cpse	r24, r1
     bd4:	45 c0       	rjmp	.+138    	; 0xc60 <ESP_Configure_As_server+0xbe>
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <RequestSent.1823>
     bdc:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     be0:	29 81       	ldd	r18, Y+1	; 0x01
     be2:	22 23       	and	r18, r18
     be4:	a1 f0       	breq	.+40     	; 0xc0e <ESP_Configure_As_server+0x6c>
     be6:	80 e0       	ldi	r24, 0x00	; 0
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	e0 e0       	ldi	r30, 0x00	; 0
     bec:	ef 5f       	subi	r30, 0xFF	; 255
     bee:	dc 01       	movw	r26, r24
     bf0:	ab 50       	subi	r26, 0x0B	; 11
     bf2:	be 4f       	sbci	r27, 0xFE	; 254
     bf4:	2c 93       	st	X, r18
     bf6:	8e 2f       	mov	r24, r30
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	a1 e0       	ldi	r26, 0x01	; 1
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	ac 0f       	add	r26, r28
     c00:	bd 1f       	adc	r27, r29
     c02:	a8 0f       	add	r26, r24
     c04:	b9 1f       	adc	r27, r25
     c06:	2c 91       	ld	r18, X
     c08:	21 11       	cpse	r18, r1
     c0a:	f0 cf       	rjmp	.-32     	; 0xbec <ESP_Configure_As_server+0x4a>
     c0c:	01 c0       	rjmp	.+2      	; 0xc10 <ESP_Configure_As_server+0x6e>
     c0e:	e0 e0       	ldi	r30, 0x00	; 0
     c10:	d8 01       	movw	r26, r16
     c12:	9c 91       	ld	r25, X
     c14:	99 23       	and	r25, r25
     c16:	61 f0       	breq	.+24     	; 0xc30 <ESP_Configure_As_server+0x8e>
     c18:	11 96       	adiw	r26, 0x01	; 1
     c1a:	21 e0       	ldi	r18, 0x01	; 1
     c1c:	2e 0f       	add	r18, r30
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	eb 50       	subi	r30, 0x0B	; 11
     c22:	fe 4f       	sbci	r31, 0xFE	; 254
     c24:	90 83       	st	Z, r25
     c26:	9d 91       	ld	r25, X+
     c28:	e2 2f       	mov	r30, r18
     c2a:	91 11       	cpse	r25, r1
     c2c:	f6 cf       	rjmp	.-20     	; 0xc1a <ESP_Configure_As_server+0x78>
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <ESP_Configure_As_server+0x90>
     c30:	2e 2f       	mov	r18, r30
     c32:	e2 2f       	mov	r30, r18
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	eb 50       	subi	r30, 0x0B	; 11
     c38:	fe 4f       	sbci	r31, 0xFE	; 254
     c3a:	8d e0       	ldi	r24, 0x0D	; 13
     c3c:	80 83       	st	Z, r24
     c3e:	e1 e0       	ldi	r30, 0x01	; 1
     c40:	e2 0f       	add	r30, r18
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	eb 50       	subi	r30, 0x0B	; 11
     c46:	fe 4f       	sbci	r31, 0xFE	; 254
     c48:	8a e0       	ldi	r24, 0x0A	; 10
     c4a:	80 83       	st	Z, r24
     c4c:	2e 5f       	subi	r18, 0xFE	; 254
     c4e:	e2 2f       	mov	r30, r18
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	eb 50       	subi	r30, 0x0B	; 11
     c54:	fe 4f       	sbci	r31, 0xFE	; 254
     c56:	10 82       	st	Z, r1
     c58:	85 ef       	ldi	r24, 0xF5	; 245
     c5a:	91 e0       	ldi	r25, 0x01	; 1
     c5c:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
     c60:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     c64:	88 23       	and	r24, r24
     c66:	c1 f0       	breq	.+48     	; 0xc98 <ESP_Configure_As_server+0xf6>
     c68:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	a1 f0       	breq	.+40     	; 0xc98 <ESP_Configure_As_server+0xf6>
     c70:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     c74:	88 23       	and	r24, r24
     c76:	79 f0       	breq	.+30     	; 0xc96 <ESP_Configure_As_server+0xf4>
     c78:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     c7c:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <RequestSent.1823>
     c80:	bf e1       	ldi	r27, 0x1F	; 31
     c82:	2f eb       	ldi	r18, 0xBF	; 191
     c84:	82 e0       	ldi	r24, 0x02	; 2
     c86:	b1 50       	subi	r27, 0x01	; 1
     c88:	20 40       	sbci	r18, 0x00	; 0
     c8a:	80 40       	sbci	r24, 0x00	; 0
     c8c:	e1 f7       	brne	.-8      	; 0xc86 <ESP_Configure_As_server+0xe4>
     c8e:	00 c0       	rjmp	.+0      	; 0xc90 <ESP_Configure_As_server+0xee>
     c90:	00 00       	nop
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	01 c0       	rjmp	.+2      	; 0xc98 <ESP_Configure_As_server+0xf6>
     c96:	82 e0       	ldi	r24, 0x02	; 2
     c98:	60 96       	adiw	r28, 0x10	; 16
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	de bf       	out	0x3e, r29	; 62
     ca0:	0f be       	out	0x3f, r0	; 63
     ca2:	cd bf       	out	0x3d, r28	; 61
     ca4:	df 91       	pop	r29
     ca6:	cf 91       	pop	r28
     ca8:	1f 91       	pop	r17
     caa:	0f 91       	pop	r16
     cac:	08 95       	ret

00000cae <ESP_SelectMode>:
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	2b 97       	sbiw	r28, 0x0b	; 11
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	f8 94       	cli
     cbe:	de bf       	out	0x3e, r29	; 62
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	cd bf       	out	0x3d, r28	; 61
     cc4:	18 2f       	mov	r17, r24
     cc6:	8b e0       	ldi	r24, 0x0B	; 11
     cc8:	e5 ea       	ldi	r30, 0xA5	; 165
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	de 01       	movw	r26, r28
     cce:	11 96       	adiw	r26, 0x01	; 1
     cd0:	01 90       	ld	r0, Z+
     cd2:	0d 92       	st	X+, r0
     cd4:	8a 95       	dec	r24
     cd6:	e1 f7       	brne	.-8      	; 0xcd0 <ESP_SelectMode+0x22>
     cd8:	80 91 f5 00 	lds	r24, 0x00F5	; 0x8000f5 <RequestSent.1845>
     cdc:	81 11       	cpse	r24, r1
     cde:	3a c0       	rjmp	.+116    	; 0xd54 <ESP_SelectMode+0xa6>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <RequestSent.1845>
     ce6:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     cea:	29 81       	ldd	r18, Y+1	; 0x01
     cec:	22 23       	and	r18, r18
     cee:	a1 f0       	breq	.+40     	; 0xd18 <ESP_SelectMode+0x6a>
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	e0 e0       	ldi	r30, 0x00	; 0
     cf6:	ef 5f       	subi	r30, 0xFF	; 255
     cf8:	dc 01       	movw	r26, r24
     cfa:	ab 50       	subi	r26, 0x0B	; 11
     cfc:	be 4f       	sbci	r27, 0xFE	; 254
     cfe:	2c 93       	st	X, r18
     d00:	8e 2f       	mov	r24, r30
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	a1 e0       	ldi	r26, 0x01	; 1
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	ac 0f       	add	r26, r28
     d0a:	bd 1f       	adc	r27, r29
     d0c:	a8 0f       	add	r26, r24
     d0e:	b9 1f       	adc	r27, r25
     d10:	2c 91       	ld	r18, X
     d12:	21 11       	cpse	r18, r1
     d14:	f0 cf       	rjmp	.-32     	; 0xcf6 <ESP_SelectMode+0x48>
     d16:	03 c0       	rjmp	.+6      	; 0xd1e <ESP_SelectMode+0x70>
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	e0 e0       	ldi	r30, 0x00	; 0
     d1e:	dc 01       	movw	r26, r24
     d20:	ab 50       	subi	r26, 0x0B	; 11
     d22:	be 4f       	sbci	r27, 0xFE	; 254
     d24:	1c 93       	st	X, r17
     d26:	a1 e0       	ldi	r26, 0x01	; 1
     d28:	ae 0f       	add	r26, r30
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	ab 50       	subi	r26, 0x0B	; 11
     d2e:	be 4f       	sbci	r27, 0xFE	; 254
     d30:	8d e0       	ldi	r24, 0x0D	; 13
     d32:	8c 93       	st	X, r24
     d34:	a2 e0       	ldi	r26, 0x02	; 2
     d36:	ae 0f       	add	r26, r30
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	ab 50       	subi	r26, 0x0B	; 11
     d3c:	be 4f       	sbci	r27, 0xFE	; 254
     d3e:	8a e0       	ldi	r24, 0x0A	; 10
     d40:	8c 93       	st	X, r24
     d42:	ed 5f       	subi	r30, 0xFD	; 253
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	eb 50       	subi	r30, 0x0B	; 11
     d48:	fe 4f       	sbci	r31, 0xFE	; 254
     d4a:	10 82       	st	Z, r1
     d4c:	85 ef       	ldi	r24, 0xF5	; 245
     d4e:	91 e0       	ldi	r25, 0x01	; 1
     d50:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
     d54:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     d58:	88 23       	and	r24, r24
     d5a:	c1 f0       	breq	.+48     	; 0xd8c <ESP_SelectMode+0xde>
     d5c:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     d60:	82 30       	cpi	r24, 0x02	; 2
     d62:	a1 f0       	breq	.+40     	; 0xd8c <ESP_SelectMode+0xde>
     d64:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     d68:	88 23       	and	r24, r24
     d6a:	79 f0       	breq	.+30     	; 0xd8a <ESP_SelectMode+0xdc>
     d6c:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     d70:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <RequestSent.1845>
     d74:	2f e1       	ldi	r18, 0x1F	; 31
     d76:	8f eb       	ldi	r24, 0xBF	; 191
     d78:	92 e0       	ldi	r25, 0x02	; 2
     d7a:	21 50       	subi	r18, 0x01	; 1
     d7c:	80 40       	sbci	r24, 0x00	; 0
     d7e:	90 40       	sbci	r25, 0x00	; 0
     d80:	e1 f7       	brne	.-8      	; 0xd7a <ESP_SelectMode+0xcc>
     d82:	00 c0       	rjmp	.+0      	; 0xd84 <ESP_SelectMode+0xd6>
     d84:	00 00       	nop
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	01 c0       	rjmp	.+2      	; 0xd8c <ESP_SelectMode+0xde>
     d8a:	82 e0       	ldi	r24, 0x02	; 2
     d8c:	2b 96       	adiw	r28, 0x0b	; 11
     d8e:	0f b6       	in	r0, 0x3f	; 63
     d90:	f8 94       	cli
     d92:	de bf       	out	0x3e, r29	; 62
     d94:	0f be       	out	0x3f, r0	; 63
     d96:	cd bf       	out	0x3d, r28	; 61
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	1f 91       	pop	r17
     d9e:	08 95       	ret

00000da0 <ESP_CreateAccesPoint>:
     da0:	af 92       	push	r10
     da2:	bf 92       	push	r11
     da4:	cf 92       	push	r12
     da6:	df 92       	push	r13
     da8:	ef 92       	push	r14
     daa:	ff 92       	push	r15
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	2b 97       	sbiw	r28, 0x0b	; 11
     dba:	0f b6       	in	r0, 0x3f	; 63
     dbc:	f8 94       	cli
     dbe:	de bf       	out	0x3e, r29	; 62
     dc0:	0f be       	out	0x3f, r0	; 63
     dc2:	cd bf       	out	0x3d, r28	; 61
     dc4:	5c 01       	movw	r10, r24
     dc6:	6b 01       	movw	r12, r22
     dc8:	7a 01       	movw	r14, r20
     dca:	89 01       	movw	r16, r18
     dcc:	8b e0       	ldi	r24, 0x0B	; 11
     dce:	e0 eb       	ldi	r30, 0xB0	; 176
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	de 01       	movw	r26, r28
     dd4:	11 96       	adiw	r26, 0x01	; 1
     dd6:	01 90       	ld	r0, Z+
     dd8:	0d 92       	st	X+, r0
     dda:	8a 95       	dec	r24
     ddc:	e1 f7       	brne	.-8      	; 0xdd6 <ESP_CreateAccesPoint+0x36>
     dde:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <RequestSent.1857>
     de2:	81 11       	cpse	r24, r1
     de4:	a1 c0       	rjmp	.+322    	; 0xf28 <ESP_CreateAccesPoint+0x188>
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <RequestSent.1857>
     dec:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     df0:	9e 01       	movw	r18, r28
     df2:	2f 5f       	subi	r18, 0xFF	; 255
     df4:	3f 4f       	sbci	r19, 0xFF	; 255
     df6:	ae 01       	movw	r20, r28
     df8:	44 5f       	subi	r20, 0xF4	; 244
     dfa:	5f 4f       	sbci	r21, 0xFF	; 255
     dfc:	f9 01       	movw	r30, r18
     dfe:	df 01       	movw	r26, r30
     e00:	a2 1b       	sub	r26, r18
     e02:	b3 0b       	sbc	r27, r19
     e04:	81 91       	ld	r24, Z+
     e06:	ab 50       	subi	r26, 0x0B	; 11
     e08:	be 4f       	sbci	r27, 0xFE	; 254
     e0a:	8c 93       	st	X, r24
     e0c:	e4 17       	cp	r30, r20
     e0e:	f5 07       	cpc	r31, r21
     e10:	b1 f7       	brne	.-20     	; 0xdfe <ESP_CreateAccesPoint+0x5e>
     e12:	d5 01       	movw	r26, r10
     e14:	8c 91       	ld	r24, X
     e16:	88 23       	and	r24, r24
     e18:	89 f0       	breq	.+34     	; 0xe3c <ESP_CreateAccesPoint+0x9c>
     e1a:	bf ef       	ldi	r27, 0xFF	; 255
     e1c:	ab 1a       	sub	r10, r27
     e1e:	bb 0a       	sbc	r11, r27
     e20:	ea e0       	ldi	r30, 0x0A	; 10
     e22:	a1 e0       	ldi	r26, 0x01	; 1
     e24:	ae 0f       	add	r26, r30
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	eb 50       	subi	r30, 0x0B	; 11
     e2a:	fe 4f       	sbci	r31, 0xFE	; 254
     e2c:	80 83       	st	Z, r24
     e2e:	f5 01       	movw	r30, r10
     e30:	81 91       	ld	r24, Z+
     e32:	5f 01       	movw	r10, r30
     e34:	ea 2f       	mov	r30, r26
     e36:	81 11       	cpse	r24, r1
     e38:	f4 cf       	rjmp	.-24     	; 0xe22 <ESP_CreateAccesPoint+0x82>
     e3a:	01 c0       	rjmp	.+2      	; 0xe3e <ESP_CreateAccesPoint+0x9e>
     e3c:	aa e0       	ldi	r26, 0x0A	; 10
     e3e:	ea 2f       	mov	r30, r26
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	eb 50       	subi	r30, 0x0B	; 11
     e44:	fe 4f       	sbci	r31, 0xFE	; 254
     e46:	82 e2       	ldi	r24, 0x22	; 34
     e48:	80 83       	st	Z, r24
     e4a:	e1 e0       	ldi	r30, 0x01	; 1
     e4c:	ea 0f       	add	r30, r26
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	eb 50       	subi	r30, 0x0B	; 11
     e52:	fe 4f       	sbci	r31, 0xFE	; 254
     e54:	9c e2       	ldi	r25, 0x2C	; 44
     e56:	90 83       	st	Z, r25
     e58:	e3 e0       	ldi	r30, 0x03	; 3
     e5a:	ea 0f       	add	r30, r26
     e5c:	ae 5f       	subi	r26, 0xFE	; 254
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	ab 50       	subi	r26, 0x0B	; 11
     e62:	be 4f       	sbci	r27, 0xFE	; 254
     e64:	8c 93       	st	X, r24
     e66:	d6 01       	movw	r26, r12
     e68:	8c 91       	ld	r24, X
     e6a:	88 23       	and	r24, r24
     e6c:	61 f0       	breq	.+24     	; 0xe86 <ESP_CreateAccesPoint+0xe6>
     e6e:	11 96       	adiw	r26, 0x01	; 1
     e70:	91 e0       	ldi	r25, 0x01	; 1
     e72:	9e 0f       	add	r25, r30
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	eb 50       	subi	r30, 0x0B	; 11
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
     e7a:	80 83       	st	Z, r24
     e7c:	8d 91       	ld	r24, X+
     e7e:	e9 2f       	mov	r30, r25
     e80:	81 11       	cpse	r24, r1
     e82:	f6 cf       	rjmp	.-20     	; 0xe70 <ESP_CreateAccesPoint+0xd0>
     e84:	01 c0       	rjmp	.+2      	; 0xe88 <ESP_CreateAccesPoint+0xe8>
     e86:	9e 2f       	mov	r25, r30
     e88:	e9 2f       	mov	r30, r25
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	eb 50       	subi	r30, 0x0B	; 11
     e8e:	fe 4f       	sbci	r31, 0xFE	; 254
     e90:	82 e2       	ldi	r24, 0x22	; 34
     e92:	80 83       	st	Z, r24
     e94:	e2 e0       	ldi	r30, 0x02	; 2
     e96:	e9 0f       	add	r30, r25
     e98:	a1 e0       	ldi	r26, 0x01	; 1
     e9a:	a9 0f       	add	r26, r25
     e9c:	b0 e0       	ldi	r27, 0x00	; 0
     e9e:	ab 50       	subi	r26, 0x0B	; 11
     ea0:	be 4f       	sbci	r27, 0xFE	; 254
     ea2:	8c e2       	ldi	r24, 0x2C	; 44
     ea4:	8c 93       	st	X, r24
     ea6:	d7 01       	movw	r26, r14
     ea8:	8c 91       	ld	r24, X
     eaa:	88 23       	and	r24, r24
     eac:	61 f0       	breq	.+24     	; 0xec6 <ESP_CreateAccesPoint+0x126>
     eae:	11 96       	adiw	r26, 0x01	; 1
     eb0:	91 e0       	ldi	r25, 0x01	; 1
     eb2:	9e 0f       	add	r25, r30
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	eb 50       	subi	r30, 0x0B	; 11
     eb8:	fe 4f       	sbci	r31, 0xFE	; 254
     eba:	80 83       	st	Z, r24
     ebc:	8d 91       	ld	r24, X+
     ebe:	e9 2f       	mov	r30, r25
     ec0:	81 11       	cpse	r24, r1
     ec2:	f6 cf       	rjmp	.-20     	; 0xeb0 <ESP_CreateAccesPoint+0x110>
     ec4:	01 c0       	rjmp	.+2      	; 0xec8 <ESP_CreateAccesPoint+0x128>
     ec6:	9e 2f       	mov	r25, r30
     ec8:	e1 e0       	ldi	r30, 0x01	; 1
     eca:	e9 0f       	add	r30, r25
     ecc:	a9 2f       	mov	r26, r25
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	ab 50       	subi	r26, 0x0B	; 11
     ed2:	be 4f       	sbci	r27, 0xFE	; 254
     ed4:	8c e2       	ldi	r24, 0x2C	; 44
     ed6:	8c 93       	st	X, r24
     ed8:	d8 01       	movw	r26, r16
     eda:	8c 91       	ld	r24, X
     edc:	88 23       	and	r24, r24
     ede:	61 f0       	breq	.+24     	; 0xef8 <ESP_CreateAccesPoint+0x158>
     ee0:	11 96       	adiw	r26, 0x01	; 1
     ee2:	91 e0       	ldi	r25, 0x01	; 1
     ee4:	9e 0f       	add	r25, r30
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	eb 50       	subi	r30, 0x0B	; 11
     eea:	fe 4f       	sbci	r31, 0xFE	; 254
     eec:	80 83       	st	Z, r24
     eee:	8d 91       	ld	r24, X+
     ef0:	e9 2f       	mov	r30, r25
     ef2:	81 11       	cpse	r24, r1
     ef4:	f6 cf       	rjmp	.-20     	; 0xee2 <ESP_CreateAccesPoint+0x142>
     ef6:	01 c0       	rjmp	.+2      	; 0xefa <ESP_CreateAccesPoint+0x15a>
     ef8:	9e 2f       	mov	r25, r30
     efa:	e9 2f       	mov	r30, r25
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	eb 50       	subi	r30, 0x0B	; 11
     f00:	fe 4f       	sbci	r31, 0xFE	; 254
     f02:	8d e0       	ldi	r24, 0x0D	; 13
     f04:	80 83       	st	Z, r24
     f06:	e1 e0       	ldi	r30, 0x01	; 1
     f08:	e9 0f       	add	r30, r25
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	eb 50       	subi	r30, 0x0B	; 11
     f0e:	fe 4f       	sbci	r31, 0xFE	; 254
     f10:	8a e0       	ldi	r24, 0x0A	; 10
     f12:	80 83       	st	Z, r24
     f14:	9e 5f       	subi	r25, 0xFE	; 254
     f16:	e9 2f       	mov	r30, r25
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	eb 50       	subi	r30, 0x0B	; 11
     f1c:	fe 4f       	sbci	r31, 0xFE	; 254
     f1e:	10 82       	st	Z, r1
     f20:	85 ef       	ldi	r24, 0xF5	; 245
     f22:	91 e0       	ldi	r25, 0x01	; 1
     f24:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
     f28:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     f2c:	88 23       	and	r24, r24
     f2e:	c1 f0       	breq	.+48     	; 0xf60 <ESP_CreateAccesPoint+0x1c0>
     f30:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
     f34:	82 30       	cpi	r24, 0x02	; 2
     f36:	a1 f0       	breq	.+40     	; 0xf60 <ESP_CreateAccesPoint+0x1c0>
     f38:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
     f3c:	88 23       	and	r24, r24
     f3e:	79 f0       	breq	.+30     	; 0xf5e <ESP_CreateAccesPoint+0x1be>
     f40:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     f44:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <RequestSent.1857>
     f48:	bf e1       	ldi	r27, 0x1F	; 31
     f4a:	ef eb       	ldi	r30, 0xBF	; 191
     f4c:	f2 e0       	ldi	r31, 0x02	; 2
     f4e:	b1 50       	subi	r27, 0x01	; 1
     f50:	e0 40       	sbci	r30, 0x00	; 0
     f52:	f0 40       	sbci	r31, 0x00	; 0
     f54:	e1 f7       	brne	.-8      	; 0xf4e <ESP_CreateAccesPoint+0x1ae>
     f56:	00 c0       	rjmp	.+0      	; 0xf58 <ESP_CreateAccesPoint+0x1b8>
     f58:	00 00       	nop
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	01 c0       	rjmp	.+2      	; 0xf60 <ESP_CreateAccesPoint+0x1c0>
     f5e:	82 e0       	ldi	r24, 0x02	; 2
     f60:	2b 96       	adiw	r28, 0x0b	; 11
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	df 91       	pop	r29
     f6e:	cf 91       	pop	r28
     f70:	1f 91       	pop	r17
     f72:	0f 91       	pop	r16
     f74:	ff 90       	pop	r15
     f76:	ef 90       	pop	r14
     f78:	df 90       	pop	r13
     f7a:	cf 90       	pop	r12
     f7c:	bf 90       	pop	r11
     f7e:	af 90       	pop	r10
     f80:	08 95       	ret

00000f82 <ESP_StartServer>:
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	ec 01       	movw	r28, r24
     f88:	83 e7       	ldi	r24, 0x73	; 115
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 4b 05 	call	0xa96	; 0xa96 <ESP_Enable_multiple_connections>
     f90:	81 30       	cpi	r24, 0x01	; 1
     f92:	d1 f7       	brne	.-12     	; 0xf88 <ESP_StartServer+0x6>
     f94:	ce 01       	movw	r24, r28
     f96:	0e 94 d1 05 	call	0xba2	; 0xba2 <ESP_Configure_As_server>
     f9a:	81 30       	cpi	r24, 0x01	; 1
     f9c:	d9 f7       	brne	.-10     	; 0xf94 <ESP_StartServer+0x12>
     f9e:	df 91       	pop	r29
     fa0:	cf 91       	pop	r28
     fa2:	08 95       	ret

00000fa4 <ESP_SendData>:
     fa4:	ef 92       	push	r14
     fa6:	ff 92       	push	r15
     fa8:	0f 93       	push	r16
     faa:	1f 93       	push	r17
     fac:	cf 93       	push	r28
     fae:	df 93       	push	r29
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	2e 97       	sbiw	r28, 0x0e	; 14
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	8c 01       	movw	r16, r24
     fc2:	7b 01       	movw	r14, r22
     fc4:	8e e0       	ldi	r24, 0x0E	; 14
     fc6:	ec ed       	ldi	r30, 0xDC	; 220
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	de 01       	movw	r26, r28
     fcc:	11 96       	adiw	r26, 0x01	; 1
     fce:	01 90       	ld	r0, Z+
     fd0:	0d 92       	st	X+, r0
     fd2:	8a 95       	dec	r24
     fd4:	e1 f7       	brne	.-8      	; 0xfce <ESP_SendData+0x2a>
     fd6:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <RequestSent.1920>
     fda:	81 11       	cpse	r24, r1
     fdc:	40 c0       	rjmp	.+128    	; 0x105e <ESP_SendData+0xba>
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <RequestSent.1920>
     fe4:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
     fe8:	9e 01       	movw	r18, r28
     fea:	2f 5f       	subi	r18, 0xFF	; 255
     fec:	3f 4f       	sbci	r19, 0xFF	; 255
     fee:	ae 01       	movw	r20, r28
     ff0:	41 5f       	subi	r20, 0xF1	; 241
     ff2:	5f 4f       	sbci	r21, 0xFF	; 255
     ff4:	f9 01       	movw	r30, r18
     ff6:	df 01       	movw	r26, r30
     ff8:	a2 1b       	sub	r26, r18
     ffa:	b3 0b       	sbc	r27, r19
     ffc:	81 91       	ld	r24, Z+
     ffe:	ab 50       	subi	r26, 0x0B	; 11
    1000:	be 4f       	sbci	r27, 0xFE	; 254
    1002:	8c 93       	st	X, r24
    1004:	e4 17       	cp	r30, r20
    1006:	f5 07       	cpc	r31, r21
    1008:	b1 f7       	brne	.-20     	; 0xff6 <ESP_SendData+0x52>
    100a:	f7 01       	movw	r30, r14
    100c:	80 81       	ld	r24, Z
    100e:	88 23       	and	r24, r24
    1010:	71 f0       	breq	.+28     	; 0x102e <ESP_SendData+0x8a>
    1012:	d7 01       	movw	r26, r14
    1014:	11 96       	adiw	r26, 0x01	; 1
    1016:	ed e0       	ldi	r30, 0x0D	; 13
    1018:	91 e0       	ldi	r25, 0x01	; 1
    101a:	9e 0f       	add	r25, r30
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	eb 50       	subi	r30, 0x0B	; 11
    1020:	fe 4f       	sbci	r31, 0xFE	; 254
    1022:	80 83       	st	Z, r24
    1024:	8d 91       	ld	r24, X+
    1026:	e9 2f       	mov	r30, r25
    1028:	81 11       	cpse	r24, r1
    102a:	f6 cf       	rjmp	.-20     	; 0x1018 <ESP_SendData+0x74>
    102c:	01 c0       	rjmp	.+2      	; 0x1030 <ESP_SendData+0x8c>
    102e:	9d e0       	ldi	r25, 0x0D	; 13
    1030:	e9 2f       	mov	r30, r25
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	eb 50       	subi	r30, 0x0B	; 11
    1036:	fe 4f       	sbci	r31, 0xFE	; 254
    1038:	8d e0       	ldi	r24, 0x0D	; 13
    103a:	80 83       	st	Z, r24
    103c:	e1 e0       	ldi	r30, 0x01	; 1
    103e:	e9 0f       	add	r30, r25
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	eb 50       	subi	r30, 0x0B	; 11
    1044:	fe 4f       	sbci	r31, 0xFE	; 254
    1046:	8a e0       	ldi	r24, 0x0A	; 10
    1048:	80 83       	st	Z, r24
    104a:	9e 5f       	subi	r25, 0xFE	; 254
    104c:	e9 2f       	mov	r30, r25
    104e:	f0 e0       	ldi	r31, 0x00	; 0
    1050:	eb 50       	subi	r30, 0x0B	; 11
    1052:	fe 4f       	sbci	r31, 0xFE	; 254
    1054:	10 82       	st	Z, r1
    1056:	85 ef       	ldi	r24, 0xF5	; 245
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
    105e:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    1062:	88 23       	and	r24, r24
    1064:	d9 f0       	breq	.+54     	; 0x109c <ESP_SendData+0xf8>
    1066:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    106a:	82 30       	cpi	r24, 0x02	; 2
    106c:	b9 f0       	breq	.+46     	; 0x109c <ESP_SendData+0xf8>
    106e:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
    1072:	88 23       	and	r24, r24
    1074:	91 f0       	breq	.+36     	; 0x109a <ESP_SendData+0xf6>
    1076:	c8 01       	movw	r24, r16
    1078:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
    107c:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
    1080:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <RequestSent.1920>
    1084:	ff e1       	ldi	r31, 0x1F	; 31
    1086:	2f eb       	ldi	r18, 0xBF	; 191
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	f1 50       	subi	r31, 0x01	; 1
    108c:	20 40       	sbci	r18, 0x00	; 0
    108e:	80 40       	sbci	r24, 0x00	; 0
    1090:	e1 f7       	brne	.-8      	; 0x108a <ESP_SendData+0xe6>
    1092:	00 c0       	rjmp	.+0      	; 0x1094 <ESP_SendData+0xf0>
    1094:	00 00       	nop
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	01 c0       	rjmp	.+2      	; 0x109c <ESP_SendData+0xf8>
    109a:	82 e0       	ldi	r24, 0x02	; 2
    109c:	2e 96       	adiw	r28, 0x0e	; 14
    109e:	0f b6       	in	r0, 0x3f	; 63
    10a0:	f8 94       	cli
    10a2:	de bf       	out	0x3e, r29	; 62
    10a4:	0f be       	out	0x3f, r0	; 63
    10a6:	cd bf       	out	0x3d, r28	; 61
    10a8:	df 91       	pop	r29
    10aa:	cf 91       	pop	r28
    10ac:	1f 91       	pop	r17
    10ae:	0f 91       	pop	r16
    10b0:	ff 90       	pop	r15
    10b2:	ef 90       	pop	r14
    10b4:	08 95       	ret

000010b6 <ESP_ReceiveData>:
    10b6:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <RequestSent.1931>
    10ba:	81 11       	cpse	r24, r1
    10bc:	05 c0       	rjmp	.+10     	; 0x10c8 <ESP_ReceiveData+0x12>
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <RequestSent.1931>
    10c4:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
    10c8:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    10cc:	88 23       	and	r24, r24
    10ce:	d9 f1       	breq	.+118    	; 0x1146 <ESP_ReceiveData+0x90>
    10d0:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    10d4:	82 30       	cpi	r24, 0x02	; 2
    10d6:	d1 f1       	breq	.+116    	; 0x114c <ESP_ReceiveData+0x96>
    10d8:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
    10dc:	88 23       	and	r24, r24
    10de:	c9 f1       	breq	.+114    	; 0x1152 <ESP_ReceiveData+0x9c>
    10e0:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <CorrectDataReceived>
    10e4:	88 23       	and	r24, r24
    10e6:	c1 f1       	breq	.+112    	; 0x1158 <ESP_ReceiveData+0xa2>
    10e8:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <TempResponseBuffer>
    10ec:	88 23       	and	r24, r24
    10ee:	a9 f0       	breq	.+42     	; 0x111a <ESP_ReceiveData+0x64>
    10f0:	80 e0       	ldi	r24, 0x00	; 0
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	20 e0       	ldi	r18, 0x00	; 0
    10f6:	fc 01       	movw	r30, r24
    10f8:	e5 50       	subi	r30, 0x05	; 5
    10fa:	ff 4f       	sbci	r31, 0xFF	; 255
    10fc:	30 81       	ld	r19, Z
    10fe:	fc 01       	movw	r30, r24
    1100:	e1 51       	subi	r30, 0x11	; 17
    1102:	fd 4f       	sbci	r31, 0xFD	; 253
    1104:	30 83       	st	Z, r19
    1106:	2f 5f       	subi	r18, 0xFF	; 255
    1108:	82 2f       	mov	r24, r18
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	fc 01       	movw	r30, r24
    110e:	e5 50       	subi	r30, 0x05	; 5
    1110:	ff 4f       	sbci	r31, 0xFF	; 255
    1112:	30 81       	ld	r19, Z
    1114:	31 11       	cpse	r19, r1
    1116:	ef cf       	rjmp	.-34     	; 0x10f6 <ESP_ReceiveData+0x40>
    1118:	02 c0       	rjmp	.+4      	; 0x111e <ESP_ReceiveData+0x68>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	fc 01       	movw	r30, r24
    1120:	e1 51       	subi	r30, 0x11	; 17
    1122:	fd 4f       	sbci	r31, 0xFD	; 253
    1124:	10 82       	st	Z, r1
    1126:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
    112a:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <RequestSent.1931>
    112e:	2f e1       	ldi	r18, 0x1F	; 31
    1130:	8f eb       	ldi	r24, 0xBF	; 191
    1132:	92 e0       	ldi	r25, 0x02	; 2
    1134:	21 50       	subi	r18, 0x01	; 1
    1136:	80 40       	sbci	r24, 0x00	; 0
    1138:	90 40       	sbci	r25, 0x00	; 0
    113a:	e1 f7       	brne	.-8      	; 0x1134 <ESP_ReceiveData+0x7e>
    113c:	00 c0       	rjmp	.+0      	; 0x113e <ESP_ReceiveData+0x88>
    113e:	00 00       	nop
    1140:	8f ee       	ldi	r24, 0xEF	; 239
    1142:	92 e0       	ldi	r25, 0x02	; 2
    1144:	08 95       	ret
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	08 95       	ret
    114c:	82 e0       	ldi	r24, 0x02	; 2
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	08 95       	ret
    1152:	82 e0       	ldi	r24, 0x02	; 2
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	08 95       	ret
    1158:	82 e0       	ldi	r24, 0x02	; 2
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	08 95       	ret

0000115e <ESP_InitTest>:
    115e:	cf 93       	push	r28
    1160:	df 93       	push	r29
    1162:	00 d0       	rcall	.+0      	; 0x1164 <ESP_InitTest+0x6>
    1164:	1f 92       	push	r1
    1166:	cd b7       	in	r28, 0x3d	; 61
    1168:	de b7       	in	r29, 0x3e	; 62
    116a:	81 e4       	ldi	r24, 0x41	; 65
    116c:	94 e5       	ldi	r25, 0x54	; 84
    116e:	9a 83       	std	Y+2, r25	; 0x02
    1170:	89 83       	std	Y+1, r24	; 0x01
    1172:	1b 82       	std	Y+3, r1	; 0x03
    1174:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <RequestSent.1939>
    1178:	81 11       	cpse	r24, r1
    117a:	34 c0       	rjmp	.+104    	; 0x11e4 <ESP_InitTest+0x86>
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <RequestSent.1939>
    1182:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
    1186:	29 81       	ldd	r18, Y+1	; 0x01
    1188:	22 23       	and	r18, r18
    118a:	a1 f0       	breq	.+40     	; 0x11b4 <ESP_InitTest+0x56>
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	e0 e0       	ldi	r30, 0x00	; 0
    1192:	ef 5f       	subi	r30, 0xFF	; 255
    1194:	dc 01       	movw	r26, r24
    1196:	ab 50       	subi	r26, 0x0B	; 11
    1198:	be 4f       	sbci	r27, 0xFE	; 254
    119a:	2c 93       	st	X, r18
    119c:	8e 2f       	mov	r24, r30
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	a1 e0       	ldi	r26, 0x01	; 1
    11a2:	b0 e0       	ldi	r27, 0x00	; 0
    11a4:	ac 0f       	add	r26, r28
    11a6:	bd 1f       	adc	r27, r29
    11a8:	a8 0f       	add	r26, r24
    11aa:	b9 1f       	adc	r27, r25
    11ac:	2c 91       	ld	r18, X
    11ae:	21 11       	cpse	r18, r1
    11b0:	f0 cf       	rjmp	.-32     	; 0x1192 <ESP_InitTest+0x34>
    11b2:	03 c0       	rjmp	.+6      	; 0x11ba <ESP_InitTest+0x5c>
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	e0 e0       	ldi	r30, 0x00	; 0
    11ba:	dc 01       	movw	r26, r24
    11bc:	ab 50       	subi	r26, 0x0B	; 11
    11be:	be 4f       	sbci	r27, 0xFE	; 254
    11c0:	2d e0       	ldi	r18, 0x0D	; 13
    11c2:	2c 93       	st	X, r18
    11c4:	a1 e0       	ldi	r26, 0x01	; 1
    11c6:	ae 0f       	add	r26, r30
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	ab 50       	subi	r26, 0x0B	; 11
    11cc:	be 4f       	sbci	r27, 0xFE	; 254
    11ce:	8a e0       	ldi	r24, 0x0A	; 10
    11d0:	8c 93       	st	X, r24
    11d2:	ee 5f       	subi	r30, 0xFE	; 254
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
    11d6:	eb 50       	subi	r30, 0x0B	; 11
    11d8:	fe 4f       	sbci	r31, 0xFE	; 254
    11da:	10 82       	st	Z, r1
    11dc:	85 ef       	ldi	r24, 0xF5	; 245
    11de:	91 e0       	ldi	r25, 0x01	; 1
    11e0:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <UART_Write_String>
    11e4:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    11e8:	88 23       	and	r24, r24
    11ea:	c1 f0       	breq	.+48     	; 0x121c <ESP_InitTest+0xbe>
    11ec:	0e 94 01 04 	call	0x802	; 0x802 <ESP_ReadResponseLine>
    11f0:	82 30       	cpi	r24, 0x02	; 2
    11f2:	a1 f0       	breq	.+40     	; 0x121c <ESP_InitTest+0xbe>
    11f4:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <ReceivedFullResponse>
    11f8:	88 23       	and	r24, r24
    11fa:	79 f0       	breq	.+30     	; 0x121a <ESP_InitTest+0xbc>
    11fc:	0e 94 32 05 	call	0xa64	; 0xa64 <ESP_ClearResponseBuffer>
    1200:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <RequestSent.1939>
    1204:	2f e1       	ldi	r18, 0x1F	; 31
    1206:	8f eb       	ldi	r24, 0xBF	; 191
    1208:	92 e0       	ldi	r25, 0x02	; 2
    120a:	21 50       	subi	r18, 0x01	; 1
    120c:	80 40       	sbci	r24, 0x00	; 0
    120e:	90 40       	sbci	r25, 0x00	; 0
    1210:	e1 f7       	brne	.-8      	; 0x120a <ESP_InitTest+0xac>
    1212:	00 c0       	rjmp	.+0      	; 0x1214 <ESP_InitTest+0xb6>
    1214:	00 00       	nop
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	01 c0       	rjmp	.+2      	; 0x121c <ESP_InitTest+0xbe>
    121a:	82 e0       	ldi	r24, 0x02	; 2
    121c:	0f 90       	pop	r0
    121e:	0f 90       	pop	r0
    1220:	0f 90       	pop	r0
    1222:	df 91       	pop	r29
    1224:	cf 91       	pop	r28
    1226:	08 95       	ret

00001228 <WIFI_Service_Start>:
    1228:	ef 92       	push	r14
    122a:	ff 92       	push	r15
    122c:	0f 93       	push	r16
    122e:	1f 93       	push	r17
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
    1234:	7b 01       	movw	r14, r22
    1236:	8a 01       	movw	r16, r20
    1238:	e9 01       	movw	r28, r18
    123a:	81 11       	cpse	r24, r1
    123c:	18 c0       	rjmp	.+48     	; 0x126e <WIFI_Service_Start+0x46>
    123e:	0e 94 af 08 	call	0x115e	; 0x115e <ESP_InitTest>
    1242:	81 30       	cpi	r24, 0x01	; 1
    1244:	e1 f7       	brne	.-8      	; 0x123e <WIFI_Service_Start+0x16>
    1246:	82 e3       	ldi	r24, 0x32	; 50
    1248:	0e 94 57 06 	call	0xcae	; 0xcae <ESP_SelectMode>
    124c:	81 30       	cpi	r24, 0x01	; 1
    124e:	d9 f7       	brne	.-10     	; 0x1246 <WIFI_Service_Start+0x1e>
    1250:	c7 01       	movw	r24, r14
    1252:	0e 94 c1 07 	call	0xf82	; 0xf82 <ESP_StartServer>
    1256:	81 30       	cpi	r24, 0x01	; 1
    1258:	d9 f7       	brne	.-10     	; 0x1250 <WIFI_Service_Start+0x28>
    125a:	2a ee       	ldi	r18, 0xEA	; 234
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	43 e7       	ldi	r20, 0x73	; 115
    1260:	50 e0       	ldi	r21, 0x00	; 0
    1262:	be 01       	movw	r22, r28
    1264:	c8 01       	movw	r24, r16
    1266:	0e 94 d0 06 	call	0xda0	; 0xda0 <ESP_CreateAccesPoint>
    126a:	81 30       	cpi	r24, 0x01	; 1
    126c:	b1 f7       	brne	.-20     	; 0x125a <WIFI_Service_Start+0x32>
    126e:	df 91       	pop	r29
    1270:	cf 91       	pop	r28
    1272:	1f 91       	pop	r17
    1274:	0f 91       	pop	r16
    1276:	ff 90       	pop	r15
    1278:	ef 90       	pop	r14
    127a:	08 95       	ret

0000127c <__udivmodsi4>:
    127c:	a1 e2       	ldi	r26, 0x21	; 33
    127e:	1a 2e       	mov	r1, r26
    1280:	aa 1b       	sub	r26, r26
    1282:	bb 1b       	sub	r27, r27
    1284:	fd 01       	movw	r30, r26
    1286:	0d c0       	rjmp	.+26     	; 0x12a2 <__udivmodsi4_ep>

00001288 <__udivmodsi4_loop>:
    1288:	aa 1f       	adc	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	ee 1f       	adc	r30, r30
    128e:	ff 1f       	adc	r31, r31
    1290:	a2 17       	cp	r26, r18
    1292:	b3 07       	cpc	r27, r19
    1294:	e4 07       	cpc	r30, r20
    1296:	f5 07       	cpc	r31, r21
    1298:	20 f0       	brcs	.+8      	; 0x12a2 <__udivmodsi4_ep>
    129a:	a2 1b       	sub	r26, r18
    129c:	b3 0b       	sbc	r27, r19
    129e:	e4 0b       	sbc	r30, r20
    12a0:	f5 0b       	sbc	r31, r21

000012a2 <__udivmodsi4_ep>:
    12a2:	66 1f       	adc	r22, r22
    12a4:	77 1f       	adc	r23, r23
    12a6:	88 1f       	adc	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	1a 94       	dec	r1
    12ac:	69 f7       	brne	.-38     	; 0x1288 <__udivmodsi4_loop>
    12ae:	60 95       	com	r22
    12b0:	70 95       	com	r23
    12b2:	80 95       	com	r24
    12b4:	90 95       	com	r25
    12b6:	9b 01       	movw	r18, r22
    12b8:	ac 01       	movw	r20, r24
    12ba:	bd 01       	movw	r22, r26
    12bc:	cf 01       	movw	r24, r30
    12be:	08 95       	ret

000012c0 <_exit>:
    12c0:	f8 94       	cli

000012c2 <__stop_program>:
    12c2:	ff cf       	rjmp	.-2      	; 0x12c2 <__stop_program>
